// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System;

using Microsoft.Protocols.TestTools.StackSdk.Networking.Rpce;

namespace Microsoft.Protocols.TestTools.StackSdk.ActiveDirectory.Lsa
{
    /// <summary>
    /// LSA format string generated by midl
    /// </summary>
    internal static class LsaRpcStubFormatString
    {
        // LSA type format string generated by midl, converted to byte array.
        internal static byte[] TypeFormatString
        {
            get
            {
                return RpceStubHelper.CreateFormatStringByteArray(RpceStubHelper.GetPlatform() == RpceStubTargetPlatform.X86 ? X86_TYPE_FORMAT_STRING : X64_TYPE_FORMAT_STRING);
            }
        }

        // LSA proc format string generated by midl, converted to byte array.
        internal static byte[] ProcFormatString
        {
            get
            {
                return RpceStubHelper.CreateFormatStringByteArray(RpceStubHelper.GetPlatform() == RpceStubTargetPlatform.X86 ? X86_PROC_FORMAT_STRING : X64_PROC_FORMAT_STRING);
            }
        }

        // LSA offset of proc format string for every procedure, copied from MIDL generated stub.
        internal static ushort[] ProcFormatStringOffsetTable
        {
            get
            {
                return RpceStubHelper.GetPlatform() == RpceStubTargetPlatform.X86 ? X86_ProcFormatStringOffsetTable : X64_ProcFormatStringOffsetTable;
            }
        }

        #region X86

        // LSA offset of proc format string for every procedure, copied from MIDL generated stub.
        internal static readonly ushort[] X86_ProcFormatStringOffsetTable = new ushort[]
        {
            0,
            42,
            70,
            130,
            184,
            238,
            266,
            320,
            374,
            428,
            456,
            516,
            576,
            636,
            696,
            774,
            846,
            906,
            966,
            1014,
            1062,
            1116,
            1144,
            1172,
            1220,
            1268,
            1328,
            1382,
            1436,
            1496,
            1550,
            1616,
            1670,
            1724,
            1796,
            1838,
            1892,
            1946,
            2000,
            2060,
            2120,
            2180,
            2228,
            2282,
            2336,
            2390,
            2442,
            2496,
            2550,
            2610,
            2670,
            2730,
            2796,
            2824,
            2878,
            2932,
            2992,
            3020,
            3104,
            3194,
            3260,
            3288,
            3316,
            3344,
            3372,
            3400,
            3428,
            3456,
            3484,
            3574,
            3602,
            3630,
            3658,
            3686,
            3746,
            3818,
            3846,
            3922
        };

        // LSA proc format string generated by midl
        private const string X86_PROC_FORMAT_STRING = @"
    /* Procedure LsarClose */

            0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/*  2 */    NdrFcLong( 0x0 ),   /* 0 */
/*  6 */    NdrFcShort( 0x0 ),  /* 0 */
/*  8 */    NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 10 */    0x30,       /* FC_BIND_CONTEXT */
            0xe0,       /* Ctxt flags:  via ptr, in, out, */
/* 12 */    NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 14 */    0x0,        /* 0 */
            0x0,        /* 0 */
/* 16 */    NdrFcShort( 0x38 ), /* 56 */
/* 18 */    NdrFcShort( 0x40 ), /* 64 */
/* 20 */    0x44,       /* Oi2 Flags:  has return, has ext, */
            0x2,        /* 2 */
/* 22 */    0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 24 */    NdrFcShort( 0x0 ),  /* 0 */
/* 26 */    NdrFcShort( 0x0 ),  /* 0 */
/* 28 */    NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter ObjectHandle */

/* 30 */    NdrFcShort( 0x118 ),    /* Flags:  in, out, simple ref, */
/* 32 */    NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 34 */    NdrFcShort( 0x6 ),  /* Type Offset=6 */

    /* Return value */

/* 36 */    NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 38 */    NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 40 */    0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure Opnum1NotUsedOnWire */

/* 42 */    0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 44 */    NdrFcLong( 0x0 ),   /* 0 */
/* 48 */    NdrFcShort( 0x1 ),  /* 1 */
/* 50 */    NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 52 */    0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 54 */    NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 56 */    NdrFcShort( 0x0 ),  /* 0 */
/* 58 */    NdrFcShort( 0x0 ),  /* 0 */
/* 60 */    0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 62 */    0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 64 */    NdrFcShort( 0x0 ),  /* 0 */
/* 66 */    NdrFcShort( 0x0 ),  /* 0 */
/* 68 */    NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure LsarEnumeratePrivileges */


    /* Parameter IDL_handle */

/* 70 */    0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 72 */    NdrFcLong( 0x0 ),   /* 0 */
/* 76 */    NdrFcShort( 0x2 ),  /* 2 */
/* 78 */    NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 80 */    0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 82 */    NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 84 */    0x0,        /* 0 */
            0x0,        /* 0 */
/* 86 */    NdrFcShort( 0x48 ), /* 72 */
/* 88 */    NdrFcShort( 0x24 ), /* 36 */
/* 90 */    0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x5,        /* 5 */
/* 92 */    0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 94 */    NdrFcShort( 0x2 ),  /* 2 */
/* 96 */    NdrFcShort( 0x0 ),  /* 0 */
/* 98 */    NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 100 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 102 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 104 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter EnumerationContext */

/* 106 */   NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 108 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 110 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter EnumerationBuffer */

/* 112 */   NdrFcShort( 0x2113 ),   /* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 114 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 116 */   NdrFcShort( 0x6c ), /* Type Offset=108 */

    /* Parameter PreferedMaximumLength */

/* 118 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 120 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 122 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 124 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 126 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 128 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarQuerySecurityObject */

/* 130 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 132 */   NdrFcLong( 0x0 ),   /* 0 */
/* 136 */   NdrFcShort( 0x3 ),  /* 3 */
/* 138 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 140 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 142 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 144 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 146 */   NdrFcShort( 0x2c ), /* 44 */
/* 148 */   NdrFcShort( 0x8 ),  /* 8 */
/* 150 */   0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x4,        /* 4 */
/* 152 */   0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 154 */   NdrFcShort( 0x1 ),  /* 1 */
/* 156 */   NdrFcShort( 0x0 ),  /* 0 */
/* 158 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter ObjectHandle */

/* 160 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 162 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 164 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter SecurityInformation */

/* 166 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 168 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 170 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter SecurityDescriptor */

/* 172 */   NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 174 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 176 */   NdrFcShort( 0x80 ), /* Type Offset=128 */

    /* Return value */

/* 178 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 180 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 182 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetSecurityObject */

/* 184 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 186 */   NdrFcLong( 0x0 ),   /* 0 */
/* 190 */   NdrFcShort( 0x4 ),  /* 4 */
/* 192 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 194 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 196 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 198 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 200 */   NdrFcShort( 0x2c ), /* 44 */
/* 202 */   NdrFcShort( 0x8 ),  /* 8 */
/* 204 */   0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 206 */   0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 208 */   NdrFcShort( 0x0 ),  /* 0 */
/* 210 */   NdrFcShort( 0x1 ),  /* 1 */
/* 212 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter ObjectHandle */

/* 214 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 216 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 218 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter SecurityInformation */

/* 220 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 222 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 224 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter SecurityDescriptor */

/* 226 */   NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 228 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 230 */   NdrFcShort( 0x9e ), /* Type Offset=158 */

    /* Return value */

/* 232 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 234 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 236 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure Opnum5NotUsedOnWire */

/* 238 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 240 */   NdrFcLong( 0x0 ),   /* 0 */
/* 244 */   NdrFcShort( 0x5 ),  /* 5 */
/* 246 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 248 */   0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 250 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 252 */   NdrFcShort( 0x0 ),  /* 0 */
/* 254 */   NdrFcShort( 0x0 ),  /* 0 */
/* 256 */   0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 258 */   0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 260 */   NdrFcShort( 0x0 ),  /* 0 */
/* 262 */   NdrFcShort( 0x0 ),  /* 0 */
/* 264 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure LsarOpenPolicy */


    /* Parameter IDL_handle */

/* 266 */   0x33,       /* FC_AUTO_HANDLE */
            0x48,       /* Old Flags:  */
/* 268 */   NdrFcLong( 0x0 ),   /* 0 */
/* 272 */   NdrFcShort( 0x6 ),  /* 6 */
/* 274 */   NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 276 */   NdrFcShort( 0x22 ), /* 34 */
/* 278 */   NdrFcShort( 0x40 ), /* 64 */
/* 280 */   0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 282 */   0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 284 */   NdrFcShort( 0x0 ),  /* 0 */
/* 286 */   NdrFcShort( 0xb ),  /* 11 */
/* 288 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter SystemName */

/* 290 */   NdrFcShort( 0xa ),  /* Flags:  must free, in, */
/* 292 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 294 */   NdrFcShort( 0xb4 ), /* Type Offset=180 */

    /* Parameter ObjectAttributes */

/* 296 */   NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 298 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 300 */   NdrFcShort( 0x16a ),    /* Type Offset=362 */

    /* Parameter DesiredAccess */

/* 302 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 304 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 306 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter PolicyHandle */

/* 308 */   NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 310 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 312 */   NdrFcShort( 0x1a4 ),    /* Type Offset=420 */

    /* Return value */

/* 314 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 316 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 318 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarQueryInformationPolicy */

/* 320 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 322 */   NdrFcLong( 0x0 ),   /* 0 */
/* 326 */   NdrFcShort( 0x7 ),  /* 7 */
/* 328 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 330 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 332 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 334 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 336 */   NdrFcShort( 0x2a ), /* 42 */
/* 338 */   NdrFcShort( 0x8 ),  /* 8 */
/* 340 */   0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x4,        /* 4 */
/* 342 */   0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 344 */   NdrFcShort( 0x405 ),    /* 1029 */
/* 346 */   NdrFcShort( 0x0 ),  /* 0 */
/* 348 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 350 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 352 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 354 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter InformationClass */

/* 356 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 358 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 360 */   0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter PolicyInformation */

/* 362 */   NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 364 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 366 */   NdrFcShort( 0x1a8 ),    /* Type Offset=424 */

    /* Return value */

/* 368 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 370 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 372 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetInformationPolicy */

/* 374 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 376 */   NdrFcLong( 0x0 ),   /* 0 */
/* 380 */   NdrFcShort( 0x8 ),  /* 8 */
/* 382 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 384 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 386 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 388 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 390 */   NdrFcShort( 0x2a ), /* 42 */
/* 392 */   NdrFcShort( 0x8 ),  /* 8 */
/* 394 */   0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 396 */   0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 398 */   NdrFcShort( 0x0 ),  /* 0 */
/* 400 */   NdrFcShort( 0x4c4 ),    /* 1220 */
/* 402 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 404 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 406 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 408 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter InformationClass */

/* 410 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 412 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 414 */   0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter PolicyInformation */

/* 416 */   NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 418 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 420 */   NdrFcShort( 0x34c ),    /* Type Offset=844 */

    /* Return value */

/* 422 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 424 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 426 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure Opnum9NotUsedOnWire */

/* 428 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 430 */   NdrFcLong( 0x0 ),   /* 0 */
/* 434 */   NdrFcShort( 0x9 ),  /* 9 */
/* 436 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 438 */   0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 440 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 442 */   NdrFcShort( 0x0 ),  /* 0 */
/* 444 */   NdrFcShort( 0x0 ),  /* 0 */
/* 446 */   0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 448 */   0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 450 */   NdrFcShort( 0x0 ),  /* 0 */
/* 452 */   NdrFcShort( 0x0 ),  /* 0 */
/* 454 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure LsarCreateAccount */


    /* Parameter IDL_handle */

/* 456 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 458 */   NdrFcLong( 0x0 ),   /* 0 */
/* 462 */   NdrFcShort( 0xa ),  /* 10 */
/* 464 */   NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 466 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 468 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 470 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 472 */   NdrFcShort( 0x2c ), /* 44 */
/* 474 */   NdrFcShort( 0x40 ), /* 64 */
/* 476 */   0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 478 */   0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 480 */   NdrFcShort( 0x0 ),  /* 0 */
/* 482 */   NdrFcShort( 0x1 ),  /* 1 */
/* 484 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 486 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 488 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 490 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter AccountSid */

/* 492 */   NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 494 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 496 */   NdrFcShort( 0x100 ),    /* Type Offset=256 */

    /* Parameter DesiredAccess */

/* 498 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 500 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 502 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter AccountHandle */

/* 504 */   NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 506 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 508 */   NdrFcShort( 0x35e ),    /* Type Offset=862 */

    /* Return value */

/* 510 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 512 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 514 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarEnumerateAccounts */

/* 516 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 518 */   NdrFcLong( 0x0 ),   /* 0 */
/* 522 */   NdrFcShort( 0xb ),  /* 11 */
/* 524 */   NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 526 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 528 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 530 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 532 */   NdrFcShort( 0x48 ), /* 72 */
/* 534 */   NdrFcShort( 0x24 ), /* 36 */
/* 536 */   0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x5,        /* 5 */
/* 538 */   0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 540 */   NdrFcShort( 0x2 ),  /* 2 */
/* 542 */   NdrFcShort( 0x0 ),  /* 0 */
/* 544 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 546 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 548 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 550 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter EnumerationContext */

/* 552 */   NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 554 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 556 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter EnumerationBuffer */

/* 558 */   NdrFcShort( 0x2113 ),   /* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 560 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 562 */   NdrFcShort( 0x39c ),    /* Type Offset=924 */

    /* Parameter PreferedMaximumLength */

/* 564 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 566 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 568 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 570 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 572 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 574 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarCreateTrustedDomain */

/* 576 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 578 */   NdrFcLong( 0x0 ),   /* 0 */
/* 582 */   NdrFcShort( 0xc ),  /* 12 */
/* 584 */   NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 586 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 588 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 590 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 592 */   NdrFcShort( 0x2c ), /* 44 */
/* 594 */   NdrFcShort( 0x40 ), /* 64 */
/* 596 */   0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 598 */   0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 600 */   NdrFcShort( 0x0 ),  /* 0 */
/* 602 */   NdrFcShort( 0x39 ), /* 57 */
/* 604 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 606 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 608 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 610 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainInformation */

/* 612 */   NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 614 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 616 */   NdrFcShort( 0x256 ),    /* Type Offset=598 */

    /* Parameter DesiredAccess */

/* 618 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 620 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 622 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter TrustedDomainHandle */

/* 624 */   NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 626 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 628 */   NdrFcShort( 0x35e ),    /* Type Offset=862 */

    /* Return value */

/* 630 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 632 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 634 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarEnumerateTrustedDomains */

/* 636 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 638 */   NdrFcLong( 0x0 ),   /* 0 */
/* 642 */   NdrFcShort( 0xd ),  /* 13 */
/* 644 */   NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 646 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 648 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 650 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 652 */   NdrFcShort( 0x48 ), /* 72 */
/* 654 */   NdrFcShort( 0x24 ), /* 36 */
/* 656 */   0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x5,        /* 5 */
/* 658 */   0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 660 */   NdrFcShort( 0x3 ),  /* 3 */
/* 662 */   NdrFcShort( 0x0 ),  /* 0 */
/* 664 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 666 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 668 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 670 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter EnumerationContext */

/* 672 */   NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 674 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 676 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter EnumerationBuffer */

/* 678 */   NdrFcShort( 0x2113 ),   /* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 680 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 682 */   NdrFcShort( 0x3e2 ),    /* Type Offset=994 */

    /* Parameter PreferedMaximumLength */

/* 684 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 686 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 688 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 690 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 692 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 694 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarLookupNames */

/* 696 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 698 */   NdrFcLong( 0x0 ),   /* 0 */
/* 702 */   NdrFcShort( 0xe ),  /* 14 */
/* 704 */   NdrFcShort( 0x20 ), /* x86 Stack size/offset = 32 */
/* 706 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 708 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 710 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 712 */   NdrFcShort( 0x4e ), /* 78 */
/* 714 */   NdrFcShort( 0x24 ), /* 36 */
/* 716 */   0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x8,        /* 8 */
/* 718 */   0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 720 */   NdrFcShort( 0x9a ), /* 154 */
/* 722 */   NdrFcShort( 0x3 ),  /* 3 */
/* 724 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 726 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 728 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 730 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter Count */

/* 732 */   NdrFcShort( 0x88 ), /* Flags:  in, by val, */
/* 734 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 736 */   NdrFcShort( 0x3f6 ),    /* 1014 */

    /* Parameter Names */

/* 738 */   NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 740 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 742 */   NdrFcShort( 0x404 ),    /* Type Offset=1028 */

    /* Parameter ReferencedDomains */

/* 744 */   NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 746 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 748 */   NdrFcShort( 0x426 ),    /* Type Offset=1062 */

    /* Parameter TranslatedSids */

/* 750 */   NdrFcShort( 0x11b ),    /* Flags:  must size, must free, in, out, simple ref, */
/* 752 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 754 */   NdrFcShort( 0x474 ),    /* Type Offset=1140 */

    /* Parameter LookupLevel */

/* 756 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 758 */   NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 760 */   0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter MappedCount */

/* 762 */   NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 764 */   NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 766 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 768 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 770 */   NdrFcShort( 0x1c ), /* x86 Stack size/offset = 28 */
/* 772 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarLookupSids */

/* 774 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 776 */   NdrFcLong( 0x0 ),   /* 0 */
/* 780 */   NdrFcShort( 0xf ),  /* 15 */
/* 782 */   NdrFcShort( 0x1c ), /* x86 Stack size/offset = 28 */
/* 784 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 786 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 788 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 790 */   NdrFcShort( 0x46 ), /* 70 */
/* 792 */   NdrFcShort( 0x24 ), /* 36 */
/* 794 */   0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x7,        /* 7 */
/* 796 */   0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 798 */   NdrFcShort( 0x12f ),    /* 303 */
/* 800 */   NdrFcShort( 0x4 ),  /* 4 */
/* 802 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 804 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 806 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 808 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter SidEnumBuffer */

/* 810 */   NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 812 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 814 */   NdrFcShort( 0x494 ),    /* Type Offset=1172 */

    /* Parameter ReferencedDomains */

/* 816 */   NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 818 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 820 */   NdrFcShort( 0x426 ),    /* Type Offset=1062 */

    /* Parameter TranslatedNames */

/* 822 */   NdrFcShort( 0x11b ),    /* Flags:  must size, must free, in, out, simple ref, */
/* 824 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 826 */   NdrFcShort( 0x4da ),    /* Type Offset=1242 */

    /* Parameter LookupLevel */

/* 828 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 830 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 832 */   0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter MappedCount */

/* 834 */   NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 836 */   NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 838 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 840 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 842 */   NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 844 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarCreateSecret */

/* 846 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 848 */   NdrFcLong( 0x0 ),   /* 0 */
/* 852 */   NdrFcShort( 0x10 ), /* 16 */
/* 854 */   NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 856 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 858 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 860 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 862 */   NdrFcShort( 0x2c ), /* 44 */
/* 864 */   NdrFcShort( 0x40 ), /* 64 */
/* 866 */   0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 868 */   0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 870 */   NdrFcShort( 0x0 ),  /* 0 */
/* 872 */   NdrFcShort( 0x1 ),  /* 1 */
/* 874 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 876 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 878 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 880 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter SecretName */

/* 882 */   NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 884 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 886 */   NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter DesiredAccess */

/* 888 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 890 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 892 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter SecretHandle */

/* 894 */   NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 896 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 898 */   NdrFcShort( 0x35e ),    /* Type Offset=862 */

    /* Return value */

/* 900 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 902 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 904 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarOpenAccount */

/* 906 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 908 */   NdrFcLong( 0x0 ),   /* 0 */
/* 912 */   NdrFcShort( 0x11 ), /* 17 */
/* 914 */   NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 916 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 918 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 920 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 922 */   NdrFcShort( 0x2c ), /* 44 */
/* 924 */   NdrFcShort( 0x40 ), /* 64 */
/* 926 */   0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 928 */   0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 930 */   NdrFcShort( 0x0 ),  /* 0 */
/* 932 */   NdrFcShort( 0x1 ),  /* 1 */
/* 934 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 936 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 938 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 940 */   NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter AccountSid */

/* 942 */   NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 944 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 946 */   NdrFcShort( 0x100 ),    /* Type Offset=256 */

    /* Parameter DesiredAccess */

/* 948 */   NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 950 */   NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 952 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter AccountHandle */

/* 954 */   NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 956 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 958 */   NdrFcShort( 0x35e ),    /* Type Offset=862 */

    /* Return value */

/* 960 */   NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 962 */   NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 964 */   0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarEnumeratePrivilegesAccount */

/* 966 */   0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 968 */   NdrFcLong( 0x0 ),   /* 0 */
/* 972 */   NdrFcShort( 0x12 ), /* 18 */
/* 974 */   NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 976 */   0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 978 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 980 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 982 */   NdrFcShort( 0x24 ), /* 36 */
/* 984 */   NdrFcShort( 0x8 ),  /* 8 */
/* 986 */   0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x3,        /* 3 */
/* 988 */   0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 990 */   NdrFcShort( 0x1 ),  /* 1 */
/* 992 */   NdrFcShort( 0x0 ),  /* 0 */
/* 994 */   NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter AccountHandle */

/* 996 */   NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 998 */   NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1000 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter Privileges */

/* 1002 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 1004 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1006 */  NdrFcShort( 0x4f0 ),    /* Type Offset=1264 */

    /* Return value */

/* 1008 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1010 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1012 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarAddPrivilegesToAccount */

/* 1014 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1016 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1020 */  NdrFcShort( 0x13 ), /* 19 */
/* 1022 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1024 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1026 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1028 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1030 */  NdrFcShort( 0x24 ), /* 36 */
/* 1032 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1034 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x3,        /* 3 */
/* 1036 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 1038 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1040 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1042 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter AccountHandle */

/* 1044 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1046 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1048 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter Privileges */

/* 1050 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 1052 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1054 */  NdrFcShort( 0x51c ),    /* Type Offset=1308 */

    /* Return value */

/* 1056 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1058 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1060 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarRemovePrivilegesFromAccount */

/* 1062 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1064 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1068 */  NdrFcShort( 0x14 ), /* 20 */
/* 1070 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1072 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1074 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1076 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1078 */  NdrFcShort( 0x29 ), /* 41 */
/* 1080 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1082 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 1084 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 1086 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1088 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1090 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter AccountHandle */

/* 1092 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1094 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1096 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter AllPrivileges */

/* 1098 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 1100 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1102 */  0x2,        /* FC_CHAR */
            0x0,        /* 0 */

    /* Parameter Privileges */

/* 1104 */  NdrFcShort( 0xb ),  /* Flags:  must size, must free, in, */
/* 1106 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1108 */  NdrFcShort( 0x4f4 ),    /* Type Offset=1268 */

    /* Return value */

/* 1110 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1112 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1114 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure Opnum21NotUsedOnWire */

/* 1116 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1118 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1122 */  NdrFcShort( 0x15 ), /* 21 */
/* 1124 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1126 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 1128 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1130 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1132 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1134 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 1136 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 1138 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1140 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1142 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum22NotUsedOnWire */


    /* Parameter IDL_handle */

/* 1144 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1146 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1150 */  NdrFcShort( 0x16 ), /* 22 */
/* 1152 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1154 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 1156 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1158 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1160 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1162 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 1164 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 1166 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1168 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1170 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure LsarGetSystemAccessAccount */


    /* Parameter IDL_handle */

/* 1172 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1174 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1178 */  NdrFcShort( 0x17 ), /* 23 */
/* 1180 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1182 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1184 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1186 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1188 */  NdrFcShort( 0x24 ), /* 36 */
/* 1190 */  NdrFcShort( 0x24 ), /* 36 */
/* 1192 */  0x44,       /* Oi2 Flags:  has return, has ext, */
            0x3,        /* 3 */
/* 1194 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 1196 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1198 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1200 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter AccountHandle */

/* 1202 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1204 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1206 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter SystemAccess */

/* 1208 */  NdrFcShort( 0x2150 ),   /* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 1210 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1212 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 1214 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1216 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1218 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetSystemAccessAccount */

/* 1220 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1222 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1226 */  NdrFcShort( 0x18 ), /* 24 */
/* 1228 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1230 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1232 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1234 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1236 */  NdrFcShort( 0x2c ), /* 44 */
/* 1238 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1240 */  0x44,       /* Oi2 Flags:  has return, has ext, */
            0x3,        /* 3 */
/* 1242 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 1244 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1246 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1248 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter AccountHandle */

/* 1250 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1252 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1254 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter SystemAccess */

/* 1256 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 1258 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1260 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 1262 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1264 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1266 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarOpenTrustedDomain */

/* 1268 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1270 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1274 */  NdrFcShort( 0x19 ), /* 25 */
/* 1276 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 1278 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1280 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1282 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1284 */  NdrFcShort( 0x2c ), /* 44 */
/* 1286 */  NdrFcShort( 0x40 ), /* 64 */
/* 1288 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 1290 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 1292 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1294 */  NdrFcShort( 0xc ),  /* 12 */
/* 1296 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 1298 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1300 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1302 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainSid */

/* 1304 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 1306 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1308 */  NdrFcShort( 0x100 ),    /* Type Offset=256 */

    /* Parameter DesiredAccess */

/* 1310 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 1312 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1314 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter TrustedDomainHandle */

/* 1316 */  NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 1318 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1320 */  NdrFcShort( 0x35e ),    /* Type Offset=862 */

    /* Return value */

/* 1322 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1324 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1326 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarQueryInfoTrustedDomain */

/* 1328 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1330 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1334 */  NdrFcShort( 0x1a ), /* 26 */
/* 1336 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1338 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1340 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1342 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1344 */  NdrFcShort( 0x2a ), /* 42 */
/* 1346 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1348 */  0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x4,        /* 4 */
/* 1350 */  0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 1352 */  NdrFcShort( 0x6d0 ),    /* 1744 */
/* 1354 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1356 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter TrustedDomainHandle */

/* 1358 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1360 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1362 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter InformationClass */

/* 1364 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 1366 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1368 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter TrustedDomainInformation */

/* 1370 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 1372 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1374 */  NdrFcShort( 0x532 ),    /* Type Offset=1330 */

    /* Return value */

/* 1376 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1378 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1380 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetInformationTrustedDomain */

/* 1382 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1384 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1388 */  NdrFcShort( 0x1b ), /* 27 */
/* 1390 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1392 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1394 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1396 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1398 */  NdrFcShort( 0x2a ), /* 42 */
/* 1400 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1402 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 1404 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 1406 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1408 */  NdrFcShort( 0x83d ),    /* 2109 */
/* 1410 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter TrustedDomainHandle */

/* 1412 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1414 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1416 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter InformationClass */

/* 1418 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 1420 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1422 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter TrustedDomainInformation */

/* 1424 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 1426 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1428 */  NdrFcShort( 0x786 ),    /* Type Offset=1926 */

    /* Return value */

/* 1430 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1432 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1434 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarOpenSecret */

/* 1436 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1438 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1442 */  NdrFcShort( 0x1c ), /* 28 */
/* 1444 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 1446 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1448 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1450 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1452 */  NdrFcShort( 0x2c ), /* 44 */
/* 1454 */  NdrFcShort( 0x40 ), /* 64 */
/* 1456 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 1458 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 1460 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1462 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1464 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 1466 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1468 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1470 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter SecretName */

/* 1472 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 1474 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1476 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter DesiredAccess */

/* 1478 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 1480 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1482 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter SecretHandle */

/* 1484 */  NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 1486 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1488 */  NdrFcShort( 0x35e ),    /* Type Offset=862 */

    /* Return value */

/* 1490 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1492 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1494 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetSecret */

/* 1496 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1498 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1502 */  NdrFcShort( 0x1d ), /* 29 */
/* 1504 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1506 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1508 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1510 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1512 */  NdrFcShort( 0x24 ), /* 36 */
/* 1514 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1516 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 1518 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 1520 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1522 */  NdrFcShort( 0x7 ),  /* 7 */
/* 1524 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter SecretHandle */

/* 1526 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1528 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1530 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter EncryptedCurrentValue */

/* 1532 */  NdrFcShort( 0xb ),  /* Flags:  must size, must free, in, */
/* 1534 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1536 */  NdrFcShort( 0x790 ),    /* Type Offset=1936 */

    /* Parameter EncryptedOldValue */

/* 1538 */  NdrFcShort( 0xb ),  /* Flags:  must size, must free, in, */
/* 1540 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1542 */  NdrFcShort( 0x790 ),    /* Type Offset=1936 */

    /* Return value */

/* 1544 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1546 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1548 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarQuerySecret */

/* 1550 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1552 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1556 */  NdrFcShort( 0x1e ), /* 30 */
/* 1558 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 1560 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1562 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1564 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1566 */  NdrFcShort( 0x7c ), /* 124 */
/* 1568 */  NdrFcShort( 0x60 ), /* 96 */
/* 1570 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x6,        /* 6 */
/* 1572 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1574 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1576 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1578 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter SecretHandle */

/* 1580 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1582 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1584 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter EncryptedCurrentValue */

/* 1586 */  NdrFcShort( 0x201b ),   /* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 1588 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1590 */  NdrFcShort( 0x794 ),    /* Type Offset=1940 */

    /* Parameter CurrentValueSetTime */

/* 1592 */  NdrFcShort( 0x1a ), /* Flags:  must free, in, out, */
/* 1594 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1596 */  NdrFcShort( 0x798 ),    /* Type Offset=1944 */

    /* Parameter EncryptedOldValue */

/* 1598 */  NdrFcShort( 0x201b ),   /* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 1600 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1602 */  NdrFcShort( 0x794 ),    /* Type Offset=1940 */

    /* Parameter OldValueSetTime */

/* 1604 */  NdrFcShort( 0x1a ), /* Flags:  must free, in, out, */
/* 1606 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1608 */  NdrFcShort( 0x798 ),    /* Type Offset=1944 */

    /* Return value */

/* 1610 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1612 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 1614 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarLookupPrivilegeValue */

/* 1616 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1618 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1622 */  NdrFcShort( 0x1f ), /* 31 */
/* 1624 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1626 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1628 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1630 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1632 */  NdrFcShort( 0x24 ), /* 36 */
/* 1634 */  NdrFcShort( 0x34 ), /* 52 */
/* 1636 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 1638 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 1640 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1642 */  NdrFcShort( 0x43 ), /* 67 */
/* 1644 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 1646 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1648 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1650 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter Name */

/* 1652 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 1654 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1656 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter Value */

/* 1658 */  NdrFcShort( 0x2112 ),   /* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 1660 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1662 */  NdrFcShort( 0x16 ), /* Type Offset=22 */

    /* Return value */

/* 1664 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1666 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1668 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarLookupPrivilegeName */

/* 1670 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1672 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1676 */  NdrFcShort( 0x20 ), /* 32 */
/* 1678 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1680 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1682 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1684 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1686 */  NdrFcShort( 0x50 ), /* 80 */
/* 1688 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1690 */  0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x4,        /* 4 */
/* 1692 */  0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 1694 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1696 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1698 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 1700 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1702 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1704 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter Value */

/* 1706 */  NdrFcShort( 0x10a ),    /* Flags:  must free, in, simple ref, */
/* 1708 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1710 */  NdrFcShort( 0x16 ), /* Type Offset=22 */

    /* Parameter Name */

/* 1712 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 1714 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1716 */  NdrFcShort( 0x7a4 ),    /* Type Offset=1956 */

    /* Return value */

/* 1718 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1720 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1722 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarLookupPrivilegeDisplayName */

/* 1724 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1726 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1730 */  NdrFcShort( 0x21 ), /* 33 */
/* 1732 */  NdrFcShort( 0x1c ), /* x86 Stack size/offset = 28 */
/* 1734 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1736 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1738 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1740 */  NdrFcShort( 0x30 ), /* 48 */
/* 1742 */  NdrFcShort( 0x22 ), /* 34 */
/* 1744 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x7,        /* 7 */
/* 1746 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1748 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1750 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1752 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 1754 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1756 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1758 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter Name */

/* 1760 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 1762 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1764 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter ClientLanguage */

/* 1766 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 1768 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1770 */  0x6,        /* FC_SHORT */
            0x0,        /* 0 */

    /* Parameter ClientSystemDefaultLanguage */

/* 1772 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 1774 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1776 */  0x6,        /* FC_SHORT */
            0x0,        /* 0 */

    /* Parameter DisplayName */

/* 1778 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 1780 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1782 */  NdrFcShort( 0x7a4 ),    /* Type Offset=1956 */

    /* Parameter LanguageReturned */

/* 1784 */  NdrFcShort( 0x2150 ),   /* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 1786 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 1788 */  0x6,        /* FC_SHORT */
            0x0,        /* 0 */

    /* Return value */

/* 1790 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1792 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 1794 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarDeleteObject */

/* 1796 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1798 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1802 */  NdrFcShort( 0x22 ), /* 34 */
/* 1804 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1806 */  0x30,       /* FC_BIND_CONTEXT */
            0xe0,       /* Ctxt flags:  via ptr, in, out, */
/* 1808 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1810 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1812 */  NdrFcShort( 0x38 ), /* 56 */
/* 1814 */  NdrFcShort( 0x40 ), /* 64 */
/* 1816 */  0x44,       /* Oi2 Flags:  has return, has ext, */
            0x2,        /* 2 */
/* 1818 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 1820 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1822 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1824 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter ObjectHandle */

/* 1826 */  NdrFcShort( 0x118 ),    /* Flags:  in, out, simple ref, */
/* 1828 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1830 */  NdrFcShort( 0x6 ),  /* Type Offset=6 */

    /* Return value */

/* 1832 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1834 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1836 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarEnumerateAccountsWithUserRight */

/* 1838 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1840 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1844 */  NdrFcShort( 0x23 ), /* 35 */
/* 1846 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1848 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1850 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1852 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1854 */  NdrFcShort( 0x24 ), /* 36 */
/* 1856 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1858 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 1860 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1862 */  NdrFcShort( 0x10 ), /* 16 */
/* 1864 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1866 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 1868 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1870 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1872 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter UserRight */

/* 1874 */  NdrFcShort( 0xb ),  /* Flags:  must size, must free, in, */
/* 1876 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1878 */  NdrFcShort( 0x7a8 ),    /* Type Offset=1960 */

    /* Parameter EnumerationBuffer */

/* 1880 */  NdrFcShort( 0x2113 ),   /* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1882 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1884 */  NdrFcShort( 0x39c ),    /* Type Offset=924 */

    /* Return value */

/* 1886 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1888 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1890 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarEnumerateAccountRights */

/* 1892 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1894 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1898 */  NdrFcShort( 0x24 ), /* 36 */
/* 1900 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1902 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1904 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1906 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1908 */  NdrFcShort( 0x24 ), /* 36 */
/* 1910 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1912 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 1914 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1916 */  NdrFcShort( 0x2 ),  /* 2 */
/* 1918 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1920 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 1922 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1924 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1926 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter AccountSid */

/* 1928 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 1930 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1932 */  NdrFcShort( 0x100 ),    /* Type Offset=256 */

    /* Parameter UserRights */

/* 1934 */  NdrFcShort( 0x2113 ),   /* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1936 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1938 */  NdrFcShort( 0x7be ),    /* Type Offset=1982 */

    /* Return value */

/* 1940 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1942 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1944 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarAddAccountRights */

/* 1946 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 1948 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1952 */  NdrFcShort( 0x25 ), /* 37 */
/* 1954 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 1956 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 1958 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1960 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 1962 */  NdrFcShort( 0x24 ), /* 36 */
/* 1964 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1966 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 1968 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 1970 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1972 */  NdrFcShort( 0x11 ), /* 17 */
/* 1974 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 1976 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 1978 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 1980 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter AccountSid */

/* 1982 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 1984 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1986 */  NdrFcShort( 0x100 ),    /* Type Offset=256 */

    /* Parameter UserRights */

/* 1988 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 1990 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 1992 */  NdrFcShort( 0x7be ),    /* Type Offset=1982 */

    /* Return value */

/* 1994 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 1996 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 1998 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarRemoveAccountRights */

/* 2000 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2002 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2006 */  NdrFcShort( 0x26 ), /* 38 */
/* 2008 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2010 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2012 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2014 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2016 */  NdrFcShort( 0x29 ), /* 41 */
/* 2018 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2020 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 2022 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2024 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2026 */  NdrFcShort( 0x47 ), /* 71 */
/* 2028 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2030 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2032 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2034 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter AccountSid */

/* 2036 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2038 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2040 */  NdrFcShort( 0x100 ),    /* Type Offset=256 */

    /* Parameter AllRights */

/* 2042 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2044 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2046 */  0x2,        /* FC_CHAR */
            0x0,        /* 0 */

    /* Parameter UserRights */

/* 2048 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2050 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2052 */  NdrFcShort( 0x7be ),    /* Type Offset=1982 */

    /* Return value */

/* 2054 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2056 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2058 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarQueryTrustedDomainInfo */

/* 2060 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2062 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2066 */  NdrFcShort( 0x27 ), /* 39 */
/* 2068 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2070 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2072 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2074 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2076 */  NdrFcShort( 0x2a ), /* 42 */
/* 2078 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2080 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 2082 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2084 */  NdrFcShort( 0xa1b ),    /* 2587 */
/* 2086 */  NdrFcShort( 0xf ),  /* 15 */
/* 2088 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2090 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2092 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2094 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainSid */

/* 2096 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2098 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2100 */  NdrFcShort( 0x100 ),    /* Type Offset=256 */

    /* Parameter InformationClass */

/* 2102 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2104 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2106 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter TrustedDomainInformation */

/* 2108 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 2110 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2112 */  NdrFcShort( 0x7d4 ),    /* Type Offset=2004 */

    /* Return value */

/* 2114 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2116 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2118 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetTrustedDomainInfo */

/* 2120 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2122 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2126 */  NdrFcShort( 0x28 ), /* 40 */
/* 2128 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2130 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2132 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2134 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2136 */  NdrFcShort( 0x2a ), /* 42 */
/* 2138 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2140 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 2142 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2144 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2146 */  NdrFcShort( 0xbd7 ),    /* 3031 */
/* 2148 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2150 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2152 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2154 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainSid */

/* 2156 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2158 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2160 */  NdrFcShort( 0x100 ),    /* Type Offset=256 */

    /* Parameter InformationClass */

/* 2162 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2164 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2166 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter TrustedDomainInformation */

/* 2168 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2170 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2172 */  NdrFcShort( 0x7ea ),    /* Type Offset=2026 */

    /* Return value */

/* 2174 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2176 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2178 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarDeleteTrustedDomain */

/* 2180 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2182 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2186 */  NdrFcShort( 0x29 ), /* 41 */
/* 2188 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2190 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2192 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2194 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2196 */  NdrFcShort( 0x24 ), /* 36 */
/* 2198 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2200 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x3,        /* 3 */
/* 2202 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2204 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2206 */  NdrFcShort( 0x1 ),  /* 1 */
/* 2208 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2210 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2212 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2214 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainSid */

/* 2216 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2218 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2220 */  NdrFcShort( 0x100 ),    /* Type Offset=256 */

    /* Return value */

/* 2222 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2224 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2226 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarStorePrivateData */

/* 2228 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2230 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2234 */  NdrFcShort( 0x2a ), /* 42 */
/* 2236 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2238 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2240 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2242 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2244 */  NdrFcShort( 0x24 ), /* 36 */
/* 2246 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2248 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 2250 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2252 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2254 */  NdrFcShort( 0x2 ),  /* 2 */
/* 2256 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2258 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2260 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2262 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter KeyName */

/* 2264 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2266 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2268 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter EncryptedData */

/* 2270 */  NdrFcShort( 0xb ),  /* Flags:  must size, must free, in, */
/* 2272 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2274 */  NdrFcShort( 0x790 ),    /* Type Offset=1936 */

    /* Return value */

/* 2276 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2278 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2280 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarRetrievePrivateData */

/* 2282 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2284 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2288 */  NdrFcShort( 0x2b ), /* 43 */
/* 2290 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2292 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2294 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2296 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2298 */  NdrFcShort( 0x24 ), /* 36 */
/* 2300 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2302 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 2304 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2306 */  NdrFcShort( 0x1 ),  /* 1 */
/* 2308 */  NdrFcShort( 0x51 ), /* 81 */
/* 2310 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2312 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2314 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2316 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter KeyName */

/* 2318 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2320 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2322 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter EncryptedData */

/* 2324 */  NdrFcShort( 0x201b ),   /* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 2326 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2328 */  NdrFcShort( 0x7f4 ),    /* Type Offset=2036 */

    /* Return value */

/* 2330 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2332 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2334 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarOpenPolicy2 */

/* 2336 */  0x33,       /* FC_AUTO_HANDLE */
            0x48,       /* Old Flags:  */
/* 2338 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2342 */  NdrFcShort( 0x2c ), /* 44 */
/* 2344 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2346 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2348 */  NdrFcShort( 0x40 ), /* 64 */
/* 2350 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 2352 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2354 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2356 */  NdrFcShort( 0x3b ), /* 59 */
/* 2358 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter SystemName */

/* 2360 */  NdrFcShort( 0xb ),  /* Flags:  must size, must free, in, */
/* 2362 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2364 */  NdrFcShort( 0x7f8 ),    /* Type Offset=2040 */

    /* Parameter ObjectAttributes */

/* 2366 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2368 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2370 */  NdrFcShort( 0x16a ),    /* Type Offset=362 */

    /* Parameter DesiredAccess */

/* 2372 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2374 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2376 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter PolicyHandle */

/* 2378 */  NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 2380 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2382 */  NdrFcShort( 0x1a4 ),    /* Type Offset=420 */

    /* Return value */

/* 2384 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2386 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2388 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarGetUserName */

/* 2390 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2392 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2396 */  NdrFcShort( 0x2d ), /* 45 */
/* 2398 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2400 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 2402 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2404 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2406 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2408 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 2410 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2412 */  NdrFcShort( 0x52 ), /* 82 */
/* 2414 */  NdrFcShort( 0x52 ), /* 82 */
/* 2416 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter IDL_handle */

/* 2418 */  NdrFcShort( 0xb ),  /* Flags:  must size, must free, in, */
/* 2420 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2422 */  NdrFcShort( 0x7f8 ),    /* Type Offset=2040 */

    /* Parameter SystemName */

/* 2424 */  NdrFcShort( 0x201b ),   /* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 2426 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2428 */  NdrFcShort( 0x7a4 ),    /* Type Offset=1956 */

    /* Parameter UserName */

/* 2430 */  NdrFcShort( 0x201b ),   /* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 2432 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2434 */  NdrFcShort( 0x7fc ),    /* Type Offset=2044 */

    /* Parameter DomainName */

/* 2436 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2438 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2440 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarQueryInformationPolicy2 */


    /* Return value */

/* 2442 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2444 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2448 */  NdrFcShort( 0x2e ), /* 46 */
/* 2450 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2452 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2454 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2456 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2458 */  NdrFcShort( 0x2a ), /* 42 */
/* 2460 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2462 */  0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x4,        /* 4 */
/* 2464 */  0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 2466 */  NdrFcShort( 0x706 ),    /* 1798 */
/* 2468 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2470 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2472 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2474 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2476 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter InformationClass */

/* 2478 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2480 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2482 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter PolicyInformation */

/* 2484 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 2486 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2488 */  NdrFcShort( 0x800 ),    /* Type Offset=2048 */

    /* Return value */

/* 2490 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2492 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2494 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetInformationPolicy2 */

/* 2496 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2498 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2502 */  NdrFcShort( 0x2f ), /* 47 */
/* 2504 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2506 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2508 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2510 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2512 */  NdrFcShort( 0x2a ), /* 42 */
/* 2514 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2516 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 2518 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2520 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2522 */  NdrFcShort( 0x885 ),    /* 2181 */
/* 2524 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2526 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2528 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2530 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter InformationClass */

/* 2532 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2534 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2536 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter PolicyInformation */

/* 2538 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2540 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2542 */  NdrFcShort( 0x816 ),    /* Type Offset=2070 */

    /* Return value */

/* 2544 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2546 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2548 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarQueryTrustedDomainInfoByName */

/* 2550 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2552 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2556 */  NdrFcShort( 0x30 ), /* 48 */
/* 2558 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2560 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2562 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2564 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2566 */  NdrFcShort( 0x2a ), /* 42 */
/* 2568 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2570 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 2572 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2574 */  NdrFcShort( 0xdf2 ),    /* 3570 */
/* 2576 */  NdrFcShort( 0x1 ),  /* 1 */
/* 2578 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2580 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2582 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2584 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainName */

/* 2586 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2588 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2590 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter InformationClass */

/* 2592 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2594 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2596 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter TrustedDomainInformation */

/* 2598 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 2600 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2602 */  NdrFcShort( 0x820 ),    /* Type Offset=2080 */

    /* Return value */

/* 2604 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2606 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2608 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetTrustedDomainInfoByName */

/* 2610 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2612 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2616 */  NdrFcShort( 0x31 ), /* 49 */
/* 2618 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2620 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2622 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2624 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2626 */  NdrFcShort( 0x2a ), /* 42 */
/* 2628 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2630 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 2632 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2634 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2636 */  NdrFcShort( 0xffa ),    /* 4090 */
/* 2638 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2640 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2642 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2644 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainName */

/* 2646 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2648 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2650 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter InformationClass */

/* 2652 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2654 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2656 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter TrustedDomainInformation */

/* 2658 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2660 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2662 */  NdrFcShort( 0x836 ),    /* Type Offset=2102 */

    /* Return value */

/* 2664 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2666 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2668 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarEnumerateTrustedDomainsEx */

/* 2670 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2672 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2676 */  NdrFcShort( 0x32 ), /* 50 */
/* 2678 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2680 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2682 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2684 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2686 */  NdrFcShort( 0x48 ), /* 72 */
/* 2688 */  NdrFcShort( 0x24 ), /* 36 */
/* 2690 */  0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x5,        /* 5 */
/* 2692 */  0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 2694 */  NdrFcShort( 0x5f ), /* 95 */
/* 2696 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2698 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2700 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2702 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2704 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter EnumerationContext */

/* 2706 */  NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 2708 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2710 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter EnumerationBuffer */

/* 2712 */  NdrFcShort( 0x2113 ),   /* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 2714 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2716 */  NdrFcShort( 0x876 ),    /* Type Offset=2166 */

    /* Parameter PreferedMaximumLength */

/* 2718 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2720 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2722 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 2724 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2726 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2728 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarCreateTrustedDomainEx */

/* 2730 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2732 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2736 */  NdrFcShort( 0x33 ), /* 51 */
/* 2738 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 2740 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2742 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2744 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2746 */  NdrFcShort( 0x2c ), /* 44 */
/* 2748 */  NdrFcShort( 0x40 ), /* 64 */
/* 2750 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x6,        /* 6 */
/* 2752 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2754 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2756 */  NdrFcShort( 0x83 ), /* 131 */
/* 2758 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2760 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2762 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2764 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainInformation */

/* 2766 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2768 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2770 */  NdrFcShort( 0x636 ),    /* Type Offset=1590 */

    /* Parameter AuthenticationInformation */

/* 2772 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2774 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2776 */  NdrFcShort( 0x6a8 ),    /* Type Offset=1704 */

    /* Parameter DesiredAccess */

/* 2778 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2780 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2782 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter TrustedDomainHandle */

/* 2784 */  NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 2786 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2788 */  NdrFcShort( 0x35e ),    /* Type Offset=862 */

    /* Return value */

/* 2790 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2792 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2794 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure Opnum52NotUsedOnWire */

/* 2796 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2798 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2802 */  NdrFcShort( 0x34 ), /* 52 */
/* 2804 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2806 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 2808 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2810 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2812 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2814 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 2816 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 2818 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2820 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2822 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure LsarQueryDomainInformationPolicy */


    /* Parameter IDL_handle */

/* 2824 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2826 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2830 */  NdrFcShort( 0x35 ), /* 53 */
/* 2832 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2834 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2836 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2838 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2840 */  NdrFcShort( 0x2a ), /* 42 */
/* 2842 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2844 */  0x45,       /* Oi2 Flags:  srv must size, has return, has ext, */
            0x4,        /* 4 */
/* 2846 */  0x8,        /* 8 */
            0x3,        /* Ext Flags:  new corr desc, clt corr check, */
/* 2848 */  NdrFcShort( 0x2 ),  /* 2 */
/* 2850 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2852 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2854 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2856 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2858 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter InformationClass */

/* 2860 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2862 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2864 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter PolicyDomainInformation */

/* 2866 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 2868 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2870 */  NdrFcShort( 0x892 ),    /* Type Offset=2194 */

    /* Return value */

/* 2872 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2874 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2876 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetDomainInformationPolicy */

/* 2878 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2880 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2884 */  NdrFcShort( 0x36 ), /* 54 */
/* 2886 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2888 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2890 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2892 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2894 */  NdrFcShort( 0x2a ), /* 42 */
/* 2896 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2898 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x4,        /* 4 */
/* 2900 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2902 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2904 */  NdrFcShort( 0x2 ),  /* 2 */
/* 2906 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2908 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2910 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2912 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter InformationClass */

/* 2914 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2916 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2918 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter PolicyDomainInformation */

/* 2920 */  NdrFcShort( 0xb ),  /* Flags:  must size, must free, in, */
/* 2922 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2924 */  NdrFcShort( 0x8ec ),    /* Type Offset=2284 */

    /* Return value */

/* 2926 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2928 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2930 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarOpenTrustedDomainByName */

/* 2932 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2934 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2938 */  NdrFcShort( 0x37 ), /* 55 */
/* 2940 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 2942 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 2944 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2946 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 2948 */  NdrFcShort( 0x2c ), /* 44 */
/* 2950 */  NdrFcShort( 0x40 ), /* 64 */
/* 2952 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 2954 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 2956 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2958 */  NdrFcShort( 0x1 ),  /* 1 */
/* 2960 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 2962 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 2964 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 2966 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainName */

/* 2968 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 2970 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2972 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter DesiredAccess */

/* 2974 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 2976 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2978 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter TrustedDomainHandle */

/* 2980 */  NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 2982 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 2984 */  NdrFcShort( 0x35e ),    /* Type Offset=862 */

    /* Return value */

/* 2986 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 2988 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 2990 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure Opnum56NotUsedOnWire */

/* 2992 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 2994 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2998 */  NdrFcShort( 0x38 ), /* 56 */
/* 3000 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3002 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3004 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3006 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3008 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3010 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3012 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3014 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3016 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3018 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure LsarLookupSids2 */


    /* Parameter IDL_handle */

/* 3020 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3022 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3026 */  NdrFcShort( 0x39 ), /* 57 */
/* 3028 */  NdrFcShort( 0x24 ), /* x86 Stack size/offset = 36 */
/* 3030 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 3032 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3034 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 3036 */  NdrFcShort( 0x56 ), /* 86 */
/* 3038 */  NdrFcShort( 0x24 ), /* 36 */
/* 3040 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x9,        /* 9 */
/* 3042 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3044 */  NdrFcShort( 0x12f ),    /* 303 */
/* 3046 */  NdrFcShort( 0x12 ), /* 18 */
/* 3048 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 3050 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 3052 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3054 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter SidEnumBuffer */

/* 3056 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3058 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3060 */  NdrFcShort( 0x494 ),    /* Type Offset=1172 */

    /* Parameter ReferencedDomains */

/* 3062 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 3064 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 3066 */  NdrFcShort( 0x426 ),    /* Type Offset=1062 */

    /* Parameter TranslatedNames */

/* 3068 */  NdrFcShort( 0x11b ),    /* Flags:  must size, must free, in, out, simple ref, */
/* 3070 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 3072 */  NdrFcShort( 0x92e ),    /* Type Offset=2350 */

    /* Parameter LookupLevel */

/* 3074 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3076 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 3078 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter MappedCount */

/* 3080 */  NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 3082 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 3084 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter LookupOptions */

/* 3086 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3088 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 3090 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter ClientRevision */

/* 3092 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3094 */  NdrFcShort( 0x1c ), /* x86 Stack size/offset = 28 */
/* 3096 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 3098 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 3100 */  NdrFcShort( 0x20 ), /* x86 Stack size/offset = 32 */
/* 3102 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarLookupNames2 */

/* 3104 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3106 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3110 */  NdrFcShort( 0x3a ), /* 58 */
/* 3112 */  NdrFcShort( 0x28 ), /* x86 Stack size/offset = 40 */
/* 3114 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 3116 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3118 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 3120 */  NdrFcShort( 0x5e ), /* 94 */
/* 3122 */  NdrFcShort( 0x24 ), /* 36 */
/* 3124 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0xa,        /* 10 */
/* 3126 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3128 */  NdrFcShort( 0x12e ),    /* 302 */
/* 3130 */  NdrFcShort( 0x3 ),  /* 3 */
/* 3132 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 3134 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 3136 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3138 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter Count */

/* 3140 */  NdrFcShort( 0x88 ), /* Flags:  in, by val, */
/* 3142 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3144 */  NdrFcShort( 0x940 ),    /* 2368 */

    /* Parameter Names */

/* 3146 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3148 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 3150 */  NdrFcShort( 0x404 ),    /* Type Offset=1028 */

    /* Parameter ReferencedDomains */

/* 3152 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 3154 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 3156 */  NdrFcShort( 0x426 ),    /* Type Offset=1062 */

    /* Parameter TranslatedSids */

/* 3158 */  NdrFcShort( 0x11b ),    /* Flags:  must size, must free, in, out, simple ref, */
/* 3160 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 3162 */  NdrFcShort( 0x97c ),    /* Type Offset=2428 */

    /* Parameter LookupLevel */

/* 3164 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3166 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 3168 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter MappedCount */

/* 3170 */  NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 3172 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 3174 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter LookupOptions */

/* 3176 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3178 */  NdrFcShort( 0x1c ), /* x86 Stack size/offset = 28 */
/* 3180 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter ClientRevision */

/* 3182 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3184 */  NdrFcShort( 0x20 ), /* x86 Stack size/offset = 32 */
/* 3186 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 3188 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 3190 */  NdrFcShort( 0x24 ), /* x86 Stack size/offset = 36 */
/* 3192 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarCreateTrustedDomainEx2 */

/* 3194 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3196 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3200 */  NdrFcShort( 0x3b ), /* 59 */
/* 3202 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 3204 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 3206 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3208 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 3210 */  NdrFcShort( 0x2c ), /* 44 */
/* 3212 */  NdrFcShort( 0x40 ), /* 64 */
/* 3214 */  0x46,       /* Oi2 Flags:  clt must size, has return, has ext, */
            0x6,        /* 6 */
/* 3216 */  0x8,        /* 8 */
            0x5,        /* Ext Flags:  new corr desc, srv corr check, */
/* 3218 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3220 */  NdrFcShort( 0xb9e ),    /* 2974 */
/* 3222 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 3224 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 3226 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3228 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainInformation */

/* 3230 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3232 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3234 */  NdrFcShort( 0x636 ),    /* Type Offset=1590 */

    /* Parameter AuthenticationInformation */

/* 3236 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3238 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 3240 */  NdrFcShort( 0x700 ),    /* Type Offset=1792 */

    /* Parameter DesiredAccess */

/* 3242 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3244 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 3246 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter TrustedDomainHandle */

/* 3248 */  NdrFcShort( 0x110 ),    /* Flags:  out, simple ref, */
/* 3250 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 3252 */  NdrFcShort( 0x35e ),    /* Type Offset=862 */

    /* Return value */

/* 3254 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 3256 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 3258 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure Opnum60NotUsedOnWire */

/* 3260 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3262 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3266 */  NdrFcShort( 0x3c ), /* 60 */
/* 3268 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3270 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3272 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3274 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3276 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3278 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3280 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3282 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3284 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3286 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum61NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3288 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3290 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3294 */  NdrFcShort( 0x3d ), /* 61 */
/* 3296 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3298 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3300 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3302 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3304 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3306 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3308 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3310 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3312 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3314 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum62NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3316 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3318 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3322 */  NdrFcShort( 0x3e ), /* 62 */
/* 3324 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3326 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3328 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3330 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3332 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3334 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3336 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3338 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3340 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3342 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum63NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3344 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3346 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3350 */  NdrFcShort( 0x3f ), /* 63 */
/* 3352 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3354 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3356 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3358 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3360 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3362 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3364 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3366 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3368 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3370 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum64NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3372 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3374 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3378 */  NdrFcShort( 0x40 ), /* 64 */
/* 3380 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3382 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3384 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3386 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3388 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3390 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3392 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3394 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3396 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3398 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum65NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3400 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3402 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3406 */  NdrFcShort( 0x41 ), /* 65 */
/* 3408 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3410 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3412 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3414 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3416 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3418 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3420 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3422 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3424 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3426 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum66NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3428 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3430 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3434 */  NdrFcShort( 0x42 ), /* 66 */
/* 3436 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3438 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3440 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3442 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3444 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3446 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3448 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3450 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3452 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3454 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum67NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3456 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3458 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3462 */  NdrFcShort( 0x43 ), /* 67 */
/* 3464 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3466 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3468 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3470 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3472 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3474 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3476 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3478 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3480 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3482 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure LsarLookupNames3 */


    /* Parameter IDL_handle */

/* 3484 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3486 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3490 */  NdrFcShort( 0x44 ), /* 68 */
/* 3492 */  NdrFcShort( 0x28 ), /* x86 Stack size/offset = 40 */
/* 3494 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 3496 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3498 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 3500 */  NdrFcShort( 0x5e ), /* 94 */
/* 3502 */  NdrFcShort( 0x24 ), /* 36 */
/* 3504 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0xa,        /* 10 */
/* 3506 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3508 */  NdrFcShort( 0x12f ),    /* 303 */
/* 3510 */  NdrFcShort( 0x63 ), /* 99 */
/* 3512 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 3514 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 3516 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3518 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter Count */

/* 3520 */  NdrFcShort( 0x88 ), /* Flags:  in, by val, */
/* 3522 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3524 */  NdrFcShort( 0x992 ),    /* 2450 */

    /* Parameter Names */

/* 3526 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3528 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 3530 */  NdrFcShort( 0x404 ),    /* Type Offset=1028 */

    /* Parameter ReferencedDomains */

/* 3532 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 3534 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 3536 */  NdrFcShort( 0x426 ),    /* Type Offset=1062 */

    /* Parameter TranslatedSids */

/* 3538 */  NdrFcShort( 0x11b ),    /* Flags:  must size, must free, in, out, simple ref, */
/* 3540 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 3542 */  NdrFcShort( 0x9d2 ),    /* Type Offset=2514 */

    /* Parameter LookupLevel */

/* 3544 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3546 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 3548 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter MappedCount */

/* 3550 */  NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 3552 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 3554 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter LookupOptions */

/* 3556 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3558 */  NdrFcShort( 0x1c ), /* x86 Stack size/offset = 28 */
/* 3560 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter ClientRevision */

/* 3562 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3564 */  NdrFcShort( 0x20 ), /* x86 Stack size/offset = 32 */
/* 3566 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Return value */

/* 3568 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 3570 */  NdrFcShort( 0x24 ), /* x86 Stack size/offset = 36 */
/* 3572 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure Opnum69NotUsedOnWire */

/* 3574 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3576 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3580 */  NdrFcShort( 0x45 ), /* 69 */
/* 3582 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3584 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3586 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3588 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3590 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3592 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3594 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3596 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3598 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3600 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum70NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3602 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3604 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3608 */  NdrFcShort( 0x46 ), /* 70 */
/* 3610 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3612 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3614 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3616 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3618 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3620 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3622 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3624 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3626 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3628 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum71NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3630 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3632 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3636 */  NdrFcShort( 0x47 ), /* 71 */
/* 3638 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3640 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3642 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3644 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3646 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3648 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3650 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3652 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3654 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3656 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure Opnum72NotUsedOnWire */


    /* Parameter IDL_handle */

/* 3658 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3660 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3664 */  NdrFcShort( 0x48 ), /* 72 */
/* 3666 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3668 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3670 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3672 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3674 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3676 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3678 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3680 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3682 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3684 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure LsarQueryForestTrustInformation */


    /* Parameter IDL_handle */

/* 3686 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3688 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3692 */  NdrFcShort( 0x49 ), /* 73 */
/* 3694 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 3696 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 3698 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3700 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 3702 */  NdrFcShort( 0x2a ), /* 42 */
/* 3704 */  NdrFcShort( 0x8 ),  /* 8 */
/* 3706 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x5,        /* 5 */
/* 3708 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3710 */  NdrFcShort( 0x69 ), /* 105 */
/* 3712 */  NdrFcShort( 0x1 ),  /* 1 */
/* 3714 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 3716 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 3718 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3720 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainName */

/* 3722 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3724 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3726 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter HighestRecordType */

/* 3728 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3730 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 3732 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter ForestTrustInfo */

/* 3734 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 3736 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 3738 */  NdrFcShort( 0x9e4 ),    /* Type Offset=2532 */

    /* Return value */

/* 3740 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 3742 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 3744 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarSetForestTrustInformation */

/* 3746 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3748 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3752 */  NdrFcShort( 0x4a ), /* 74 */
/* 3754 */  NdrFcShort( 0x1c ), /* x86 Stack size/offset = 28 */
/* 3756 */  0x30,       /* FC_BIND_CONTEXT */
            0x40,       /* Ctxt flags:  in, */
/* 3758 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3760 */  0x0,        /* 0 */
            0x0,        /* 0 */
/* 3762 */  NdrFcShort( 0x2f ), /* 47 */
/* 3764 */  NdrFcShort( 0x8 ),  /* 8 */
/* 3766 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x7,        /* 7 */
/* 3768 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3770 */  NdrFcShort( 0x2 ),  /* 2 */
/* 3772 */  NdrFcShort( 0x6d ), /* 109 */
/* 3774 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter PolicyHandle */

/* 3776 */  NdrFcShort( 0x8 ),  /* Flags:  in, */
/* 3778 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3780 */  NdrFcShort( 0xa ),  /* Type Offset=10 */

    /* Parameter TrustedDomainName */

/* 3782 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3784 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3786 */  NdrFcShort( 0x276 ),    /* Type Offset=630 */

    /* Parameter HighestRecordType */

/* 3788 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3790 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 3792 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter ForestTrustInfo */

/* 3794 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3796 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 3798 */  NdrFcShort( 0xaba ),    /* Type Offset=2746 */

    /* Parameter CheckOnly */

/* 3800 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3802 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 3804 */  0x2,        /* FC_CHAR */
            0x0,        /* 0 */

    /* Parameter CollisionInfo */

/* 3806 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 3808 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 3810 */  NdrFcShort( 0xad0 ),    /* Type Offset=2768 */

    /* Return value */

/* 3812 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 3814 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 3816 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure Opnum75NotUsedOnWire */

/* 3818 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3820 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3824 */  NdrFcShort( 0x4b ), /* 75 */
/* 3826 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3828 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3830 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3832 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3834 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3836 */  0x40,       /* Oi2 Flags:  has ext, */
            0x0,        /* 0 */
/* 3838 */  0x8,        /* 8 */
            0x1,        /* Ext Flags:  new corr desc, */
/* 3840 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3842 */  NdrFcShort( 0x0 ),  /* 0 */
/* 3844 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Procedure LsarLookupSids3 */


    /* Parameter IDL_handle */

/* 3846 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3848 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3852 */  NdrFcShort( 0x4c ), /* 76 */
/* 3854 */  NdrFcShort( 0x24 ), /* x86 Stack size/offset = 36 */
/* 3856 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3858 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3860 */  NdrFcShort( 0x32 ), /* 50 */
/* 3862 */  NdrFcShort( 0x24 ), /* 36 */
/* 3864 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x8,        /* 8 */
/* 3866 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3868 */  NdrFcShort( 0x19f ),    /* 415 */
/* 3870 */  NdrFcShort( 0x82 ), /* 130 */
/* 3872 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter RpcHandle */

/* 3874 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3876 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3878 */  NdrFcShort( 0x494 ),    /* Type Offset=1172 */

    /* Parameter SidEnumBuffer */

/* 3880 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 3882 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 3884 */  NdrFcShort( 0x426 ),    /* Type Offset=1062 */

    /* Parameter ReferencedDomains */

/* 3886 */  NdrFcShort( 0x11b ),    /* Flags:  must size, must free, in, out, simple ref, */
/* 3888 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 3890 */  NdrFcShort( 0x92e ),    /* Type Offset=2350 */

    /* Parameter TranslatedNames */

/* 3892 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3894 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 3896 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter LookupLevel */

/* 3898 */  NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 3900 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 3902 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter MappedCount */

/* 3904 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3906 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 3908 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter LookupOptions */

/* 3910 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3912 */  NdrFcShort( 0x1c ), /* x86 Stack size/offset = 28 */
/* 3914 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter ClientRevision */

/* 3916 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 3918 */  NdrFcShort( 0x20 ), /* x86 Stack size/offset = 32 */
/* 3920 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Procedure LsarLookupNames4 */


    /* Return value */

/* 3922 */  0x0,        /* 0 */
            0x48,       /* Old Flags:  */
/* 3924 */  NdrFcLong( 0x0 ),   /* 0 */
/* 3928 */  NdrFcShort( 0x4d ), /* 77 */
/* 3930 */  NdrFcShort( 0x28 ), /* x86 Stack size/offset = 40 */
/* 3932 */  0x32,       /* FC_BIND_PRIMITIVE */
            0x0,        /* 0 */
/* 3934 */  NdrFcShort( 0x0 ),  /* x86 Stack size/offset = 0 */
/* 3936 */  NdrFcShort( 0x3a ), /* 58 */
/* 3938 */  NdrFcShort( 0x24 ), /* 36 */
/* 3940 */  0x47,       /* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
            0x9,        /* 9 */
/* 3942 */  0x8,        /* 8 */
            0x7,        /* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3944 */  NdrFcShort( 0x13d ),    /* 317 */
/* 3946 */  NdrFcShort( 0x12 ), /* 18 */
/* 3948 */  NdrFcShort( 0x0 ),  /* 0 */

    /* Parameter RpcHandle */

/* 3950 */  NdrFcShort( 0x88 ), /* Flags:  in, by val, */
/* 3952 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 3954 */  NdrFcShort( 0xb1c ),    /* 2844 */

    /* Parameter Count */

/* 3956 */  NdrFcShort( 0x10b ),    /* Flags:  must size, must free, in, simple ref, */
/* 3958 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 3960 */  NdrFcShort( 0x404 ),    /* Type Offset=1028 */

    /* Parameter Names */

/* 3962 */  NdrFcShort( 0x2013 ),   /* Flags:  must size, must free, out, srv alloc size=8 */
/* 3964 */  NdrFcShort( 0xc ),  /* x86 Stack size/offset = 12 */
/* 3966 */  NdrFcShort( 0x426 ),    /* Type Offset=1062 */

    /* Parameter ReferencedDomains */

/* 3968 */  NdrFcShort( 0x11b ),    /* Flags:  must size, must free, in, out, simple ref, */
/* 3970 */  NdrFcShort( 0x10 ), /* x86 Stack size/offset = 16 */
/* 3972 */  NdrFcShort( 0x9d2 ),    /* Type Offset=2514 */

    /* Parameter TranslatedSids */

/* 3974 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3976 */  NdrFcShort( 0x14 ), /* x86 Stack size/offset = 20 */
/* 3978 */  0xd,        /* FC_ENUM16 */
            0x0,        /* 0 */

    /* Parameter LookupLevel */

/* 3980 */  NdrFcShort( 0x158 ),    /* Flags:  in, out, base type, simple ref, */
/* 3982 */  NdrFcShort( 0x18 ), /* x86 Stack size/offset = 24 */
/* 3984 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter MappedCount */

/* 3986 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3988 */  NdrFcShort( 0x1c ), /* x86 Stack size/offset = 28 */
/* 3990 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter LookupOptions */

/* 3992 */  NdrFcShort( 0x48 ), /* Flags:  in, base type, */
/* 3994 */  NdrFcShort( 0x20 ), /* x86 Stack size/offset = 32 */
/* 3996 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

    /* Parameter ClientRevision */

/* 3998 */  NdrFcShort( 0x70 ), /* Flags:  out, return, base type, */
/* 4000 */  NdrFcShort( 0x24 ), /* x86 Stack size/offset = 36 */
/* 4002 */  0x8,        /* FC_LONG */
            0x0,        /* 0 */

            0x0
";

        // LSA type format string generated by midl
        private const string X86_TYPE_FORMAT_STRING = @"
                NdrFcShort( 0x0 ),  /* 0 */
/*  2 */    
            0x11, 0x4,  /* FC_RP [alloced_on_stack] */
/*  4 */    NdrFcShort( 0x2 ),  /* Offset= 2 (6) */
/*  6 */    0x30,       /* FC_BIND_CONTEXT */
            0xe1,       /* Ctxt flags:  via ptr, in, out, can't be null */
/*  8 */    0x0,        /* 0 */
            0x0,        /* 0 */
/* 10 */    0x30,       /* FC_BIND_CONTEXT */
            0x41,       /* Ctxt flags:  in, can't be null */
/* 12 */    0x0,        /* 0 */
            0x0,        /* 0 */
/* 14 */    
            0x11, 0x8,  /* FC_RP [simple_pointer] */
/* 16 */    0x8,        /* FC_LONG */
            0x5c,       /* FC_PAD */
/* 18 */    
            0x11, 0x4,  /* FC_RP [alloced_on_stack] */
/* 20 */    NdrFcShort( 0x58 ), /* Offset= 88 (108) */
/* 22 */    
            0x15,       /* FC_STRUCT */
            0x3,        /* 3 */
/* 24 */    NdrFcShort( 0x8 ),  /* 8 */
/* 26 */    0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 28 */    0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 30 */    
            0x1c,       /* FC_CVARRAY */
            0x1,        /* 1 */
/* 32 */    NdrFcShort( 0x2 ),  /* 2 */
/* 34 */    0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 36 */    NdrFcShort( 0x2 ),  /* 2 */
/* 38 */    NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 40 */    0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 42 */    NdrFcShort( 0x0 ),  /* 0 */
/* 44 */    NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 46 */    0x5,        /* FC_WCHAR */
            0x5b,       /* FC_END */
/* 48 */    
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 50 */    NdrFcShort( 0x10 ), /* 16 */
/* 52 */    
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 54 */    
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 56 */    NdrFcShort( 0x4 ),  /* 4 */
/* 58 */    NdrFcShort( 0x4 ),  /* 4 */
/* 60 */    0x12, 0x0,  /* FC_UP */
/* 62 */    NdrFcShort( 0xffe0 ),   /* Offset= -32 (30) */
/* 64 */    
            0x5b,       /* FC_END */

            0x6,        /* FC_SHORT */
/* 66 */    0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 68 */    0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 70 */    NdrFcShort( 0xffd0 ),   /* Offset= -48 (22) */
/* 72 */    0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 74 */    
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 76 */    NdrFcShort( 0x10 ), /* 16 */
/* 78 */    0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 80 */    NdrFcShort( 0x0 ),  /* 0 */
/* 82 */    NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 84 */    
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 86 */    
            0x48,       /* FC_VARIABLE_REPEAT */
            0x49,       /* FC_FIXED_OFFSET */
/* 88 */    NdrFcShort( 0x10 ), /* 16 */
/* 90 */    NdrFcShort( 0x0 ),  /* 0 */
/* 92 */    NdrFcShort( 0x1 ),  /* 1 */
/* 94 */    NdrFcShort( 0x4 ),  /* 4 */
/* 96 */    NdrFcShort( 0x4 ),  /* 4 */
/* 98 */    0x12, 0x0,  /* FC_UP */
/* 100 */   NdrFcShort( 0xffba ),   /* Offset= -70 (30) */
/* 102 */   
            0x5b,       /* FC_END */

            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 104 */   0x0,        /* 0 */
            NdrFcShort( 0xffc7 ),   /* Offset= -57 (48) */
            0x5b,       /* FC_END */
/* 108 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 110 */   NdrFcShort( 0x8 ),  /* 8 */
/* 112 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 114 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 116 */   NdrFcShort( 0x4 ),  /* 4 */
/* 118 */   NdrFcShort( 0x4 ),  /* 4 */
/* 120 */   0x12, 0x0,  /* FC_UP */
/* 122 */   NdrFcShort( 0xffd0 ),   /* Offset= -48 (74) */
/* 124 */   
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 126 */   0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 128 */   
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 130 */   NdrFcShort( 0x2 ),  /* Offset= 2 (132) */
/* 132 */   
            0x12, 0x0,  /* FC_UP */
/* 134 */   NdrFcShort( 0x18 ), /* Offset= 24 (158) */
/* 136 */   0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 138 */   NdrFcLong( 0x0 ),   /* 0 */
/* 142 */   NdrFcLong( 0x40000 ),   /* 262144 */
/* 146 */   
            0x1b,       /* FC_CARRAY */
            0x0,        /* 0 */
/* 148 */   NdrFcShort( 0x1 ),  /* 1 */
/* 150 */   0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 152 */   NdrFcShort( 0x0 ),  /* 0 */
/* 154 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 156 */   0x2,        /* FC_CHAR */
            0x5b,       /* FC_END */
/* 158 */   
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 160 */   NdrFcShort( 0x8 ),  /* 8 */
/* 162 */   NdrFcShort( 0x0 ),  /* 0 */
/* 164 */   NdrFcShort( 0x8 ),  /* Offset= 8 (172) */
/* 166 */   0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 168 */   NdrFcShort( 0xffe0 ),   /* Offset= -32 (136) */
/* 170 */   0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 172 */   
            0x12, 0x0,  /* FC_UP */
/* 174 */   NdrFcShort( 0xffe4 ),   /* Offset= -28 (146) */
/* 176 */   
            0x11, 0x0,  /* FC_RP */
/* 178 */   NdrFcShort( 0xffec ),   /* Offset= -20 (158) */
/* 180 */   
            0x12, 0x8,  /* FC_UP [simple_pointer] */
/* 182 */   0x5,        /* FC_WCHAR */
            0x5c,       /* FC_PAD */
/* 184 */   
            0x11, 0x0,  /* FC_RP */
/* 186 */   NdrFcShort( 0xb0 ), /* Offset= 176 (362) */
/* 188 */   
            0x1c,       /* FC_CVARRAY */
            0x0,        /* 0 */
/* 190 */   NdrFcShort( 0x1 ),  /* 1 */
/* 192 */   0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x0,        /*  */
/* 194 */   NdrFcShort( 0x2 ),  /* 2 */
/* 196 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 198 */   0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x0,        /*  */
/* 200 */   NdrFcShort( 0x0 ),  /* 0 */
/* 202 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 204 */   0x2,        /* FC_CHAR */
            0x5b,       /* FC_END */
/* 206 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 208 */   NdrFcShort( 0x8 ),  /* 8 */
/* 210 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 212 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 214 */   NdrFcShort( 0x4 ),  /* 4 */
/* 216 */   NdrFcShort( 0x4 ),  /* 4 */
/* 218 */   0x12, 0x0,  /* FC_UP */
/* 220 */   NdrFcShort( 0xffe0 ),   /* Offset= -32 (188) */
/* 222 */   
            0x5b,       /* FC_END */

            0x6,        /* FC_SHORT */
/* 224 */   0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 226 */   0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 228 */   
            0x1d,       /* FC_SMFARRAY */
            0x0,        /* 0 */
/* 230 */   NdrFcShort( 0x6 ),  /* 6 */
/* 232 */   0x1,        /* FC_BYTE */
            0x5b,       /* FC_END */
/* 234 */   
            0x15,       /* FC_STRUCT */
            0x0,        /* 0 */
/* 236 */   NdrFcShort( 0x6 ),  /* 6 */
/* 238 */   0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 240 */   NdrFcShort( 0xfff4 ),   /* Offset= -12 (228) */
/* 242 */   0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 244 */   
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 246 */   NdrFcShort( 0x4 ),  /* 4 */
/* 248 */   0x4,        /* Corr desc: FC_USMALL */
            0x0,        /*  */
/* 250 */   NdrFcShort( 0xfff9 ),   /* -7 */
/* 252 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 254 */   0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 256 */   
            0x17,       /* FC_CSTRUCT */
            0x3,        /* 3 */
/* 258 */   NdrFcShort( 0x8 ),  /* 8 */
/* 260 */   NdrFcShort( 0xfff0 ),   /* Offset= -16 (244) */
/* 262 */   0x2,        /* FC_CHAR */
            0x2,        /* FC_CHAR */
/* 264 */   0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 266 */   NdrFcShort( 0xffe0 ),   /* Offset= -32 (234) */
/* 268 */   0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 270 */   
            0x1b,       /* FC_CARRAY */
            0x0,        /* 0 */
/* 272 */   NdrFcShort( 0x1 ),  /* 1 */
/* 274 */   0x0,        /* Corr desc:  field,  */
            0x59,       /* FC_CALLBACK */
/* 276 */   NdrFcShort( 0x0 ),  /* 0 */
/* 278 */   NdrFcShort( 0x0 ),  /* Corr flags:  */
/* 280 */   0x2,        /* FC_CHAR */
            0x5b,       /* FC_END */
/* 282 */   
            0x17,       /* FC_CSTRUCT */
            0x1,        /* 1 */
/* 284 */   NdrFcShort( 0x4 ),  /* 4 */
/* 286 */   NdrFcShort( 0xfff0 ),   /* Offset= -16 (270) */
/* 288 */   0x2,        /* FC_CHAR */
            0x2,        /* FC_CHAR */
/* 290 */   0x6,        /* FC_SHORT */
            0x5b,       /* FC_END */
/* 292 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 294 */   NdrFcShort( 0x14 ), /* 20 */
/* 296 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 298 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 300 */   NdrFcShort( 0x4 ),  /* 4 */
/* 302 */   NdrFcShort( 0x4 ),  /* 4 */
/* 304 */   0x12, 0x0,  /* FC_UP */
/* 306 */   NdrFcShort( 0xffce ),   /* Offset= -50 (256) */
/* 308 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 310 */   NdrFcShort( 0x8 ),  /* 8 */
/* 312 */   NdrFcShort( 0x8 ),  /* 8 */
/* 314 */   0x12, 0x0,  /* FC_UP */
/* 316 */   NdrFcShort( 0xffc4 ),   /* Offset= -60 (256) */
/* 318 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 320 */   NdrFcShort( 0xc ),  /* 12 */
/* 322 */   NdrFcShort( 0xc ),  /* 12 */
/* 324 */   0x12, 0x0,  /* FC_UP */
/* 326 */   NdrFcShort( 0xffd4 ),   /* Offset= -44 (282) */
/* 328 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 330 */   NdrFcShort( 0x10 ), /* 16 */
/* 332 */   NdrFcShort( 0x10 ), /* 16 */
/* 334 */   0x12, 0x0,  /* FC_UP */
/* 336 */   NdrFcShort( 0xffca ),   /* Offset= -54 (282) */
/* 338 */   
            0x5b,       /* FC_END */

            0x2,        /* FC_CHAR */
/* 340 */   0x2,        /* FC_CHAR */
            0x6,        /* FC_SHORT */
/* 342 */   0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 344 */   0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 346 */   0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 348 */   
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 350 */   NdrFcShort( 0xc ),  /* 12 */
/* 352 */   NdrFcShort( 0x0 ),  /* 0 */
/* 354 */   NdrFcShort( 0x0 ),  /* Offset= 0 (354) */
/* 356 */   0x8,        /* FC_LONG */
            0xd,        /* FC_ENUM16 */
/* 358 */   0x2,        /* FC_CHAR */
            0x2,        /* FC_CHAR */
/* 360 */   0x3e,       /* FC_STRUCTPAD2 */
            0x5b,       /* FC_END */
/* 362 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 364 */   NdrFcShort( 0x18 ), /* 24 */
/* 366 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 368 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 370 */   NdrFcShort( 0x4 ),  /* 4 */
/* 372 */   NdrFcShort( 0x4 ),  /* 4 */
/* 374 */   0x12, 0x8,  /* FC_UP [simple_pointer] */
/* 376 */   0x2,        /* FC_CHAR */
            0x5c,       /* FC_PAD */
/* 378 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 380 */   NdrFcShort( 0x8 ),  /* 8 */
/* 382 */   NdrFcShort( 0x8 ),  /* 8 */
/* 384 */   0x12, 0x0,  /* FC_UP */
/* 386 */   NdrFcShort( 0xff4c ),   /* Offset= -180 (206) */
/* 388 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 390 */   NdrFcShort( 0x10 ), /* 16 */
/* 392 */   NdrFcShort( 0x10 ), /* 16 */
/* 394 */   0x12, 0x0,  /* FC_UP */
/* 396 */   NdrFcShort( 0xff98 ),   /* Offset= -104 (292) */
/* 398 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 400 */   NdrFcShort( 0x14 ), /* 20 */
/* 402 */   NdrFcShort( 0x14 ), /* 20 */
/* 404 */   0x12, 0x0,  /* FC_UP */
/* 406 */   NdrFcShort( 0xffc6 ),   /* Offset= -58 (348) */
/* 408 */   
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 410 */   0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 412 */   0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 414 */   0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 416 */   
            0x11, 0x4,  /* FC_RP [alloced_on_stack] */
/* 418 */   NdrFcShort( 0x2 ),  /* Offset= 2 (420) */
/* 420 */   0x30,       /* FC_BIND_CONTEXT */
            0xa0,       /* Ctxt flags:  via ptr, out, */
/* 422 */   0x0,        /* 0 */
            0x0,        /* 0 */
/* 424 */   
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 426 */   NdrFcShort( 0x2 ),  /* Offset= 2 (428) */
/* 428 */   
            0x12, 0x0,  /* FC_UP */
/* 430 */   NdrFcShort( 0x2 ),  /* Offset= 2 (432) */
/* 432 */   
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 434 */   0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 436 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 438 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 440 */   NdrFcShort( 0x2 ),  /* Offset= 2 (442) */
/* 442 */   NdrFcShort( 0x30 ), /* 48 */
/* 444 */   NdrFcShort( 0x700d ),   /* 28685 */
/* 446 */   NdrFcLong( 0x1 ),   /* 1 */
/* 450 */   NdrFcShort( 0x52 ), /* Offset= 82 (532) */
/* 452 */   NdrFcLong( 0x2 ),   /* 2 */
/* 456 */   NdrFcShort( 0x7a ), /* Offset= 122 (578) */
/* 458 */   NdrFcLong( 0x3 ),   /* 3 */
/* 462 */   NdrFcShort( 0x88 ), /* Offset= 136 (598) */
/* 464 */   NdrFcLong( 0x5 ),   /* 5 */
/* 468 */   NdrFcShort( 0x82 ), /* Offset= 130 (598) */
/* 470 */   NdrFcLong( 0x4 ),   /* 4 */
/* 474 */   NdrFcShort( 0x9c ), /* Offset= 156 (630) */
/* 476 */   NdrFcLong( 0x6 ),   /* 6 */
/* 480 */   NdrFcShort( 0xac ), /* Offset= 172 (652) */
/* 482 */   NdrFcLong( 0x7 ),   /* 7 */
/* 486 */   NdrFcShort( 0xc2 ), /* Offset= 194 (680) */
/* 488 */   NdrFcLong( 0x9 ),   /* 9 */
/* 492 */   NdrFcShort( 0xde ), /* Offset= 222 (714) */
/* 494 */   NdrFcLong( 0xa ),   /* 10 */
/* 498 */   NdrFcShort( 0xe6 ), /* Offset= 230 (728) */
/* 500 */   NdrFcLong( 0xb ),   /* 11 */
/* 504 */   NdrFcShort( 0xe6 ), /* Offset= 230 (734) */
/* 506 */   NdrFcLong( 0xc ),   /* 12 */
/* 510 */   NdrFcShort( 0x10c ),    /* Offset= 268 (778) */
/* 512 */   NdrFcLong( 0xd ),   /* 13 */
/* 516 */   NdrFcShort( 0x106 ),    /* Offset= 262 (778) */
/* 518 */   NdrFcLong( 0xe ),   /* 14 */
/* 522 */   NdrFcShort( 0x4c ), /* Offset= 76 (598) */
/* 524 */   NdrFcShort( 0xffff ),   /* Offset= -1 (523) */
/* 526 */   
            0x15,       /* FC_STRUCT */
            0x7,        /* 7 */
/* 528 */   NdrFcShort( 0x8 ),  /* 8 */
/* 530 */   0xb,        /* FC_HYPER */
            0x5b,       /* FC_END */
/* 532 */   
            0x1a,       /* FC_BOGUS_STRUCT */
            0x7,        /* 7 */
/* 534 */   NdrFcShort( 0x28 ), /* 40 */
/* 536 */   NdrFcShort( 0x0 ),  /* 0 */
/* 538 */   NdrFcShort( 0x0 ),  /* Offset= 0 (538) */
/* 540 */   0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 542 */   0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 544 */   NdrFcShort( 0xffee ),   /* Offset= -18 (526) */
/* 546 */   0x2,        /* FC_CHAR */
            0x43,       /* FC_STRUCTPAD7 */
/* 548 */   0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 550 */   NdrFcShort( 0xffe8 ),   /* Offset= -24 (526) */
/* 552 */   0x8,        /* FC_LONG */
            0x40,       /* FC_STRUCTPAD4 */
/* 554 */   0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 556 */   0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 558 */   NdrFcLong( 0x0 ),   /* 0 */
/* 562 */   NdrFcLong( 0x3e8 ), /* 1000 */
/* 566 */   
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 568 */   NdrFcShort( 0x4 ),  /* 4 */
/* 570 */   0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 572 */   NdrFcShort( 0x8 ),  /* 8 */
/* 574 */   NdrFcShort( 0x0 ),  /* Corr flags:  */
/* 576 */   0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 578 */   
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 580 */   NdrFcShort( 0xc ),  /* 12 */
/* 582 */   NdrFcShort( 0x0 ),  /* 0 */
/* 584 */   NdrFcShort( 0xa ),  /* Offset= 10 (594) */
/* 586 */   0x2,        /* FC_CHAR */
            0x3f,       /* FC_STRUCTPAD3 */
/* 588 */   0x36,       /* FC_POINTER */
            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 590 */   0x0,        /* 0 */
            NdrFcShort( 0xffdd ),   /* Offset= -35 (556) */
            0x5b,       /* FC_END */
/* 594 */   
            0x12, 0x0,  /* FC_UP */
/* 596 */   NdrFcShort( 0xffe2 ),   /* Offset= -30 (566) */
/* 598 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 600 */   NdrFcShort( 0xc ),  /* 12 */
/* 602 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 604 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 606 */   NdrFcShort( 0x4 ),  /* 4 */
/* 608 */   NdrFcShort( 0x4 ),  /* 4 */
/* 610 */   0x12, 0x0,  /* FC_UP */
/* 612 */   NdrFcShort( 0xfdba ),   /* Offset= -582 (30) */
/* 614 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 616 */   NdrFcShort( 0x8 ),  /* 8 */
/* 618 */   NdrFcShort( 0x8 ),  /* 8 */
/* 620 */   0x12, 0x0,  /* FC_UP */
/* 622 */   NdrFcShort( 0xfe92 ),   /* Offset= -366 (256) */
/* 624 */   
            0x5b,       /* FC_END */

            0x6,        /* FC_SHORT */
/* 626 */   0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 628 */   0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 630 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 632 */   NdrFcShort( 0x8 ),  /* 8 */
/* 634 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 636 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 638 */   NdrFcShort( 0x4 ),  /* 4 */
/* 640 */   NdrFcShort( 0x4 ),  /* 4 */
/* 642 */   0x12, 0x0,  /* FC_UP */
/* 644 */   NdrFcShort( 0xfd9a ),   /* Offset= -614 (30) */
/* 646 */   
            0x5b,       /* FC_END */

            0x6,        /* FC_SHORT */
/* 648 */   0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 650 */   0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 652 */   
            0x1a,       /* FC_BOGUS_STRUCT */
            0x1,        /* 1 */
/* 654 */   NdrFcShort( 0x4 ),  /* 4 */
/* 656 */   NdrFcShort( 0x0 ),  /* 0 */
/* 658 */   NdrFcShort( 0x0 ),  /* Offset= 0 (658) */
/* 660 */   0xd,        /* FC_ENUM16 */
            0x5b,       /* FC_END */
/* 662 */   
            0x1c,       /* FC_CVARRAY */
            0x1,        /* 1 */
/* 664 */   NdrFcShort( 0x2 ),  /* 2 */
/* 666 */   0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 668 */   NdrFcShort( 0xa ),  /* 10 */
/* 670 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 672 */   0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 674 */   NdrFcShort( 0x8 ),  /* 8 */
/* 676 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 678 */   0x5,        /* FC_WCHAR */
            0x5b,       /* FC_END */
/* 680 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 682 */   NdrFcShort( 0x10 ), /* 16 */
/* 684 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 686 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 688 */   NdrFcShort( 0x4 ),  /* 4 */
/* 690 */   NdrFcShort( 0x4 ),  /* 4 */
/* 692 */   0x12, 0x0,  /* FC_UP */
/* 694 */   NdrFcShort( 0xfd68 ),   /* Offset= -664 (30) */
/* 696 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 698 */   NdrFcShort( 0xc ),  /* 12 */
/* 700 */   NdrFcShort( 0xc ),  /* 12 */
/* 702 */   0x12, 0x0,  /* FC_UP */
/* 704 */   NdrFcShort( 0xffd6 ),   /* Offset= -42 (662) */
/* 706 */   
            0x5b,       /* FC_END */

            0x6,        /* FC_SHORT */
/* 708 */   0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 710 */   0x6,        /* FC_SHORT */
            0x6,        /* FC_SHORT */
/* 712 */   0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 714 */   
            0x15,       /* FC_STRUCT */
            0x7,        /* 7 */
/* 716 */   NdrFcShort( 0x10 ), /* 16 */
/* 718 */   0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 720 */   NdrFcShort( 0xff3e ),   /* Offset= -194 (526) */
/* 722 */   0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 724 */   NdrFcShort( 0xff3a ),   /* Offset= -198 (526) */
/* 726 */   0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 728 */   
            0x15,       /* FC_STRUCT */
            0x0,        /* 0 */
/* 730 */   NdrFcShort( 0x1 ),  /* 1 */
/* 732 */   0x2,        /* FC_CHAR */
            0x5b,       /* FC_END */
/* 734 */   
            0x15,       /* FC_STRUCT */
            0x0,        /* 0 */
/* 736 */   NdrFcShort( 0x2 ),  /* 2 */
/* 738 */   0x2,        /* FC_CHAR */
            0x2,        /* FC_CHAR */
/* 740 */   0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 742 */   
            0x1d,       /* FC_SMFARRAY */
            0x0,        /* 0 */
/* 744 */   NdrFcShort( 0x8 ),  /* 8 */
/* 746 */   0x1,        /* FC_BYTE */
            0x5b,       /* FC_END */
/* 748 */   
            0x15,       /* FC_STRUCT */
            0x3,        /* 3 */
/* 750 */   NdrFcShort( 0x10 ), /* 16 */
/* 752 */   0x8,        /* FC_LONG */
            0x6,        /* FC_SHORT */
/* 754 */   0x6,        /* FC_SHORT */
            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 756 */   0x0,        /* 0 */
            NdrFcShort( 0xfff1 ),   /* Offset= -15 (742) */
            0x5b,       /* FC_END */
/* 760 */   
            0x1c,       /* FC_CVARRAY */
            0x1,        /* 1 */
/* 762 */   NdrFcShort( 0x2 ),  /* 2 */
/* 764 */   0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 766 */   NdrFcShort( 0x12 ), /* 18 */
/* 768 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 770 */   0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 772 */   NdrFcShort( 0x10 ), /* 16 */
/* 774 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 776 */   0x5,        /* FC_WCHAR */
            0x5b,       /* FC_END */
/* 778 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 780 */   NdrFcShort( 0x2c ), /* 44 */
/* 782 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 784 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 786 */   NdrFcShort( 0x4 ),  /* 4 */
/* 788 */   NdrFcShort( 0x4 ),  /* 4 */
/* 790 */   0x12, 0x0,  /* FC_UP */
/* 792 */   NdrFcShort( 0xfd06 ),   /* Offset= -762 (30) */
/* 794 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 796 */   NdrFcShort( 0xc ),  /* 12 */
/* 798 */   NdrFcShort( 0xc ),  /* 12 */
/* 800 */   0x12, 0x0,  /* FC_UP */
/* 802 */   NdrFcShort( 0xff74 ),   /* Offset= -140 (662) */
/* 804 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 806 */   NdrFcShort( 0x14 ), /* 20 */
/* 808 */   NdrFcShort( 0x14 ), /* 20 */
/* 810 */   0x12, 0x0,  /* FC_UP */
/* 812 */   NdrFcShort( 0xffcc ),   /* Offset= -52 (760) */
/* 814 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 816 */   NdrFcShort( 0x28 ), /* 40 */
/* 818 */   NdrFcShort( 0x28 ), /* 40 */
/* 820 */   0x12, 0x0,  /* FC_UP */
/* 822 */   NdrFcShort( 0xfdca ),   /* Offset= -566 (256) */
/* 824 */   
            0x5b,       /* FC_END */

            0x6,        /* FC_SHORT */
/* 826 */   0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 828 */   0x6,        /* FC_SHORT */
            0x6,        /* FC_SHORT */
/* 830 */   0x8,        /* FC_LONG */
            0x6,        /* FC_SHORT */
/* 832 */   0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 834 */   0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 836 */   NdrFcShort( 0xffa8 ),   /* Offset= -88 (748) */
/* 838 */   0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 840 */   
            0x11, 0x0,  /* FC_RP */
/* 842 */   NdrFcShort( 0x2 ),  /* Offset= 2 (844) */
/* 844 */   
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 846 */   0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 848 */   NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 850 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 852 */   NdrFcShort( 0xfe66 ),   /* Offset= -410 (442) */
/* 854 */   
            0x11, 0x0,  /* FC_RP */
/* 856 */   NdrFcShort( 0xfda8 ),   /* Offset= -600 (256) */
/* 858 */   
            0x11, 0x4,  /* FC_RP [alloced_on_stack] */
/* 860 */   NdrFcShort( 0x2 ),  /* Offset= 2 (862) */
/* 862 */   0x30,       /* FC_BIND_CONTEXT */
            0xa0,       /* Ctxt flags:  via ptr, out, */
/* 864 */   0x0,        /* 0 */
            0x1,        /* 1 */
/* 866 */   
            0x11, 0x4,  /* FC_RP [alloced_on_stack] */
/* 868 */   NdrFcShort( 0x38 ), /* Offset= 56 (924) */
/* 870 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 872 */   NdrFcShort( 0x4 ),  /* 4 */
/* 874 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 876 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 878 */   NdrFcShort( 0x0 ),  /* 0 */
/* 880 */   NdrFcShort( 0x0 ),  /* 0 */
/* 882 */   0x12, 0x0,  /* FC_UP */
/* 884 */   NdrFcShort( 0xfd8c ),   /* Offset= -628 (256) */
/* 886 */   
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 888 */   0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 890 */   
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 892 */   NdrFcShort( 0x4 ),  /* 4 */
/* 894 */   0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 896 */   NdrFcShort( 0x0 ),  /* 0 */
/* 898 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 900 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 902 */   
            0x48,       /* FC_VARIABLE_REPEAT */
            0x49,       /* FC_FIXED_OFFSET */
/* 904 */   NdrFcShort( 0x4 ),  /* 4 */
/* 906 */   NdrFcShort( 0x0 ),  /* 0 */
/* 908 */   NdrFcShort( 0x1 ),  /* 1 */
/* 910 */   NdrFcShort( 0x0 ),  /* 0 */
/* 912 */   NdrFcShort( 0x0 ),  /* 0 */
/* 914 */   0x12, 0x0,  /* FC_UP */
/* 916 */   NdrFcShort( 0xfd6c ),   /* Offset= -660 (256) */
/* 918 */   
            0x5b,       /* FC_END */

            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 920 */   0x0,        /* 0 */
            NdrFcShort( 0xffcd ),   /* Offset= -51 (870) */
            0x5b,       /* FC_END */
/* 924 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 926 */   NdrFcShort( 0x8 ),  /* 8 */
/* 928 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 930 */   
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 932 */   NdrFcShort( 0x4 ),  /* 4 */
/* 934 */   NdrFcShort( 0x4 ),  /* 4 */
/* 936 */   0x12, 0x0,  /* FC_UP */
/* 938 */   NdrFcShort( 0xffd0 ),   /* Offset= -48 (890) */
/* 940 */   
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 942 */   0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 944 */   
            0x11, 0x0,  /* FC_RP */
/* 946 */   NdrFcShort( 0xfea4 ),   /* Offset= -348 (598) */
/* 948 */   
            0x11, 0x4,  /* FC_RP [alloced_on_stack] */
/* 950 */   NdrFcShort( 0x2c ), /* Offset= 44 (994) */
/* 952 */   
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 954 */   NdrFcShort( 0xc ),  /* 12 */
/* 956 */   0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 958 */   NdrFcShort( 0x0 ),  /* 0 */
/* 960 */   NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 962 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 964 */   
            0x48,       /* FC_VARIABLE_REPEAT */
            0x49,       /* FC_FIXED_OFFSET */
/* 966 */   NdrFcShort( 0xc ),  /* 12 */
/* 968 */   NdrFcShort( 0x0 ),  /* 0 */
/* 970 */   NdrFcShort( 0x2 ),  /* 2 */
/* 972 */   NdrFcShort( 0x4 ),  /* 4 */
/* 974 */   NdrFcShort( 0x4 ),  /* 4 */
/* 976 */   0x12, 0x0,  /* FC_UP */
/* 978 */   NdrFcShort( 0xfc4c ),   /* Offset= -948 (30) */
/* 980 */   NdrFcShort( 0x8 ),  /* 8 */
/* 982 */   NdrFcShort( 0x8 ),  /* 8 */
/* 984 */   0x12, 0x0,  /* FC_UP */
/* 986 */   NdrFcShort( 0xfd26 ),   /* Offset= -730 (256) */
/* 988 */   
            0x5b,       /* FC_END */

            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 990 */   0x0,        /* 0 */
            NdrFcShort( 0xfe77 ),   /* Offset= -393 (598) */
            0x5b,       /* FC_END */
/* 994 */   
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 996 */   NdrFcShort( 0x8 ),  /* 8 */
/* 998 */   
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 1000 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1002 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1004 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1006 */  0x12, 0x0,  /* FC_UP */
/* 1008 */  NdrFcShort( 0xffc8 ),   /* Offset= -56 (952) */
/* 1010 */  
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 1012 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 1014 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1016 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1020 */  NdrFcLong( 0x3e8 ), /* 1000 */
/* 1024 */  
            0x11, 0x0,  /* FC_RP */
/* 1026 */  NdrFcShort( 0x2 ),  /* Offset= 2 (1028) */
/* 1028 */  
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 1030 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1032 */  0x29,       /* Corr desc:  parameter, FC_ULONG */
            0x0,        /*  */
/* 1034 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1036 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1038 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 1040 */  
            0x48,       /* FC_VARIABLE_REPEAT */
            0x49,       /* FC_FIXED_OFFSET */
/* 1042 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1044 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1046 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1048 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1050 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1052 */  0x12, 0x0,  /* FC_UP */
/* 1054 */  NdrFcShort( 0xfc00 ),   /* Offset= -1024 (30) */
/* 1056 */  
            0x5b,       /* FC_END */

            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 1058 */  0x0,        /* 0 */
            NdrFcShort( 0xfe53 ),   /* Offset= -429 (630) */
            0x5b,       /* FC_END */
/* 1062 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1064 */  NdrFcShort( 0x2 ),  /* Offset= 2 (1066) */
/* 1066 */  
            0x12, 0x0,  /* FC_UP */
/* 1068 */  NdrFcShort( 0x2 ),  /* Offset= 2 (1070) */
/* 1070 */  
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 1072 */  NdrFcShort( 0xc ),  /* 12 */
/* 1074 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 1076 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1078 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1080 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1082 */  0x12, 0x0,  /* FC_UP */
/* 1084 */  NdrFcShort( 0xff7c ),   /* Offset= -132 (952) */
/* 1086 */  
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 1088 */  0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 1090 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1092 */  
            0x11, 0x0,  /* FC_RP */
/* 1094 */  NdrFcShort( 0x2e ), /* Offset= 46 (1140) */
/* 1096 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1098 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1102 */  NdrFcLong( 0x3e8 ), /* 1000 */
/* 1106 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1108 */  NdrFcShort( 0xc ),  /* 12 */
/* 1110 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1112 */  NdrFcShort( 0x0 ),  /* Offset= 0 (1112) */
/* 1114 */  0xd,        /* FC_ENUM16 */
            0x8,        /* FC_LONG */
/* 1116 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 1118 */  
            0x21,       /* FC_BOGUS_ARRAY */
            0x3,        /* 3 */
/* 1120 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1122 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 1124 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1126 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1128 */  NdrFcLong( 0xffffffff ),    /* -1 */
/* 1132 */  NdrFcShort( 0x0 ),  /* Corr flags:  */
/* 1134 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1136 */  NdrFcShort( 0xffe2 ),   /* Offset= -30 (1106) */
/* 1138 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1140 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1142 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1144 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1146 */  NdrFcShort( 0x8 ),  /* Offset= 8 (1154) */
/* 1148 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1150 */  NdrFcShort( 0xffca ),   /* Offset= -54 (1096) */
/* 1152 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 1154 */  
            0x12, 0x0,  /* FC_UP */
/* 1156 */  NdrFcShort( 0xffda ),   /* Offset= -38 (1118) */
/* 1158 */  
            0x11, 0x0,  /* FC_RP */
/* 1160 */  NdrFcShort( 0xc ),  /* Offset= 12 (1172) */
/* 1162 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1164 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1168 */  NdrFcLong( 0x5000 ),    /* 20480 */
/* 1172 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1174 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1176 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1178 */  NdrFcShort( 0x8 ),  /* Offset= 8 (1186) */
/* 1180 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1182 */  NdrFcShort( 0xffec ),   /* Offset= -20 (1162) */
/* 1184 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 1186 */  
            0x12, 0x0,  /* FC_UP */
/* 1188 */  NdrFcShort( 0xfed6 ),   /* Offset= -298 (890) */
/* 1190 */  
            0x11, 0x0,  /* FC_RP */
/* 1192 */  NdrFcShort( 0x32 ), /* Offset= 50 (1242) */
/* 1194 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1196 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1200 */  NdrFcLong( 0x5000 ),    /* 20480 */
/* 1204 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1206 */  NdrFcShort( 0x10 ), /* 16 */
/* 1208 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1210 */  NdrFcShort( 0x0 ),  /* Offset= 0 (1210) */
/* 1212 */  0xd,        /* FC_ENUM16 */
            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 1214 */  0x0,        /* 0 */
            NdrFcShort( 0xfdb7 ),   /* Offset= -585 (630) */
            0x8,        /* FC_LONG */
/* 1218 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1220 */  
            0x21,       /* FC_BOGUS_ARRAY */
            0x3,        /* 3 */
/* 1222 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1224 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 1226 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1228 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1230 */  NdrFcLong( 0xffffffff ),    /* -1 */
/* 1234 */  NdrFcShort( 0x0 ),  /* Corr flags:  */
/* 1236 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1238 */  NdrFcShort( 0xffde ),   /* Offset= -34 (1204) */
/* 1240 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1242 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1244 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1246 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1248 */  NdrFcShort( 0x8 ),  /* Offset= 8 (1256) */
/* 1250 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1252 */  NdrFcShort( 0xffc6 ),   /* Offset= -58 (1194) */
/* 1254 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 1256 */  
            0x12, 0x0,  /* FC_UP */
/* 1258 */  NdrFcShort( 0xffda ),   /* Offset= -38 (1220) */
/* 1260 */  
            0x11, 0x0,  /* FC_RP */
/* 1262 */  NdrFcShort( 0xfd88 ),   /* Offset= -632 (630) */
/* 1264 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1266 */  NdrFcShort( 0x2 ),  /* Offset= 2 (1268) */
/* 1268 */  
            0x12, 0x0,  /* FC_UP */
/* 1270 */  NdrFcShort( 0x26 ), /* Offset= 38 (1308) */
/* 1272 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1274 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1278 */  NdrFcLong( 0x3e8 ), /* 1000 */
/* 1282 */  
            0x15,       /* FC_STRUCT */
            0x3,        /* 3 */
/* 1284 */  NdrFcShort( 0xc ),  /* 12 */
/* 1286 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1288 */  NdrFcShort( 0xfb0e ),   /* Offset= -1266 (22) */
/* 1290 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 1292 */  
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 1294 */  NdrFcShort( 0xc ),  /* 12 */
/* 1296 */  0x9,        /* Corr desc: FC_ULONG */
            0x0,        /*  */
/* 1298 */  NdrFcShort( 0xfff8 ),   /* -8 */
/* 1300 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1302 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1304 */  NdrFcShort( 0xffea ),   /* Offset= -22 (1282) */
/* 1306 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1308 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1310 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1312 */  NdrFcShort( 0xffec ),   /* Offset= -20 (1292) */
/* 1314 */  NdrFcShort( 0x0 ),  /* Offset= 0 (1314) */
/* 1316 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1318 */  NdrFcShort( 0xffd2 ),   /* Offset= -46 (1272) */
/* 1320 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 1322 */  
            0x11, 0x0,  /* FC_RP */
/* 1324 */  NdrFcShort( 0xfff0 ),   /* Offset= -16 (1308) */
/* 1326 */  
            0x11, 0xc,  /* FC_RP [alloced_on_stack] [simple_pointer] */
/* 1328 */  0x8,        /* FC_LONG */
            0x5c,       /* FC_PAD */
/* 1330 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1332 */  NdrFcShort( 0x2 ),  /* Offset= 2 (1334) */
/* 1334 */  
            0x12, 0x0,  /* FC_UP */
/* 1336 */  NdrFcShort( 0x2 ),  /* Offset= 2 (1338) */
/* 1338 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 1340 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 1342 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1344 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1346 */  NdrFcShort( 0x2 ),  /* Offset= 2 (1348) */
/* 1348 */  NdrFcShort( 0x44 ), /* 68 */
/* 1350 */  NdrFcShort( 0x300d ),   /* 12301 */
/* 1352 */  NdrFcLong( 0x1 ),   /* 1 */
/* 1356 */  NdrFcShort( 0xfd2a ),   /* Offset= -726 (630) */
/* 1358 */  NdrFcLong( 0x2 ),   /* 2 */
/* 1362 */  NdrFcShort( 0x72 ), /* Offset= 114 (1476) */
/* 1364 */  NdrFcLong( 0x3 ),   /* 3 */
/* 1368 */  NdrFcShort( 0x7e ), /* Offset= 126 (1494) */
/* 1370 */  NdrFcLong( 0x4 ),   /* 4 */
/* 1374 */  NdrFcShort( 0xba ), /* Offset= 186 (1560) */
/* 1376 */  NdrFcLong( 0x5 ),   /* 5 */
/* 1380 */  NdrFcShort( 0xfcf2 ),   /* Offset= -782 (598) */
/* 1382 */  NdrFcLong( 0x6 ),   /* 6 */
/* 1386 */  NdrFcShort( 0xcc ), /* Offset= 204 (1590) */
/* 1388 */  NdrFcLong( 0x7 ),   /* 7 */
/* 1392 */  NdrFcShort( 0x138 ),    /* Offset= 312 (1704) */
/* 1394 */  NdrFcLong( 0x8 ),   /* 8 */
/* 1398 */  NdrFcShort( 0x158 ),    /* Offset= 344 (1742) */
/* 1400 */  NdrFcLong( 0x9 ),   /* 9 */
/* 1404 */  NdrFcShort( 0x184 ),    /* Offset= 388 (1792) */
/* 1406 */  NdrFcLong( 0xa ),   /* 10 */
/* 1410 */  NdrFcShort( 0x18c ),    /* Offset= 396 (1806) */
/* 1412 */  NdrFcLong( 0xb ),   /* 11 */
/* 1416 */  NdrFcShort( 0x1a8 ),    /* Offset= 424 (1840) */
/* 1418 */  NdrFcLong( 0xc ),   /* 12 */
/* 1422 */  NdrFcShort( 0x1de ),    /* Offset= 478 (1900) */
/* 1424 */  NdrFcLong( 0xd ),   /* 13 */
/* 1428 */  NdrFcShort( 0x42 ), /* Offset= 66 (1494) */
/* 1430 */  NdrFcShort( 0xffff ),   /* Offset= -1 (1429) */
/* 1432 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1434 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1438 */  NdrFcLong( 0x5 ),   /* 5 */
/* 1442 */  
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 1444 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1446 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 1448 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1450 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1452 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 1454 */  
            0x48,       /* FC_VARIABLE_REPEAT */
            0x49,       /* FC_FIXED_OFFSET */
/* 1456 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1458 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1460 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1462 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1464 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1466 */  0x12, 0x0,  /* FC_UP */
/* 1468 */  NdrFcShort( 0xfa62 ),   /* Offset= -1438 (30) */
/* 1470 */  
            0x5b,       /* FC_END */

            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 1472 */  0x0,        /* 0 */
            NdrFcShort( 0xfcb5 ),   /* Offset= -843 (630) */
            0x5b,       /* FC_END */
/* 1476 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1478 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1480 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1482 */  NdrFcShort( 0x8 ),  /* Offset= 8 (1490) */
/* 1484 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1486 */  NdrFcShort( 0xffca ),   /* Offset= -54 (1432) */
/* 1488 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 1490 */  
            0x12, 0x0,  /* FC_UP */
/* 1492 */  NdrFcShort( 0xffce ),   /* Offset= -50 (1442) */
/* 1494 */  
            0x15,       /* FC_STRUCT */
            0x3,        /* 3 */
/* 1496 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1498 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 1500 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1502 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1506 */  NdrFcLong( 0x20010 ),   /* 131088 */
/* 1510 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1512 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1516 */  NdrFcLong( 0x20010 ),   /* 131088 */
/* 1520 */  
            0x1c,       /* FC_CVARRAY */
            0x0,        /* 0 */
/* 1522 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1524 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 1526 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1528 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1530 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 1532 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1534 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1536 */  0x2,        /* FC_CHAR */
            0x5b,       /* FC_END */
/* 1538 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1540 */  NdrFcShort( 0xc ),  /* 12 */
/* 1542 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1544 */  NdrFcShort( 0xc ),  /* Offset= 12 (1556) */
/* 1546 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1548 */  NdrFcShort( 0xffd0 ),   /* Offset= -48 (1500) */
/* 1550 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1552 */  NdrFcShort( 0xffd6 ),   /* Offset= -42 (1510) */
/* 1554 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 1556 */  
            0x12, 0x0,  /* FC_UP */
/* 1558 */  NdrFcShort( 0xffda ),   /* Offset= -38 (1520) */
/* 1560 */  
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 1562 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1564 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 1566 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1568 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1570 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1572 */  0x12, 0x0,  /* FC_UP */
/* 1574 */  NdrFcShort( 0xffdc ),   /* Offset= -36 (1538) */
/* 1576 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1578 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1580 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1582 */  0x12, 0x0,  /* FC_UP */
/* 1584 */  NdrFcShort( 0xffd2 ),   /* Offset= -46 (1538) */
/* 1586 */  
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 1588 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 1590 */  
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 1592 */  NdrFcShort( 0x20 ), /* 32 */
/* 1594 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 1596 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1598 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1600 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1602 */  0x12, 0x0,  /* FC_UP */
/* 1604 */  NdrFcShort( 0xf9da ),   /* Offset= -1574 (30) */
/* 1606 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1608 */  NdrFcShort( 0xc ),  /* 12 */
/* 1610 */  NdrFcShort( 0xc ),  /* 12 */
/* 1612 */  0x12, 0x0,  /* FC_UP */
/* 1614 */  NdrFcShort( 0xfc48 ),   /* Offset= -952 (662) */
/* 1616 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1618 */  NdrFcShort( 0x10 ), /* 16 */
/* 1620 */  NdrFcShort( 0x10 ), /* 16 */
/* 1622 */  0x12, 0x0,  /* FC_UP */
/* 1624 */  NdrFcShort( 0xfaa8 ),   /* Offset= -1368 (256) */
/* 1626 */  
            0x5b,       /* FC_END */

            0x6,        /* FC_SHORT */
/* 1628 */  0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 1630 */  0x6,        /* FC_SHORT */
            0x6,        /* FC_SHORT */
/* 1632 */  0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 1634 */  0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 1636 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 1638 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1640 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1644 */  NdrFcLong( 0x1 ),   /* 1 */
/* 1648 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1650 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1654 */  NdrFcLong( 0x1 ),   /* 1 */
/* 1658 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1660 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1664 */  NdrFcLong( 0x10000 ),   /* 65536 */
/* 1668 */  
            0x1b,       /* FC_CARRAY */
            0x0,        /* 0 */
/* 1670 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1672 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 1674 */  NdrFcShort( 0xc ),  /* 12 */
/* 1676 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1678 */  0x2,        /* FC_CHAR */
            0x5b,       /* FC_END */
/* 1680 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x7,        /* 7 */
/* 1682 */  NdrFcShort( 0x18 ), /* 24 */
/* 1684 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1686 */  NdrFcShort( 0xe ),  /* Offset= 14 (1700) */
/* 1688 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1690 */  NdrFcShort( 0xfb74 ),   /* Offset= -1164 (526) */
/* 1692 */  0x8,        /* FC_LONG */
            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 1694 */  0x0,        /* 0 */
            NdrFcShort( 0xffdb ),   /* Offset= -37 (1658) */
            0x36,       /* FC_POINTER */
/* 1698 */  0x40,       /* FC_STRUCTPAD4 */
            0x5b,       /* FC_END */
/* 1700 */  
            0x12, 0x0,  /* FC_UP */
/* 1702 */  NdrFcShort( 0xffde ),   /* Offset= -34 (1668) */
/* 1704 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1706 */  NdrFcShort( 0x18 ), /* 24 */
/* 1708 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1710 */  NdrFcShort( 0x10 ), /* Offset= 16 (1726) */
/* 1712 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1714 */  NdrFcShort( 0xffb4 ),   /* Offset= -76 (1638) */
/* 1716 */  0x36,       /* FC_POINTER */
            0x36,       /* FC_POINTER */
/* 1718 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1720 */  NdrFcShort( 0xffb8 ),   /* Offset= -72 (1648) */
/* 1722 */  0x36,       /* FC_POINTER */
            0x36,       /* FC_POINTER */
/* 1724 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1726 */  
            0x12, 0x0,  /* FC_UP */
/* 1728 */  NdrFcShort( 0xffd0 ),   /* Offset= -48 (1680) */
/* 1730 */  
            0x12, 0x0,  /* FC_UP */
/* 1732 */  NdrFcShort( 0xffcc ),   /* Offset= -52 (1680) */
/* 1734 */  
            0x12, 0x0,  /* FC_UP */
/* 1736 */  NdrFcShort( 0xffc8 ),   /* Offset= -56 (1680) */
/* 1738 */  
            0x12, 0x0,  /* FC_UP */
/* 1740 */  NdrFcShort( 0xffc4 ),   /* Offset= -60 (1680) */
/* 1742 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1744 */  NdrFcShort( 0x3c ), /* 60 */
/* 1746 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1748 */  NdrFcShort( 0x0 ),  /* Offset= 0 (1748) */
/* 1750 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1752 */  NdrFcShort( 0xff5e ),   /* Offset= -162 (1590) */
/* 1754 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1756 */  NdrFcShort( 0xfefa ),   /* Offset= -262 (1494) */
/* 1758 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1760 */  NdrFcShort( 0xffc8 ),   /* Offset= -56 (1704) */
/* 1762 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1764 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1766 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1770 */  NdrFcLong( 0x10000 ),   /* 65536 */
/* 1774 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1776 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1778 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1780 */  NdrFcShort( 0x8 ),  /* Offset= 8 (1788) */
/* 1782 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1784 */  NdrFcShort( 0xffec ),   /* Offset= -20 (1764) */
/* 1786 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 1788 */  
            0x12, 0x0,  /* FC_UP */
/* 1790 */  NdrFcShort( 0xf994 ),   /* Offset= -1644 (146) */
/* 1792 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1794 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1796 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1798 */  NdrFcShort( 0x0 ),  /* Offset= 0 (1798) */
/* 1800 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1802 */  NdrFcShort( 0xffe4 ),   /* Offset= -28 (1774) */
/* 1804 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1806 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1808 */  NdrFcShort( 0x2c ), /* 44 */
/* 1810 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1812 */  NdrFcShort( 0x0 ),  /* Offset= 0 (1812) */
/* 1814 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1816 */  NdrFcShort( 0xff1e ),   /* Offset= -226 (1590) */
/* 1818 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1820 */  NdrFcShort( 0xfeba ),   /* Offset= -326 (1494) */
/* 1822 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1824 */  NdrFcShort( 0xffe0 ),   /* Offset= -32 (1792) */
/* 1826 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1828 */  
            0x1b,       /* FC_CARRAY */
            0x0,        /* 0 */
/* 1830 */  NdrFcShort( 0x1 ),  /* 1 */
/* 1832 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 1834 */  NdrFcShort( 0x20 ), /* 32 */
/* 1836 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1838 */  0x2,        /* FC_CHAR */
            0x5b,       /* FC_END */
/* 1840 */  
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 1842 */  NdrFcShort( 0x28 ), /* 40 */
/* 1844 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 1846 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1848 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1850 */  NdrFcShort( 0x4 ),  /* 4 */
/* 1852 */  0x12, 0x0,  /* FC_UP */
/* 1854 */  NdrFcShort( 0xf8e0 ),   /* Offset= -1824 (30) */
/* 1856 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1858 */  NdrFcShort( 0xc ),  /* 12 */
/* 1860 */  NdrFcShort( 0xc ),  /* 12 */
/* 1862 */  0x12, 0x0,  /* FC_UP */
/* 1864 */  NdrFcShort( 0xfb4e ),   /* Offset= -1202 (662) */
/* 1866 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1868 */  NdrFcShort( 0x10 ), /* 16 */
/* 1870 */  NdrFcShort( 0x10 ), /* 16 */
/* 1872 */  0x12, 0x0,  /* FC_UP */
/* 1874 */  NdrFcShort( 0xf9ae ),   /* Offset= -1618 (256) */
/* 1876 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 1878 */  NdrFcShort( 0x24 ), /* 36 */
/* 1880 */  NdrFcShort( 0x24 ), /* 36 */
/* 1882 */  0x12, 0x0,  /* FC_UP */
/* 1884 */  NdrFcShort( 0xffc8 ),   /* Offset= -56 (1828) */
/* 1886 */  
            0x5b,       /* FC_END */

            0x6,        /* FC_SHORT */
/* 1888 */  0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 1890 */  0x6,        /* FC_SHORT */
            0x6,        /* FC_SHORT */
/* 1892 */  0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 1894 */  0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 1896 */  0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 1898 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 1900 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1902 */  NdrFcShort( 0x44 ), /* 68 */
/* 1904 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1906 */  NdrFcShort( 0x0 ),  /* Offset= 0 (1906) */
/* 1908 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1910 */  NdrFcShort( 0xffba ),   /* Offset= -70 (1840) */
/* 1912 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1914 */  NdrFcShort( 0xfe5c ),   /* Offset= -420 (1494) */
/* 1916 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1918 */  NdrFcShort( 0xff2a ),   /* Offset= -214 (1704) */
/* 1920 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 1922 */  
            0x11, 0x0,  /* FC_RP */
/* 1924 */  NdrFcShort( 0x2 ),  /* Offset= 2 (1926) */
/* 1926 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 1928 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 1930 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 1932 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 1934 */  NdrFcShort( 0xfdb6 ),   /* Offset= -586 (1348) */
/* 1936 */  
            0x12, 0x0,  /* FC_UP */
/* 1938 */  NdrFcShort( 0xfe70 ),   /* Offset= -400 (1538) */
/* 1940 */  
            0x12, 0x14, /* FC_UP [alloced_on_stack] [pointer_deref] */
/* 1942 */  NdrFcShort( 0xfffa ),   /* Offset= -6 (1936) */
/* 1944 */  
            0x12, 0x0,  /* FC_UP */
/* 1946 */  NdrFcShort( 0xfa74 ),   /* Offset= -1420 (526) */
/* 1948 */  
            0x11, 0x4,  /* FC_RP [alloced_on_stack] */
/* 1950 */  NdrFcShort( 0xf878 ),   /* Offset= -1928 (22) */
/* 1952 */  
            0x11, 0x0,  /* FC_RP */
/* 1954 */  NdrFcShort( 0xf874 ),   /* Offset= -1932 (22) */
/* 1956 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1958 */  NdrFcShort( 0x2 ),  /* Offset= 2 (1960) */
/* 1960 */  
            0x12, 0x0,  /* FC_UP */
/* 1962 */  NdrFcShort( 0xfacc ),   /* Offset= -1332 (630) */
/* 1964 */  
            0x11, 0xc,  /* FC_RP [alloced_on_stack] [simple_pointer] */
/* 1966 */  0x6,        /* FC_SHORT */
            0x5c,       /* FC_PAD */
/* 1968 */  
            0x11, 0x4,  /* FC_RP [alloced_on_stack] */
/* 1970 */  NdrFcShort( 0xc ),  /* Offset= 12 (1982) */
/* 1972 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 1974 */  NdrFcLong( 0x0 ),   /* 0 */
/* 1978 */  NdrFcLong( 0x100 ), /* 256 */
/* 1982 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 1984 */  NdrFcShort( 0x8 ),  /* 8 */
/* 1986 */  NdrFcShort( 0x0 ),  /* 0 */
/* 1988 */  NdrFcShort( 0x8 ),  /* Offset= 8 (1996) */
/* 1990 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 1992 */  NdrFcShort( 0xffec ),   /* Offset= -20 (1972) */
/* 1994 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 1996 */  
            0x12, 0x0,  /* FC_UP */
/* 1998 */  NdrFcShort( 0xfdd4 ),   /* Offset= -556 (1442) */
/* 2000 */  
            0x11, 0x0,  /* FC_RP */
/* 2002 */  NdrFcShort( 0xffec ),   /* Offset= -20 (1982) */
/* 2004 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2006 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2008) */
/* 2008 */  
            0x12, 0x0,  /* FC_UP */
/* 2010 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2012) */
/* 2012 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 2014 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 2016 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2018 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2020 */  NdrFcShort( 0xfd60 ),   /* Offset= -672 (1348) */
/* 2022 */  
            0x11, 0x0,  /* FC_RP */
/* 2024 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2026) */
/* 2026 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 2028 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 2030 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2032 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2034 */  NdrFcShort( 0xfd52 ),   /* Offset= -686 (1348) */
/* 2036 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2038 */  NdrFcShort( 0xff9a ),   /* Offset= -102 (1936) */
/* 2040 */  
            0x12, 0x8,  /* FC_UP [simple_pointer] */
/* 2042 */  
            0x25,       /* FC_C_WSTRING */
            0x5c,       /* FC_PAD */
/* 2044 */  
            0x12, 0x14, /* FC_UP [alloced_on_stack] [pointer_deref] */
/* 2046 */  NdrFcShort( 0xffaa ),   /* Offset= -86 (1960) */
/* 2048 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2050 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2052) */
/* 2052 */  
            0x12, 0x0,  /* FC_UP */
/* 2054 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2056) */
/* 2056 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 2058 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 2060 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2062 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2064 */  NdrFcShort( 0xf9aa ),   /* Offset= -1622 (442) */
/* 2066 */  
            0x11, 0x0,  /* FC_RP */
/* 2068 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2070) */
/* 2070 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 2072 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 2074 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2076 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2078 */  NdrFcShort( 0xf99c ),   /* Offset= -1636 (442) */
/* 2080 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2082 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2084) */
/* 2084 */  
            0x12, 0x0,  /* FC_UP */
/* 2086 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2088) */
/* 2088 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 2090 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 2092 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2094 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2096 */  NdrFcShort( 0xfd14 ),   /* Offset= -748 (1348) */
/* 2098 */  
            0x11, 0x0,  /* FC_RP */
/* 2100 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2102) */
/* 2102 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 2104 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 2106 */  NdrFcShort( 0x8 ),  /* x86 Stack size/offset = 8 */
/* 2108 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2110 */  NdrFcShort( 0xfd06 ),   /* Offset= -762 (1348) */
/* 2112 */  
            0x11, 0x4,  /* FC_RP [alloced_on_stack] */
/* 2114 */  NdrFcShort( 0x34 ), /* Offset= 52 (2166) */
/* 2116 */  
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 2118 */  NdrFcShort( 0x20 ), /* 32 */
/* 2120 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 2122 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2124 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2126 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 2128 */  
            0x48,       /* FC_VARIABLE_REPEAT */
            0x49,       /* FC_FIXED_OFFSET */
/* 2130 */  NdrFcShort( 0x20 ), /* 32 */
/* 2132 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2134 */  NdrFcShort( 0x3 ),  /* 3 */
/* 2136 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2138 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2140 */  0x12, 0x0,  /* FC_UP */
/* 2142 */  NdrFcShort( 0xf7c0 ),   /* Offset= -2112 (30) */
/* 2144 */  NdrFcShort( 0xc ),  /* 12 */
/* 2146 */  NdrFcShort( 0xc ),  /* 12 */
/* 2148 */  0x12, 0x0,  /* FC_UP */
/* 2150 */  NdrFcShort( 0xfa30 ),   /* Offset= -1488 (662) */
/* 2152 */  NdrFcShort( 0x10 ), /* 16 */
/* 2154 */  NdrFcShort( 0x10 ), /* 16 */
/* 2156 */  0x12, 0x0,  /* FC_UP */
/* 2158 */  NdrFcShort( 0xf892 ),   /* Offset= -1902 (256) */
/* 2160 */  
            0x5b,       /* FC_END */

            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 2162 */  0x0,        /* 0 */
            NdrFcShort( 0xfdc3 ),   /* Offset= -573 (1590) */
            0x5b,       /* FC_END */
/* 2166 */  
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 2168 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2170 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 2172 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 2174 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2176 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2178 */  0x12, 0x0,  /* FC_UP */
/* 2180 */  NdrFcShort( 0xffc0 ),   /* Offset= -64 (2116) */
/* 2182 */  
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 2184 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 2186 */  
            0x11, 0x0,  /* FC_RP */
/* 2188 */  NdrFcShort( 0xfdaa ),   /* Offset= -598 (1590) */
/* 2190 */  
            0x11, 0x0,  /* FC_RP */
/* 2192 */  NdrFcShort( 0xfe18 ),   /* Offset= -488 (1704) */
/* 2194 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2196 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2198) */
/* 2198 */  
            0x12, 0x0,  /* FC_UP */
/* 2200 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2202) */
/* 2202 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 2204 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 2206 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2208 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2210 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2212) */
/* 2212 */  NdrFcShort( 0x30 ), /* 48 */
/* 2214 */  NdrFcShort( 0x7003 ),   /* 28675 */
/* 2216 */  NdrFcLong( 0x1 ),   /* 1 */
/* 2220 */  NdrFcShort( 0xfd2a ),   /* Offset= -726 (1494) */
/* 2222 */  NdrFcLong( 0x2 ),   /* 2 */
/* 2226 */  NdrFcShort( 0xa ),  /* Offset= 10 (2236) */
/* 2228 */  NdrFcLong( 0x3 ),   /* 3 */
/* 2232 */  NdrFcShort( 0x18 ), /* Offset= 24 (2256) */
/* 2234 */  NdrFcShort( 0xffff ),   /* Offset= -1 (2233) */
/* 2236 */  
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 2238 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2240 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 2242 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 2244 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2246 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2248 */  0x12, 0x0,  /* FC_UP */
/* 2250 */  NdrFcShort( 0xf7c8 ),   /* Offset= -2104 (146) */
/* 2252 */  
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 2254 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 2256 */  
            0x15,       /* FC_STRUCT */
            0x7,        /* 7 */
/* 2258 */  NdrFcShort( 0x30 ), /* 48 */
/* 2260 */  0x8,        /* FC_LONG */
            0x40,       /* FC_STRUCTPAD4 */
/* 2262 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2264 */  NdrFcShort( 0xf936 ),   /* Offset= -1738 (526) */
/* 2266 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2268 */  NdrFcShort( 0xf932 ),   /* Offset= -1742 (526) */
/* 2270 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2272 */  NdrFcShort( 0xf92e ),   /* Offset= -1746 (526) */
/* 2274 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2276 */  NdrFcShort( 0xf92a ),   /* Offset= -1750 (526) */
/* 2278 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2280 */  NdrFcShort( 0xf926 ),   /* Offset= -1754 (526) */
/* 2282 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 2284 */  
            0x12, 0x0,  /* FC_UP */
/* 2286 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2288) */
/* 2288 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 2290 */  0x26,       /* Corr desc:  parameter, FC_SHORT */
            0x0,        /*  */
/* 2292 */  NdrFcShort( 0x4 ),  /* x86 Stack size/offset = 4 */
/* 2294 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2296 */  NdrFcShort( 0xffac ),   /* Offset= -84 (2212) */
/* 2298 */  
            0x11, 0x0,  /* FC_RP */
/* 2300 */  NdrFcShort( 0x32 ), /* Offset= 50 (2350) */
/* 2302 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 2304 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2308 */  NdrFcLong( 0x5000 ),    /* 20480 */
/* 2312 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 2314 */  NdrFcShort( 0x14 ), /* 20 */
/* 2316 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2318 */  NdrFcShort( 0x0 ),  /* Offset= 0 (2318) */
/* 2320 */  0xd,        /* FC_ENUM16 */
            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 2322 */  0x0,        /* 0 */
            NdrFcShort( 0xf963 ),   /* Offset= -1693 (630) */
            0x8,        /* FC_LONG */
/* 2326 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 2328 */  
            0x21,       /* FC_BOGUS_ARRAY */
            0x3,        /* 3 */
/* 2330 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2332 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 2334 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2336 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2338 */  NdrFcLong( 0xffffffff ),    /* -1 */
/* 2342 */  NdrFcShort( 0x0 ),  /* Corr flags:  */
/* 2344 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2346 */  NdrFcShort( 0xffde ),   /* Offset= -34 (2312) */
/* 2348 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 2350 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 2352 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2354 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2356 */  NdrFcShort( 0x8 ),  /* Offset= 8 (2364) */
/* 2358 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2360 */  NdrFcShort( 0xffc6 ),   /* Offset= -58 (2302) */
/* 2362 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 2364 */  
            0x12, 0x0,  /* FC_UP */
/* 2366 */  NdrFcShort( 0xffda ),   /* Offset= -38 (2328) */
/* 2368 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 2370 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2374 */  NdrFcLong( 0x3e8 ), /* 1000 */
/* 2378 */  
            0x11, 0x0,  /* FC_RP */
/* 2380 */  NdrFcShort( 0x30 ), /* Offset= 48 (2428) */
/* 2382 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 2384 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2388 */  NdrFcLong( 0x3e8 ), /* 1000 */
/* 2392 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 2394 */  NdrFcShort( 0x10 ), /* 16 */
/* 2396 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2398 */  NdrFcShort( 0x0 ),  /* Offset= 0 (2398) */
/* 2400 */  0xd,        /* FC_ENUM16 */
            0x8,        /* FC_LONG */
/* 2402 */  0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 2404 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 2406 */  
            0x21,       /* FC_BOGUS_ARRAY */
            0x3,        /* 3 */
/* 2408 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2410 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 2412 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2414 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2416 */  NdrFcLong( 0xffffffff ),    /* -1 */
/* 2420 */  NdrFcShort( 0x0 ),  /* Corr flags:  */
/* 2422 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2424 */  NdrFcShort( 0xffe0 ),   /* Offset= -32 (2392) */
/* 2426 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 2428 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 2430 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2432 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2434 */  NdrFcShort( 0x8 ),  /* Offset= 8 (2442) */
/* 2436 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2438 */  NdrFcShort( 0xffc8 ),   /* Offset= -56 (2382) */
/* 2440 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 2442 */  
            0x12, 0x0,  /* FC_UP */
/* 2444 */  NdrFcShort( 0xffda ),   /* Offset= -38 (2406) */
/* 2446 */  
            0x11, 0x0,  /* FC_RP */
/* 2448 */  NdrFcShort( 0xfd70 ),   /* Offset= -656 (1792) */
/* 2450 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 2452 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2456 */  NdrFcLong( 0x3e8 ), /* 1000 */
/* 2460 */  
            0x11, 0x0,  /* FC_RP */
/* 2462 */  NdrFcShort( 0x34 ), /* Offset= 52 (2514) */
/* 2464 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 2466 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2470 */  NdrFcLong( 0x3e8 ), /* 1000 */
/* 2474 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 2476 */  NdrFcShort( 0x10 ), /* 16 */
/* 2478 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2480 */  NdrFcShort( 0x8 ),  /* Offset= 8 (2488) */
/* 2482 */  0xd,        /* FC_ENUM16 */
            0x36,       /* FC_POINTER */
/* 2484 */  0x8,        /* FC_LONG */
            0x8,        /* FC_LONG */
/* 2486 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 2488 */  
            0x12, 0x0,  /* FC_UP */
/* 2490 */  NdrFcShort( 0xf746 ),   /* Offset= -2234 (256) */
/* 2492 */  
            0x21,       /* FC_BOGUS_ARRAY */
            0x3,        /* 3 */
/* 2494 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2496 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 2498 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2500 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2502 */  NdrFcLong( 0xffffffff ),    /* -1 */
/* 2506 */  NdrFcShort( 0x0 ),  /* Corr flags:  */
/* 2508 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2510 */  NdrFcShort( 0xffdc ),   /* Offset= -36 (2474) */
/* 2512 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 2514 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 2516 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2518 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2520 */  NdrFcShort( 0x8 ),  /* Offset= 8 (2528) */
/* 2522 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2524 */  NdrFcShort( 0xffc4 ),   /* Offset= -60 (2464) */
/* 2526 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 2528 */  
            0x12, 0x0,  /* FC_UP */
/* 2530 */  NdrFcShort( 0xffda ),   /* Offset= -38 (2492) */
/* 2532 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2534 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2536) */
/* 2536 */  
            0x12, 0x0,  /* FC_UP */
/* 2538 */  NdrFcShort( 0xd0 ), /* Offset= 208 (2746) */
/* 2540 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 2542 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2546 */  NdrFcLong( 0xfa0 ), /* 4000 */
/* 2550 */  
            0x2b,       /* FC_NON_ENCAPSULATED_UNION */
            0xd,        /* FC_ENUM16 */
/* 2552 */  0x6,        /* Corr desc: FC_SHORT */
            0x0,        /*  */
/* 2554 */  NdrFcShort( 0xfff4 ),   /* -12 */
/* 2556 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2558 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2560) */
/* 2560 */  NdrFcShort( 0x14 ), /* 20 */
/* 2562 */  NdrFcShort( 0x3003 ),   /* 12291 */
/* 2564 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2568 */  NdrFcShort( 0xf86e ),   /* Offset= -1938 (630) */
/* 2570 */  NdrFcLong( 0x1 ),   /* 1 */
/* 2574 */  NdrFcShort( 0xf868 ),   /* Offset= -1944 (630) */
/* 2576 */  NdrFcLong( 0x2 ),   /* 2 */
/* 2580 */  NdrFcShort( 0x28 ), /* Offset= 40 (2620) */
/* 2582 */  NdrFcShort( 0x5e ), /* Offset= 94 (2676) */
/* 2584 */  
            0x1c,       /* FC_CVARRAY */
            0x1,        /* 1 */
/* 2586 */  NdrFcShort( 0x2 ),  /* 2 */
/* 2588 */  0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 2590 */  NdrFcShort( 0x6 ),  /* 6 */
/* 2592 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2594 */  0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 2596 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2598 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2600 */  0x5,        /* FC_WCHAR */
            0x5b,       /* FC_END */
/* 2602 */  
            0x1c,       /* FC_CVARRAY */
            0x1,        /* 1 */
/* 2604 */  NdrFcShort( 0x2 ),  /* 2 */
/* 2606 */  0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 2608 */  NdrFcShort( 0xe ),  /* 14 */
/* 2610 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2612 */  0x17,       /* Corr desc:  field pointer, FC_USHORT */
            0x55,       /* FC_DIV_2 */
/* 2614 */  NdrFcShort( 0xc ),  /* 12 */
/* 2616 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2618 */  0x5,        /* FC_WCHAR */
            0x5b,       /* FC_END */
/* 2620 */  
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 2622 */  NdrFcShort( 0x14 ), /* 20 */
/* 2624 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 2626 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 2628 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2630 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2632 */  0x12, 0x0,  /* FC_UP */
/* 2634 */  NdrFcShort( 0xf6b6 ),   /* Offset= -2378 (256) */
/* 2636 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 2638 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2640 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2642 */  0x12, 0x0,  /* FC_UP */
/* 2644 */  NdrFcShort( 0xffc4 ),   /* Offset= -60 (2584) */
/* 2646 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 2648 */  NdrFcShort( 0x10 ), /* 16 */
/* 2650 */  NdrFcShort( 0x10 ), /* 16 */
/* 2652 */  0x12, 0x0,  /* FC_UP */
/* 2654 */  NdrFcShort( 0xffcc ),   /* Offset= -52 (2602) */
/* 2656 */  
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 2658 */  0x6,        /* FC_SHORT */
            0x6,        /* FC_SHORT */
/* 2660 */  0x8,        /* FC_LONG */
            0x6,        /* FC_SHORT */
/* 2662 */  0x6,        /* FC_SHORT */
            0x8,        /* FC_LONG */
/* 2664 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 2666 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 2668 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2672 */  NdrFcLong( 0x20000 ),   /* 131072 */
/* 2676 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 2678 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2680 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2682 */  NdrFcShort( 0x8 ),  /* Offset= 8 (2690) */
/* 2684 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2686 */  NdrFcShort( 0xffec ),   /* Offset= -20 (2666) */
/* 2688 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 2690 */  
            0x12, 0x0,  /* FC_UP */
/* 2692 */  NdrFcShort( 0xf60e ),   /* Offset= -2546 (146) */
/* 2694 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x7,        /* 7 */
/* 2696 */  NdrFcShort( 0x28 ), /* 40 */
/* 2698 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2700 */  NdrFcShort( 0x0 ),  /* Offset= 0 (2700) */
/* 2702 */  0x8,        /* FC_LONG */
            0xd,        /* FC_ENUM16 */
/* 2704 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2706 */  NdrFcShort( 0xf77c ),   /* Offset= -2180 (526) */
/* 2708 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2710 */  NdrFcShort( 0xff60 ),   /* Offset= -160 (2550) */
/* 2712 */  0x40,       /* FC_STRUCTPAD4 */
            0x5b,       /* FC_END */
/* 2714 */  
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 2716 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2718 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 2720 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2722 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2724 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 2726 */  
            0x48,       /* FC_VARIABLE_REPEAT */
            0x49,       /* FC_FIXED_OFFSET */
/* 2728 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2730 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2732 */  NdrFcShort( 0x1 ),  /* 1 */
/* 2734 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2736 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2738 */  0x12, 0x0,  /* FC_UP */
/* 2740 */  NdrFcShort( 0xffd2 ),   /* Offset= -46 (2694) */
/* 2742 */  
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 2744 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 2746 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 2748 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2750 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2752 */  NdrFcShort( 0x8 ),  /* Offset= 8 (2760) */
/* 2754 */  0x4c,       /* FC_EMBEDDED_COMPLEX */
            0x0,        /* 0 */
/* 2756 */  NdrFcShort( 0xff28 ),   /* Offset= -216 (2540) */
/* 2758 */  0x36,       /* FC_POINTER */
            0x5b,       /* FC_END */
/* 2760 */  
            0x12, 0x0,  /* FC_UP */
/* 2762 */  NdrFcShort( 0xffd0 ),   /* Offset= -48 (2714) */
/* 2764 */  
            0x11, 0x0,  /* FC_RP */
/* 2766 */  NdrFcShort( 0xffec ),   /* Offset= -20 (2746) */
/* 2768 */  
            0x11, 0x14, /* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2770 */  NdrFcShort( 0x2 ),  /* Offset= 2 (2772) */
/* 2772 */  
            0x12, 0x0,  /* FC_UP */
/* 2774 */  NdrFcShort( 0x32 ), /* Offset= 50 (2824) */
/* 2776 */  
            0x1a,       /* FC_BOGUS_STRUCT */
            0x3,        /* 3 */
/* 2778 */  NdrFcShort( 0x14 ), /* 20 */
/* 2780 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2782 */  NdrFcShort( 0x0 ),  /* Offset= 0 (2782) */
/* 2784 */  0x8,        /* FC_LONG */
            0xd,        /* FC_ENUM16 */
/* 2786 */  0x8,        /* FC_LONG */
            0x4c,       /* FC_EMBEDDED_COMPLEX */
/* 2788 */  0x0,        /* 0 */
            NdrFcShort( 0xf791 ),   /* Offset= -2159 (630) */
            0x5b,       /* FC_END */
/* 2792 */  
            0x1b,       /* FC_CARRAY */
            0x3,        /* 3 */
/* 2794 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2796 */  0x19,       /* Corr desc:  field pointer, FC_ULONG */
            0x0,        /*  */
/* 2798 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2800 */  NdrFcShort( 0x1 ),  /* Corr flags:  early, */
/* 2802 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 2804 */  
            0x48,       /* FC_VARIABLE_REPEAT */
            0x49,       /* FC_FIXED_OFFSET */
/* 2806 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2808 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2810 */  NdrFcShort( 0x1 ),  /* 1 */
/* 2812 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2814 */  NdrFcShort( 0x0 ),  /* 0 */
/* 2816 */  0x12, 0x0,  /* FC_UP */
/* 2818 */  NdrFcShort( 0xffd6 ),   /* Offset= -42 (2776) */
/* 2820 */  
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 2822 */  0x5c,       /* FC_PAD */
            0x5b,       /* FC_END */
/* 2824 */  
            0x16,       /* FC_PSTRUCT */
            0x3,        /* 3 */
/* 2826 */  NdrFcShort( 0x8 ),  /* 8 */
/* 2828 */  
            0x4b,       /* FC_PP */
            0x5c,       /* FC_PAD */
/* 2830 */  
            0x46,       /* FC_NO_REPEAT */
            0x5c,       /* FC_PAD */
/* 2832 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2834 */  NdrFcShort( 0x4 ),  /* 4 */
/* 2836 */  0x12, 0x0,  /* FC_UP */
/* 2838 */  NdrFcShort( 0xffd2 ),   /* Offset= -46 (2792) */
/* 2840 */  
            0x5b,       /* FC_END */

            0x8,        /* FC_LONG */
/* 2842 */  0x8,        /* FC_LONG */
            0x5b,       /* FC_END */
/* 2844 */  0xb7,       /* FC_RANGE */
            0x8,        /* 8 */
/* 2846 */  NdrFcLong( 0x0 ),   /* 0 */
/* 2850 */  NdrFcLong( 0x3e8 ), /* 1000 */

            0x0     
";

        #endregion X86

        #region X64
        // LSA offset of proc format string for every procedure, copied from MIDL generated stub.
        internal static readonly ushort[] X64_ProcFormatStringOffsetTable = new ushort[]
        {
       0,
    44,
    74,
    136,
    192,
    248,
    278,
    334,
    390,
    446,
    476,
    538,
    600,
    662,
    724,
    804,
    878,
    940,
    1002,
    1052,
    1102,
    1158,
    1188,
    1218,
    1268,
    1318,
    1380,
    1436,
    1492,
    1554,
    1610,
    1678,
    1734,
    1790,
    1864,
    1908,
    1964,
    2020,
    2076,
    2138,
    2200,
    2262,
    2312,
    2368,
    2424,
    2480,
    2534,
    2590,
    2646,
    2708,
    2770,
    2832,
    2900,
    2930,
    2986,
    3042,
    3104,
    3134,
    3220,
    3312,
    3380,
    3410,
    3440,
    3470,
    3500,
    3530,
    3560,
    3590,
    3620,
    3712,
    3742,
    3772,
    3802,
    3832,
    3894,
    3968,
    3998,
    4076
        };

        // LSA proc format string generated by midl
        private const string X64_PROC_FORMAT_STRING = @"
 /* Procedure LsarClose */

			0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/*  2 */	NdrFcLong( 0x0 ),	/* 0 */
/*  6 */	NdrFcShort( 0x0 ),	/* 0 */
/*  8 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 10 */	0x30,		/* FC_BIND_CONTEXT */
			0xe0,		/* Ctxt flags:  via ptr, in, out, */
/* 12 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 14 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 16 */	NdrFcShort( 0x38 ),	/* 56 */
/* 18 */	NdrFcShort( 0x40 ),	/* 64 */
/* 20 */	0x44,		/* Oi2 Flags:  has return, has ext, */
			0x2,		/* 2 */
/* 22 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 24 */	NdrFcShort( 0x0 ),	/* 0 */
/* 26 */	NdrFcShort( 0x0 ),	/* 0 */
/* 28 */	NdrFcShort( 0x0 ),	/* 0 */
/* 30 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ObjectHandle */

/* 32 */	NdrFcShort( 0x118 ),	/* Flags:  in, out, simple ref, */
/* 34 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 36 */	NdrFcShort( 0x6 ),	/* Type Offset=6 */

	/* Return value */

/* 38 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 40 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 42 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure Opnum1NotUsedOnWire */

/* 44 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 46 */	NdrFcLong( 0x0 ),	/* 0 */
/* 50 */	NdrFcShort( 0x1 ),	/* 1 */
/* 52 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 54 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 56 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 58 */	NdrFcShort( 0x0 ),	/* 0 */
/* 60 */	NdrFcShort( 0x0 ),	/* 0 */
/* 62 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 64 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 66 */	NdrFcShort( 0x0 ),	/* 0 */
/* 68 */	NdrFcShort( 0x0 ),	/* 0 */
/* 70 */	NdrFcShort( 0x0 ),	/* 0 */
/* 72 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure LsarEnumeratePrivileges */


	/* Parameter IDL_handle */

/* 74 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 76 */	NdrFcLong( 0x0 ),	/* 0 */
/* 80 */	NdrFcShort( 0x2 ),	/* 2 */
/* 82 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 84 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 86 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 88 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 90 */	NdrFcShort( 0x48 ),	/* 72 */
/* 92 */	NdrFcShort( 0x24 ),	/* 36 */
/* 94 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x5,		/* 5 */
/* 96 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 98 */	NdrFcShort( 0x1 ),	/* 1 */
/* 100 */	NdrFcShort( 0x0 ),	/* 0 */
/* 102 */	NdrFcShort( 0x0 ),	/* 0 */
/* 104 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 106 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 108 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 110 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter EnumerationContext */

/* 112 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 114 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 116 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter EnumerationBuffer */

/* 118 */	NdrFcShort( 0x4113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=16 */
/* 120 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 122 */	NdrFcShort( 0x6a ),	/* Type Offset=106 */

	/* Parameter PreferedMaximumLength */

/* 124 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 126 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 128 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 130 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 132 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 134 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarQuerySecurityObject */

/* 136 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 138 */	NdrFcLong( 0x0 ),	/* 0 */
/* 142 */	NdrFcShort( 0x3 ),	/* 3 */
/* 144 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 146 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 148 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 150 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 152 */	NdrFcShort( 0x2c ),	/* 44 */
/* 154 */	NdrFcShort( 0x8 ),	/* 8 */
/* 156 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x4,		/* 4 */
/* 158 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 160 */	NdrFcShort( 0x1 ),	/* 1 */
/* 162 */	NdrFcShort( 0x0 ),	/* 0 */
/* 164 */	NdrFcShort( 0x0 ),	/* 0 */
/* 166 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ObjectHandle */

/* 168 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 170 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 172 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter SecurityInformation */

/* 174 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 176 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 178 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter SecurityDescriptor */

/* 180 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 182 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 184 */	NdrFcShort( 0x7a ),	/* Type Offset=122 */

	/* Return value */

/* 186 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 188 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 190 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetSecurityObject */

/* 192 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 194 */	NdrFcLong( 0x0 ),	/* 0 */
/* 198 */	NdrFcShort( 0x4 ),	/* 4 */
/* 200 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 202 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 204 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 206 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 208 */	NdrFcShort( 0x2c ),	/* 44 */
/* 210 */	NdrFcShort( 0x8 ),	/* 8 */
/* 212 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 214 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 216 */	NdrFcShort( 0x0 ),	/* 0 */
/* 218 */	NdrFcShort( 0x1 ),	/* 1 */
/* 220 */	NdrFcShort( 0x0 ),	/* 0 */
/* 222 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ObjectHandle */

/* 224 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 226 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 228 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter SecurityInformation */

/* 230 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 232 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 234 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter SecurityDescriptor */

/* 236 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 238 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 240 */	NdrFcShort( 0x98 ),	/* Type Offset=152 */

	/* Return value */

/* 242 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 244 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 246 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure Opnum5NotUsedOnWire */

/* 248 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 250 */	NdrFcLong( 0x0 ),	/* 0 */
/* 254 */	NdrFcShort( 0x5 ),	/* 5 */
/* 256 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 258 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 260 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 262 */	NdrFcShort( 0x0 ),	/* 0 */
/* 264 */	NdrFcShort( 0x0 ),	/* 0 */
/* 266 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 268 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 270 */	NdrFcShort( 0x0 ),	/* 0 */
/* 272 */	NdrFcShort( 0x0 ),	/* 0 */
/* 274 */	NdrFcShort( 0x0 ),	/* 0 */
/* 276 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure LsarOpenPolicy */


	/* Parameter IDL_handle */

/* 278 */	0x33,		/* FC_AUTO_HANDLE */
			0x48,		/* Old Flags:  */
/* 280 */	NdrFcLong( 0x0 ),	/* 0 */
/* 284 */	NdrFcShort( 0x6 ),	/* 6 */
/* 286 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 288 */	NdrFcShort( 0x22 ),	/* 34 */
/* 290 */	NdrFcShort( 0x40 ),	/* 64 */
/* 292 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 294 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 296 */	NdrFcShort( 0x0 ),	/* 0 */
/* 298 */	NdrFcShort( 0x1 ),	/* 1 */
/* 300 */	NdrFcShort( 0x0 ),	/* 0 */
/* 302 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter SystemName */

/* 304 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 306 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 308 */	NdrFcShort( 0xb0 ),	/* Type Offset=176 */

	/* Parameter ObjectAttributes */

/* 310 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 312 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 314 */	NdrFcShort( 0x14c ),	/* Type Offset=332 */

	/* Parameter DesiredAccess */

/* 316 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 318 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 320 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter PolicyHandle */

/* 322 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 324 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 326 */	NdrFcShort( 0x172 ),	/* Type Offset=370 */

	/* Return value */

/* 328 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 330 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 332 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarQueryInformationPolicy */

/* 334 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 336 */	NdrFcLong( 0x0 ),	/* 0 */
/* 340 */	NdrFcShort( 0x7 ),	/* 7 */
/* 342 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 344 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 346 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 348 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 350 */	NdrFcShort( 0x2a ),	/* 42 */
/* 352 */	NdrFcShort( 0x8 ),	/* 8 */
/* 354 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x4,		/* 4 */
/* 356 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 358 */	NdrFcShort( 0x1 ),	/* 1 */
/* 360 */	NdrFcShort( 0x0 ),	/* 0 */
/* 362 */	NdrFcShort( 0x0 ),	/* 0 */
/* 364 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 366 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 368 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 370 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter InformationClass */

/* 372 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 374 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 376 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter PolicyInformation */

/* 378 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 380 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 382 */	NdrFcShort( 0x176 ),	/* Type Offset=374 */

	/* Return value */

/* 384 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 386 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 388 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetInformationPolicy */

/* 390 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 392 */	NdrFcLong( 0x0 ),	/* 0 */
/* 396 */	NdrFcShort( 0x8 ),	/* 8 */
/* 398 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 400 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 402 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 404 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 406 */	NdrFcShort( 0x2a ),	/* 42 */
/* 408 */	NdrFcShort( 0x8 ),	/* 8 */
/* 410 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 412 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 414 */	NdrFcShort( 0x0 ),	/* 0 */
/* 416 */	NdrFcShort( 0x1 ),	/* 1 */
/* 418 */	NdrFcShort( 0x0 ),	/* 0 */
/* 420 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 422 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 424 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 426 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter InformationClass */

/* 428 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 430 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 432 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter PolicyInformation */

/* 434 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 436 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 438 */	NdrFcShort( 0x2c4 ),	/* Type Offset=708 */

	/* Return value */

/* 440 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 442 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 444 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure Opnum9NotUsedOnWire */

/* 446 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 448 */	NdrFcLong( 0x0 ),	/* 0 */
/* 452 */	NdrFcShort( 0x9 ),	/* 9 */
/* 454 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 456 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 458 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 460 */	NdrFcShort( 0x0 ),	/* 0 */
/* 462 */	NdrFcShort( 0x0 ),	/* 0 */
/* 464 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 466 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 468 */	NdrFcShort( 0x0 ),	/* 0 */
/* 470 */	NdrFcShort( 0x0 ),	/* 0 */
/* 472 */	NdrFcShort( 0x0 ),	/* 0 */
/* 474 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure LsarCreateAccount */


	/* Parameter IDL_handle */

/* 476 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 478 */	NdrFcLong( 0x0 ),	/* 0 */
/* 482 */	NdrFcShort( 0xa ),	/* 10 */
/* 484 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 486 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 488 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 490 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 492 */	NdrFcShort( 0x2c ),	/* 44 */
/* 494 */	NdrFcShort( 0x40 ),	/* 64 */
/* 496 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 498 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 500 */	NdrFcShort( 0x0 ),	/* 0 */
/* 502 */	NdrFcShort( 0x1 ),	/* 1 */
/* 504 */	NdrFcShort( 0x0 ),	/* 0 */
/* 506 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 508 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 510 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 512 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter AccountSid */

/* 514 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 516 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 518 */	NdrFcShort( 0xf8 ),	/* Type Offset=248 */

	/* Parameter DesiredAccess */

/* 520 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 522 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 524 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter AccountHandle */

/* 526 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 528 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 530 */	NdrFcShort( 0x2d6 ),	/* Type Offset=726 */

	/* Return value */

/* 532 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 534 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 536 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarEnumerateAccounts */

/* 538 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 540 */	NdrFcLong( 0x0 ),	/* 0 */
/* 544 */	NdrFcShort( 0xb ),	/* 11 */
/* 546 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 548 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 550 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 552 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 554 */	NdrFcShort( 0x48 ),	/* 72 */
/* 556 */	NdrFcShort( 0x24 ),	/* 36 */
/* 558 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x5,		/* 5 */
/* 560 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 562 */	NdrFcShort( 0x1 ),	/* 1 */
/* 564 */	NdrFcShort( 0x0 ),	/* 0 */
/* 566 */	NdrFcShort( 0x0 ),	/* 0 */
/* 568 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 570 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 572 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 574 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter EnumerationContext */

/* 576 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 578 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 580 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter EnumerationBuffer */

/* 582 */	NdrFcShort( 0x4113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=16 */
/* 584 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 586 */	NdrFcShort( 0x302 ),	/* Type Offset=770 */

	/* Parameter PreferedMaximumLength */

/* 588 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 590 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 592 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 594 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 596 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 598 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarCreateTrustedDomain */

/* 600 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 602 */	NdrFcLong( 0x0 ),	/* 0 */
/* 606 */	NdrFcShort( 0xc ),	/* 12 */
/* 608 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 610 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 612 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 614 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 616 */	NdrFcShort( 0x2c ),	/* 44 */
/* 618 */	NdrFcShort( 0x40 ),	/* 64 */
/* 620 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 622 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 624 */	NdrFcShort( 0x0 ),	/* 0 */
/* 626 */	NdrFcShort( 0x1 ),	/* 1 */
/* 628 */	NdrFcShort( 0x0 ),	/* 0 */
/* 630 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 632 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 634 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 636 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainInformation */

/* 638 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 640 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 642 */	NdrFcShort( 0x316 ),	/* Type Offset=790 */

	/* Parameter DesiredAccess */

/* 644 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 646 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 648 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter TrustedDomainHandle */

/* 650 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 652 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 654 */	NdrFcShort( 0x2d6 ),	/* Type Offset=726 */

	/* Return value */

/* 656 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 658 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 660 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarEnumerateTrustedDomains */

/* 662 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 664 */	NdrFcLong( 0x0 ),	/* 0 */
/* 668 */	NdrFcShort( 0xd ),	/* 13 */
/* 670 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 672 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 674 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 676 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 678 */	NdrFcShort( 0x48 ),	/* 72 */
/* 680 */	NdrFcShort( 0x24 ),	/* 36 */
/* 682 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x5,		/* 5 */
/* 684 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 686 */	NdrFcShort( 0x1 ),	/* 1 */
/* 688 */	NdrFcShort( 0x0 ),	/* 0 */
/* 690 */	NdrFcShort( 0x0 ),	/* 0 */
/* 692 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 694 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 696 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 698 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter EnumerationContext */

/* 700 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 702 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 704 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter EnumerationBuffer */

/* 706 */	NdrFcShort( 0x4113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=16 */
/* 708 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 710 */	NdrFcShort( 0x342 ),	/* Type Offset=834 */

	/* Parameter PreferedMaximumLength */

/* 712 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 714 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 716 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 718 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 720 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 722 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarLookupNames */

/* 724 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 726 */	NdrFcLong( 0x0 ),	/* 0 */
/* 730 */	NdrFcShort( 0xe ),	/* 14 */
/* 732 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 734 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 736 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 738 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 740 */	NdrFcShort( 0x4e ),	/* 78 */
/* 742 */	NdrFcShort( 0x24 ),	/* 36 */
/* 744 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 746 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 748 */	NdrFcShort( 0x1 ),	/* 1 */
/* 750 */	NdrFcShort( 0x1 ),	/* 1 */
/* 752 */	NdrFcShort( 0x0 ),	/* 0 */
/* 754 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 756 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 758 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 760 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter Count */

/* 762 */	NdrFcShort( 0x88 ),	/* Flags:  in, by val, */
/* 764 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 766 */	NdrFcShort( 0x352 ),	/* 850 */

	/* Parameter Names */

/* 768 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 770 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 772 */	NdrFcShort( 0x360 ),	/* Type Offset=864 */

	/* Parameter ReferencedDomains */

/* 774 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 776 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 778 */	NdrFcShort( 0x376 ),	/* Type Offset=886 */

	/* Parameter TranslatedSids */

/* 780 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 782 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 784 */	NdrFcShort( 0x3c0 ),	/* Type Offset=960 */

	/* Parameter LookupLevel */

/* 786 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 788 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 790 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter MappedCount */

/* 792 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 794 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 796 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 798 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 800 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 802 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarLookupSids */

/* 804 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 806 */	NdrFcLong( 0x0 ),	/* 0 */
/* 810 */	NdrFcShort( 0xf ),	/* 15 */
/* 812 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 814 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 816 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 818 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 820 */	NdrFcShort( 0x46 ),	/* 70 */
/* 822 */	NdrFcShort( 0x24 ),	/* 36 */
/* 824 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 826 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 828 */	NdrFcShort( 0x1 ),	/* 1 */
/* 830 */	NdrFcShort( 0x1 ),	/* 1 */
/* 832 */	NdrFcShort( 0x0 ),	/* 0 */
/* 834 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 836 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 838 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 840 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter SidEnumBuffer */

/* 842 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 844 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 846 */	NdrFcShort( 0x406 ),	/* Type Offset=1030 */

	/* Parameter ReferencedDomains */

/* 848 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 850 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 852 */	NdrFcShort( 0x376 ),	/* Type Offset=886 */

	/* Parameter TranslatedNames */

/* 854 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 856 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 858 */	NdrFcShort( 0x450 ),	/* Type Offset=1104 */

	/* Parameter LookupLevel */

/* 860 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 862 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 864 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter MappedCount */

/* 866 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 868 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 870 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 872 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 874 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 876 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarCreateSecret */

/* 878 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 880 */	NdrFcLong( 0x0 ),	/* 0 */
/* 884 */	NdrFcShort( 0x10 ),	/* 16 */
/* 886 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 888 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 890 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 892 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 894 */	NdrFcShort( 0x2c ),	/* 44 */
/* 896 */	NdrFcShort( 0x40 ),	/* 64 */
/* 898 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 900 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 902 */	NdrFcShort( 0x0 ),	/* 0 */
/* 904 */	NdrFcShort( 0x1 ),	/* 1 */
/* 906 */	NdrFcShort( 0x0 ),	/* 0 */
/* 908 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 910 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 912 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 914 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter SecretName */

/* 916 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 918 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 920 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter DesiredAccess */

/* 922 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 924 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 926 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter SecretHandle */

/* 928 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 930 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 932 */	NdrFcShort( 0x2d6 ),	/* Type Offset=726 */

	/* Return value */

/* 934 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 936 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 938 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarOpenAccount */

/* 940 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 942 */	NdrFcLong( 0x0 ),	/* 0 */
/* 946 */	NdrFcShort( 0x11 ),	/* 17 */
/* 948 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 950 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 952 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 954 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 956 */	NdrFcShort( 0x2c ),	/* 44 */
/* 958 */	NdrFcShort( 0x40 ),	/* 64 */
/* 960 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 962 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 964 */	NdrFcShort( 0x0 ),	/* 0 */
/* 966 */	NdrFcShort( 0x1 ),	/* 1 */
/* 968 */	NdrFcShort( 0x0 ),	/* 0 */
/* 970 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 972 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 974 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 976 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter AccountSid */

/* 978 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 980 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 982 */	NdrFcShort( 0xf8 ),	/* Type Offset=248 */

	/* Parameter DesiredAccess */

/* 984 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 986 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 988 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter AccountHandle */

/* 990 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 992 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 994 */	NdrFcShort( 0x2d6 ),	/* Type Offset=726 */

	/* Return value */

/* 996 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 998 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1000 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarEnumeratePrivilegesAccount */

/* 1002 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1004 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1008 */	NdrFcShort( 0x12 ),	/* 18 */
/* 1010 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1012 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1014 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1016 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1018 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1020 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1022 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x3,		/* 3 */
/* 1024 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 1026 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1028 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1030 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1032 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter AccountHandle */

/* 1034 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1036 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1038 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter Privileges */

/* 1040 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1042 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1044 */	NdrFcShort( 0x468 ),	/* Type Offset=1128 */

	/* Return value */

/* 1046 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1048 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1050 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarAddPrivilegesToAccount */

/* 1052 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1054 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1058 */	NdrFcShort( 0x13 ),	/* 19 */
/* 1060 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1062 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1064 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1066 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1068 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1070 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1072 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 1074 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1076 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1078 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1080 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1082 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter AccountHandle */

/* 1084 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1086 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1088 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter Privileges */

/* 1090 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1092 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1094 */	NdrFcShort( 0x494 ),	/* Type Offset=1172 */

	/* Return value */

/* 1096 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1098 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1100 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarRemovePrivilegesFromAccount */

/* 1102 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1104 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1108 */	NdrFcShort( 0x14 ),	/* 20 */
/* 1110 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1112 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1114 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1116 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1118 */	NdrFcShort( 0x29 ),	/* 41 */
/* 1120 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1122 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1124 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1126 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1128 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1130 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1132 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter AccountHandle */

/* 1134 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1136 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1138 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter AllPrivileges */

/* 1140 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1142 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1144 */	0x2,		/* FC_CHAR */
			0x0,		/* 0 */

	/* Parameter Privileges */

/* 1146 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1148 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1150 */	NdrFcShort( 0x46c ),	/* Type Offset=1132 */

	/* Return value */

/* 1152 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1154 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1156 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure Opnum21NotUsedOnWire */

/* 1158 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1160 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1164 */	NdrFcShort( 0x15 ),	/* 21 */
/* 1166 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1168 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 1170 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1172 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1174 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1176 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 1178 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1180 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1182 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1184 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1186 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum22NotUsedOnWire */


	/* Parameter IDL_handle */

/* 1188 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1190 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1194 */	NdrFcShort( 0x16 ),	/* 22 */
/* 1196 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1198 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 1200 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1202 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1204 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1206 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 1208 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1210 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1212 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1214 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1216 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure LsarGetSystemAccessAccount */


	/* Parameter IDL_handle */

/* 1218 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1220 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1224 */	NdrFcShort( 0x17 ),	/* 23 */
/* 1226 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1228 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1230 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1232 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1234 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1236 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1238 */	0x44,		/* Oi2 Flags:  has return, has ext, */
			0x3,		/* 3 */
/* 1240 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1242 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1244 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1246 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1248 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter AccountHandle */

/* 1250 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1252 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1254 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter SystemAccess */

/* 1256 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 1258 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1260 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1262 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1264 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1266 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetSystemAccessAccount */

/* 1268 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1270 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1274 */	NdrFcShort( 0x18 ),	/* 24 */
/* 1276 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1278 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1280 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1282 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1284 */	NdrFcShort( 0x2c ),	/* 44 */
/* 1286 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1288 */	0x44,		/* Oi2 Flags:  has return, has ext, */
			0x3,		/* 3 */
/* 1290 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1292 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1294 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1296 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1298 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter AccountHandle */

/* 1300 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1302 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1304 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter SystemAccess */

/* 1306 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1308 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1310 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1312 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1314 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1316 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarOpenTrustedDomain */

/* 1318 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1320 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1324 */	NdrFcShort( 0x19 ),	/* 25 */
/* 1326 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1328 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1330 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1332 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1334 */	NdrFcShort( 0x2c ),	/* 44 */
/* 1336 */	NdrFcShort( 0x40 ),	/* 64 */
/* 1338 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 1340 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1342 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1344 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1346 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1348 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 1350 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1352 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1354 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainSid */

/* 1356 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1358 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1360 */	NdrFcShort( 0xf8 ),	/* Type Offset=248 */

	/* Parameter DesiredAccess */

/* 1362 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1364 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1366 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter TrustedDomainHandle */

/* 1368 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 1370 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1372 */	NdrFcShort( 0x2d6 ),	/* Type Offset=726 */

	/* Return value */

/* 1374 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1376 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1378 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarQueryInfoTrustedDomain */

/* 1380 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1382 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1386 */	NdrFcShort( 0x1a ),	/* 26 */
/* 1388 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1390 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1392 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1394 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1396 */	NdrFcShort( 0x2a ),	/* 42 */
/* 1398 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1400 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x4,		/* 4 */
/* 1402 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 1404 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1406 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1408 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1410 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter TrustedDomainHandle */

/* 1412 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1414 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1416 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter InformationClass */

/* 1418 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1420 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1422 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter TrustedDomainInformation */

/* 1424 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1426 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1428 */	NdrFcShort( 0x4aa ),	/* Type Offset=1194 */

	/* Return value */

/* 1430 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1432 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1434 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetInformationTrustedDomain */

/* 1436 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1438 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1442 */	NdrFcShort( 0x1b ),	/* 27 */
/* 1444 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1446 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1448 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1450 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1452 */	NdrFcShort( 0x2a ),	/* 42 */
/* 1454 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1456 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1458 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1460 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1462 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1464 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1466 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter TrustedDomainHandle */

/* 1468 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1470 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1472 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter InformationClass */

/* 1474 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1476 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1478 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter TrustedDomainInformation */

/* 1480 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1482 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1484 */	NdrFcShort( 0x6bc ),	/* Type Offset=1724 */

	/* Return value */

/* 1486 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1488 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1490 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarOpenSecret */

/* 1492 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1494 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1498 */	NdrFcShort( 0x1c ),	/* 28 */
/* 1500 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1502 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1504 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1506 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1508 */	NdrFcShort( 0x2c ),	/* 44 */
/* 1510 */	NdrFcShort( 0x40 ),	/* 64 */
/* 1512 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 1514 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1516 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1518 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1520 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1522 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 1524 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1526 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1528 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter SecretName */

/* 1530 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1532 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1534 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter DesiredAccess */

/* 1536 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1538 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1540 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter SecretHandle */

/* 1542 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 1544 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1546 */	NdrFcShort( 0x2d6 ),	/* Type Offset=726 */

	/* Return value */

/* 1548 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1550 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1552 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetSecret */

/* 1554 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1556 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1560 */	NdrFcShort( 0x1d ),	/* 29 */
/* 1562 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1564 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1566 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1568 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1570 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1572 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1574 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1576 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1578 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1580 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1582 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1584 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter SecretHandle */

/* 1586 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1588 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1590 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter EncryptedCurrentValue */

/* 1592 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1594 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1596 */	NdrFcShort( 0x6c6 ),	/* Type Offset=1734 */

	/* Parameter EncryptedOldValue */

/* 1598 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1600 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1602 */	NdrFcShort( 0x6c6 ),	/* Type Offset=1734 */

	/* Return value */

/* 1604 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1606 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1608 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarQuerySecret */

/* 1610 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1612 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1616 */	NdrFcShort( 0x1e ),	/* 30 */
/* 1618 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1620 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1622 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1624 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1626 */	NdrFcShort( 0x7c ),	/* 124 */
/* 1628 */	NdrFcShort( 0x60 ),	/* 96 */
/* 1630 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x6,		/* 6 */
/* 1632 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1634 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1636 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1638 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1640 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter SecretHandle */

/* 1642 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1644 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1646 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter EncryptedCurrentValue */

/* 1648 */	NdrFcShort( 0x201b ),	/* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 1650 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1652 */	NdrFcShort( 0x6ca ),	/* Type Offset=1738 */

	/* Parameter CurrentValueSetTime */

/* 1654 */	NdrFcShort( 0x1a ),	/* Flags:  must free, in, out, */
/* 1656 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1658 */	NdrFcShort( 0x6ce ),	/* Type Offset=1742 */

	/* Parameter EncryptedOldValue */

/* 1660 */	NdrFcShort( 0x201b ),	/* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 1662 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1664 */	NdrFcShort( 0x6ca ),	/* Type Offset=1738 */

	/* Parameter OldValueSetTime */

/* 1666 */	NdrFcShort( 0x1a ),	/* Flags:  must free, in, out, */
/* 1668 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1670 */	NdrFcShort( 0x6ce ),	/* Type Offset=1742 */

	/* Return value */

/* 1672 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1674 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1676 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarLookupPrivilegeValue */

/* 1678 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1680 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1684 */	NdrFcShort( 0x1f ),	/* 31 */
/* 1686 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1688 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1690 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1692 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1694 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1696 */	NdrFcShort( 0x34 ),	/* 52 */
/* 1698 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1700 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1702 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1704 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1706 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1708 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 1710 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1712 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1714 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter Name */

/* 1716 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1718 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1720 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter Value */

/* 1722 */	NdrFcShort( 0x2112 ),	/* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 1724 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1726 */	NdrFcShort( 0x3a ),	/* Type Offset=58 */

	/* Return value */

/* 1728 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1730 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1732 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarLookupPrivilegeName */

/* 1734 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1736 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1740 */	NdrFcShort( 0x20 ),	/* 32 */
/* 1742 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1744 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1746 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1748 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1750 */	NdrFcShort( 0x50 ),	/* 80 */
/* 1752 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1754 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x4,		/* 4 */
/* 1756 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 1758 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1760 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1762 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1764 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 1766 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1768 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1770 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter Value */

/* 1772 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1774 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1776 */	NdrFcShort( 0x3a ),	/* Type Offset=58 */

	/* Parameter Name */

/* 1778 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1780 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1782 */	NdrFcShort( 0x6da ),	/* Type Offset=1754 */

	/* Return value */

/* 1784 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1786 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1788 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarLookupPrivilegeDisplayName */

/* 1790 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1792 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1796 */	NdrFcShort( 0x21 ),	/* 33 */
/* 1798 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 1800 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1802 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1804 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1806 */	NdrFcShort( 0x30 ),	/* 48 */
/* 1808 */	NdrFcShort( 0x22 ),	/* 34 */
/* 1810 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1812 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1814 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1816 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1818 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1820 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 1822 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1824 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1826 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter Name */

/* 1828 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1830 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1832 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter ClientLanguage */

/* 1834 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1836 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1838 */	0x6,		/* FC_SHORT */
			0x0,		/* 0 */

	/* Parameter ClientSystemDefaultLanguage */

/* 1840 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1842 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1844 */	0x6,		/* FC_SHORT */
			0x0,		/* 0 */

	/* Parameter DisplayName */

/* 1846 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1848 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1850 */	NdrFcShort( 0x6da ),	/* Type Offset=1754 */

	/* Parameter LanguageReturned */

/* 1852 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 1854 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1856 */	0x6,		/* FC_SHORT */
			0x0,		/* 0 */

	/* Return value */

/* 1858 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1860 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1862 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarDeleteObject */

/* 1864 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1866 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1870 */	NdrFcShort( 0x22 ),	/* 34 */
/* 1872 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1874 */	0x30,		/* FC_BIND_CONTEXT */
			0xe0,		/* Ctxt flags:  via ptr, in, out, */
/* 1876 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1878 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1880 */	NdrFcShort( 0x38 ),	/* 56 */
/* 1882 */	NdrFcShort( 0x40 ),	/* 64 */
/* 1884 */	0x44,		/* Oi2 Flags:  has return, has ext, */
			0x2,		/* 2 */
/* 1886 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1888 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1890 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1892 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1894 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ObjectHandle */

/* 1896 */	NdrFcShort( 0x118 ),	/* Flags:  in, out, simple ref, */
/* 1898 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1900 */	NdrFcShort( 0x6 ),	/* Type Offset=6 */

	/* Return value */

/* 1902 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1904 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1906 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarEnumerateAccountsWithUserRight */

/* 1908 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1910 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1914 */	NdrFcShort( 0x23 ),	/* 35 */
/* 1916 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1918 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1920 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1922 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1924 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1926 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1928 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1930 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1932 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1934 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1936 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1938 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 1940 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1942 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1944 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter UserRight */

/* 1946 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1948 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1950 */	NdrFcShort( 0x6de ),	/* Type Offset=1758 */

	/* Parameter EnumerationBuffer */

/* 1952 */	NdrFcShort( 0x4113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=16 */
/* 1954 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1956 */	NdrFcShort( 0x302 ),	/* Type Offset=770 */

	/* Return value */

/* 1958 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1960 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1962 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarEnumerateAccountRights */

/* 1964 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1966 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1970 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1972 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1974 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 1976 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1978 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 1980 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1982 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1984 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1986 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1988 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1990 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1992 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1994 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 1996 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 1998 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2000 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter AccountSid */

/* 2002 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2004 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2006 */	NdrFcShort( 0xf8 ),	/* Type Offset=248 */

	/* Parameter UserRights */

/* 2008 */	NdrFcShort( 0x4113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=16 */
/* 2010 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2012 */	NdrFcShort( 0x6f4 ),	/* Type Offset=1780 */

	/* Return value */

/* 2014 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2016 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2018 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarAddAccountRights */

/* 2020 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2022 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2026 */	NdrFcShort( 0x25 ),	/* 37 */
/* 2028 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2030 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2032 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2034 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2036 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2038 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2040 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 2042 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2044 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2046 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2048 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2050 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2052 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2054 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2056 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter AccountSid */

/* 2058 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2060 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2062 */	NdrFcShort( 0xf8 ),	/* Type Offset=248 */

	/* Parameter UserRights */

/* 2064 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2066 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2068 */	NdrFcShort( 0x6f4 ),	/* Type Offset=1780 */

	/* Return value */

/* 2070 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2072 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2074 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarRemoveAccountRights */

/* 2076 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2078 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2082 */	NdrFcShort( 0x26 ),	/* 38 */
/* 2084 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2086 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2088 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2090 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2092 */	NdrFcShort( 0x29 ),	/* 41 */
/* 2094 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2096 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2098 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2100 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2102 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2104 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2106 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2108 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2110 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2112 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter AccountSid */

/* 2114 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2116 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2118 */	NdrFcShort( 0xf8 ),	/* Type Offset=248 */

	/* Parameter AllRights */

/* 2120 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2122 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2124 */	0x2,		/* FC_CHAR */
			0x0,		/* 0 */

	/* Parameter UserRights */

/* 2126 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2128 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2130 */	NdrFcShort( 0x6f4 ),	/* Type Offset=1780 */

	/* Return value */

/* 2132 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2134 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2136 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarQueryTrustedDomainInfo */

/* 2138 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2140 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2144 */	NdrFcShort( 0x27 ),	/* 39 */
/* 2146 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2148 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2150 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2152 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2154 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2156 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2158 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2160 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2162 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2164 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2166 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2168 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2170 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2172 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2174 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainSid */

/* 2176 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2178 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2180 */	NdrFcShort( 0xf8 ),	/* Type Offset=248 */

	/* Parameter InformationClass */

/* 2182 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2184 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2186 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter TrustedDomainInformation */

/* 2188 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2190 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2192 */	NdrFcShort( 0x70c ),	/* Type Offset=1804 */

	/* Return value */

/* 2194 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2196 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2198 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetTrustedDomainInfo */

/* 2200 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2202 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2206 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2208 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2210 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2212 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2214 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2216 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2218 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2220 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2222 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2224 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2226 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2228 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2230 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2232 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2234 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2236 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainSid */

/* 2238 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2240 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2242 */	NdrFcShort( 0xf8 ),	/* Type Offset=248 */

	/* Parameter InformationClass */

/* 2244 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2246 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2248 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter TrustedDomainInformation */

/* 2250 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2252 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2254 */	NdrFcShort( 0x722 ),	/* Type Offset=1826 */

	/* Return value */

/* 2256 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2258 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2260 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarDeleteTrustedDomain */

/* 2262 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2264 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2268 */	NdrFcShort( 0x29 ),	/* 41 */
/* 2270 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2272 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2274 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2276 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2278 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2280 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2282 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 2284 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2286 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2288 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2290 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2292 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2294 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2296 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2298 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainSid */

/* 2300 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2302 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2304 */	NdrFcShort( 0xf8 ),	/* Type Offset=248 */

	/* Return value */

/* 2306 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2308 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2310 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarStorePrivateData */

/* 2312 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2314 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2318 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2320 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2322 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2324 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2326 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2328 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2330 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2332 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 2334 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2336 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2338 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2340 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2342 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2344 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2346 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2348 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter KeyName */

/* 2350 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2352 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2354 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter EncryptedData */

/* 2356 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2358 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2360 */	NdrFcShort( 0x6c6 ),	/* Type Offset=1734 */

	/* Return value */

/* 2362 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2364 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2366 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarRetrievePrivateData */

/* 2368 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2370 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2374 */	NdrFcShort( 0x2b ),	/* 43 */
/* 2376 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2378 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2380 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2382 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2384 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2386 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2388 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 2390 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2392 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2394 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2396 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2398 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2400 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2402 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2404 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter KeyName */

/* 2406 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2408 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2410 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter EncryptedData */

/* 2412 */	NdrFcShort( 0x201b ),	/* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 2414 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2416 */	NdrFcShort( 0x72c ),	/* Type Offset=1836 */

	/* Return value */

/* 2418 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2420 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2422 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarOpenPolicy2 */

/* 2424 */	0x33,		/* FC_AUTO_HANDLE */
			0x48,		/* Old Flags:  */
/* 2426 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2430 */	NdrFcShort( 0x2c ),	/* 44 */
/* 2432 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2434 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2436 */	NdrFcShort( 0x40 ),	/* 64 */
/* 2438 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2440 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2442 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2444 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2446 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2448 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter SystemName */

/* 2450 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2452 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2454 */	NdrFcShort( 0x730 ),	/* Type Offset=1840 */

	/* Parameter ObjectAttributes */

/* 2456 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2458 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2460 */	NdrFcShort( 0x14c ),	/* Type Offset=332 */

	/* Parameter DesiredAccess */

/* 2462 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2464 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2466 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter PolicyHandle */

/* 2468 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 2470 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2472 */	NdrFcShort( 0x172 ),	/* Type Offset=370 */

	/* Return value */

/* 2474 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2476 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2478 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarGetUserName */

/* 2480 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2482 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2486 */	NdrFcShort( 0x2d ),	/* 45 */
/* 2488 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2490 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 2492 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2494 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2496 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2498 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 2500 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2502 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2504 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2506 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2508 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter IDL_handle */

/* 2510 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2512 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2514 */	NdrFcShort( 0x730 ),	/* Type Offset=1840 */

	/* Parameter SystemName */

/* 2516 */	NdrFcShort( 0x201b ),	/* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 2518 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2520 */	NdrFcShort( 0x6da ),	/* Type Offset=1754 */

	/* Parameter UserName */

/* 2522 */	NdrFcShort( 0x201b ),	/* Flags:  must size, must free, in, out, srv alloc size=8 */
/* 2524 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2526 */	NdrFcShort( 0x734 ),	/* Type Offset=1844 */

	/* Parameter DomainName */

/* 2528 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2530 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2532 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarQueryInformationPolicy2 */


	/* Return value */

/* 2534 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2536 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2540 */	NdrFcShort( 0x2e ),	/* 46 */
/* 2542 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2544 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2546 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2548 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2550 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2552 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2554 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x4,		/* 4 */
/* 2556 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 2558 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2560 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2562 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2564 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2566 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2568 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2570 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter InformationClass */

/* 2572 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2574 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2576 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter PolicyInformation */

/* 2578 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2580 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2582 */	NdrFcShort( 0x738 ),	/* Type Offset=1848 */

	/* Return value */

/* 2584 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2586 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2588 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetInformationPolicy2 */

/* 2590 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2592 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2596 */	NdrFcShort( 0x2f ),	/* 47 */
/* 2598 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2600 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2602 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2604 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2606 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2608 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2610 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 2612 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2614 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2616 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2618 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2620 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2622 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2624 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2626 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter InformationClass */

/* 2628 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2630 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2632 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter PolicyInformation */

/* 2634 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2636 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2638 */	NdrFcShort( 0x74e ),	/* Type Offset=1870 */

	/* Return value */

/* 2640 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2642 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2644 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarQueryTrustedDomainInfoByName */

/* 2646 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2648 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2652 */	NdrFcShort( 0x30 ),	/* 48 */
/* 2654 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2656 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2658 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2660 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2662 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2664 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2666 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2668 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2670 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2672 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2674 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2676 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2678 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2680 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2682 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainName */

/* 2684 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2686 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2688 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter InformationClass */

/* 2690 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2692 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2694 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter TrustedDomainInformation */

/* 2696 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2698 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2700 */	NdrFcShort( 0x758 ),	/* Type Offset=1880 */

	/* Return value */

/* 2702 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2704 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2706 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetTrustedDomainInfoByName */

/* 2708 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2710 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2714 */	NdrFcShort( 0x31 ),	/* 49 */
/* 2716 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2718 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2720 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2722 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2724 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2726 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2728 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2730 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2732 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2734 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2736 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2738 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2740 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2742 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2744 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainName */

/* 2746 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2748 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2750 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter InformationClass */

/* 2752 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2754 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2756 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter TrustedDomainInformation */

/* 2758 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2760 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2762 */	NdrFcShort( 0x76e ),	/* Type Offset=1902 */

	/* Return value */

/* 2764 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2766 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2768 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarEnumerateTrustedDomainsEx */

/* 2770 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2772 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2776 */	NdrFcShort( 0x32 ),	/* 50 */
/* 2778 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2780 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2782 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2784 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2786 */	NdrFcShort( 0x48 ),	/* 72 */
/* 2788 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2790 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x5,		/* 5 */
/* 2792 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 2794 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2796 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2798 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2800 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2802 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2804 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2806 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter EnumerationContext */

/* 2808 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 2810 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2812 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter EnumerationBuffer */

/* 2814 */	NdrFcShort( 0x4113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=16 */
/* 2816 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2818 */	NdrFcShort( 0x792 ),	/* Type Offset=1938 */

	/* Parameter PreferedMaximumLength */

/* 2820 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2822 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2824 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 2826 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2828 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2830 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarCreateTrustedDomainEx */

/* 2832 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2834 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2838 */	NdrFcShort( 0x33 ),	/* 51 */
/* 2840 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 2842 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2844 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2846 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2848 */	NdrFcShort( 0x2c ),	/* 44 */
/* 2850 */	NdrFcShort( 0x40 ),	/* 64 */
/* 2852 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x6,		/* 6 */
/* 2854 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2856 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2858 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2860 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2862 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2864 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2866 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2868 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainInformation */

/* 2870 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2872 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2874 */	NdrFcShort( 0x59a ),	/* Type Offset=1434 */

	/* Parameter AuthenticationInformation */

/* 2876 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2878 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2880 */	NdrFcShort( 0x5f6 ),	/* Type Offset=1526 */

	/* Parameter DesiredAccess */

/* 2882 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2884 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2886 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter TrustedDomainHandle */

/* 2888 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 2890 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2892 */	NdrFcShort( 0x2d6 ),	/* Type Offset=726 */

	/* Return value */

/* 2894 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2896 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2898 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure Opnum52NotUsedOnWire */

/* 2900 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2902 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2906 */	NdrFcShort( 0x34 ),	/* 52 */
/* 2908 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2910 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 2912 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2914 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2916 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2918 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 2920 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2922 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2924 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2926 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2928 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure LsarQueryDomainInformationPolicy */


	/* Parameter IDL_handle */

/* 2930 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2932 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2936 */	NdrFcShort( 0x35 ),	/* 53 */
/* 2938 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2940 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2942 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2944 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 2946 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2948 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2950 */	0x45,		/* Oi2 Flags:  srv must size, has return, has ext, */
			0x4,		/* 4 */
/* 2952 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 2954 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2956 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2958 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2960 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 2962 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 2964 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2966 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter InformationClass */

/* 2968 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2970 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2972 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter PolicyDomainInformation */

/* 2974 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2976 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2978 */	NdrFcShort( 0x7aa ),	/* Type Offset=1962 */

	/* Return value */

/* 2980 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2982 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2984 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetDomainInformationPolicy */

/* 2986 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2988 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2992 */	NdrFcShort( 0x36 ),	/* 54 */
/* 2994 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2996 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 2998 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3000 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 3002 */	NdrFcShort( 0x2a ),	/* 42 */
/* 3004 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3006 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 3008 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 3010 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3012 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3014 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3016 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 3018 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 3020 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3022 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter InformationClass */

/* 3024 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3026 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3028 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter PolicyDomainInformation */

/* 3030 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3032 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3034 */	NdrFcShort( 0x800 ),	/* Type Offset=2048 */

	/* Return value */

/* 3036 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3038 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3040 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarOpenTrustedDomainByName */

/* 3042 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3044 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3048 */	NdrFcShort( 0x37 ),	/* 55 */
/* 3050 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3052 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 3054 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3056 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 3058 */	NdrFcShort( 0x2c ),	/* 44 */
/* 3060 */	NdrFcShort( 0x40 ),	/* 64 */
/* 3062 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 3064 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 3066 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3068 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3070 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3072 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 3074 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 3076 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3078 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainName */

/* 3080 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3082 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3084 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter DesiredAccess */

/* 3086 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3088 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3090 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter TrustedDomainHandle */

/* 3092 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 3094 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3096 */	NdrFcShort( 0x2d6 ),	/* Type Offset=726 */

	/* Return value */

/* 3098 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3100 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3102 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure Opnum56NotUsedOnWire */

/* 3104 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3106 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3110 */	NdrFcShort( 0x38 ),	/* 56 */
/* 3112 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3114 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3116 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3118 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3120 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3122 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3124 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3126 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3128 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3130 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3132 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure LsarLookupSids2 */


	/* Parameter IDL_handle */

/* 3134 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3136 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3140 */	NdrFcShort( 0x39 ),	/* 57 */
/* 3142 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 3144 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 3146 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3148 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 3150 */	NdrFcShort( 0x56 ),	/* 86 */
/* 3152 */	NdrFcShort( 0x24 ),	/* 36 */
/* 3154 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 3156 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3158 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3160 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3162 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3164 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 3166 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 3168 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3170 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter SidEnumBuffer */

/* 3172 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3174 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3176 */	NdrFcShort( 0x406 ),	/* Type Offset=1030 */

	/* Parameter ReferencedDomains */

/* 3178 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3180 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3182 */	NdrFcShort( 0x376 ),	/* Type Offset=886 */

	/* Parameter TranslatedNames */

/* 3184 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 3186 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3188 */	NdrFcShort( 0x844 ),	/* Type Offset=2116 */

	/* Parameter LookupLevel */

/* 3190 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3192 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3194 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter MappedCount */

/* 3196 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 3198 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3200 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter LookupOptions */

/* 3202 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3204 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3206 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ClientRevision */

/* 3208 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3210 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3212 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 3214 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3216 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 3218 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarLookupNames2 */

/* 3220 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3222 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3226 */	NdrFcShort( 0x3a ),	/* 58 */
/* 3228 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 3230 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 3232 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3234 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 3236 */	NdrFcShort( 0x5e ),	/* 94 */
/* 3238 */	NdrFcShort( 0x24 ),	/* 36 */
/* 3240 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 3242 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3244 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3246 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3248 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3250 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 3252 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 3254 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3256 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter Count */

/* 3258 */	NdrFcShort( 0x88 ),	/* Flags:  in, by val, */
/* 3260 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3262 */	NdrFcShort( 0x858 ),	/* 2136 */

	/* Parameter Names */

/* 3264 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3266 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3268 */	NdrFcShort( 0x360 ),	/* Type Offset=864 */

	/* Parameter ReferencedDomains */

/* 3270 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3272 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3274 */	NdrFcShort( 0x376 ),	/* Type Offset=886 */

	/* Parameter TranslatedSids */

/* 3276 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 3278 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3280 */	NdrFcShort( 0x894 ),	/* Type Offset=2196 */

	/* Parameter LookupLevel */

/* 3282 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3284 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3286 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter MappedCount */

/* 3288 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 3290 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3292 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter LookupOptions */

/* 3294 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3296 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3298 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ClientRevision */

/* 3300 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3302 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 3304 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 3306 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3308 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 3310 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarCreateTrustedDomainEx2 */

/* 3312 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3314 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3318 */	NdrFcShort( 0x3b ),	/* 59 */
/* 3320 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3322 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 3324 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3326 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 3328 */	NdrFcShort( 0x2c ),	/* 44 */
/* 3330 */	NdrFcShort( 0x40 ),	/* 64 */
/* 3332 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x6,		/* 6 */
/* 3334 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 3336 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3338 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3340 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3342 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 3344 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 3346 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3348 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainInformation */

/* 3350 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3352 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3354 */	NdrFcShort( 0x59a ),	/* Type Offset=1434 */

	/* Parameter AuthenticationInformation */

/* 3356 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3358 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3360 */	NdrFcShort( 0x652 ),	/* Type Offset=1618 */

	/* Parameter DesiredAccess */

/* 3362 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3364 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3366 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter TrustedDomainHandle */

/* 3368 */	NdrFcShort( 0x110 ),	/* Flags:  out, simple ref, */
/* 3370 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3372 */	NdrFcShort( 0x2d6 ),	/* Type Offset=726 */

	/* Return value */

/* 3374 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3376 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3378 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure Opnum60NotUsedOnWire */

/* 3380 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3382 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3386 */	NdrFcShort( 0x3c ),	/* 60 */
/* 3388 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3390 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3392 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3394 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3396 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3398 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3400 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3402 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3404 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3406 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3408 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum61NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3410 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3412 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3416 */	NdrFcShort( 0x3d ),	/* 61 */
/* 3418 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3420 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3422 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3424 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3426 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3428 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3430 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3432 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3434 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3436 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3438 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum62NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3440 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3442 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3446 */	NdrFcShort( 0x3e ),	/* 62 */
/* 3448 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3450 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3452 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3454 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3456 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3458 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3460 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3462 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3464 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3466 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3468 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum63NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3470 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3472 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3476 */	NdrFcShort( 0x3f ),	/* 63 */
/* 3478 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3480 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3482 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3484 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3486 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3488 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3490 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3492 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3494 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3496 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3498 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum64NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3500 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3502 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3506 */	NdrFcShort( 0x40 ),	/* 64 */
/* 3508 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3510 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3512 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3514 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3516 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3518 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3520 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3522 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3524 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3526 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3528 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum65NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3530 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3532 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3536 */	NdrFcShort( 0x41 ),	/* 65 */
/* 3538 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3540 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3542 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3544 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3546 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3548 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3550 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3552 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3554 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3556 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3558 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum66NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3560 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3562 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3566 */	NdrFcShort( 0x42 ),	/* 66 */
/* 3568 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3570 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3572 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3574 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3576 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3578 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3580 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3582 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3584 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3586 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3588 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum67NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3590 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3592 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3596 */	NdrFcShort( 0x43 ),	/* 67 */
/* 3598 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3600 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3602 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3604 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3606 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3608 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3610 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3612 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3614 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3616 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3618 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure LsarLookupNames3 */


	/* Parameter IDL_handle */

/* 3620 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3622 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3626 */	NdrFcShort( 0x44 ),	/* 68 */
/* 3628 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 3630 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 3632 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3634 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 3636 */	NdrFcShort( 0x5e ),	/* 94 */
/* 3638 */	NdrFcShort( 0x24 ),	/* 36 */
/* 3640 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 3642 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3644 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3646 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3648 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3650 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 3652 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 3654 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3656 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter Count */

/* 3658 */	NdrFcShort( 0x88 ),	/* Flags:  in, by val, */
/* 3660 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3662 */	NdrFcShort( 0x8ac ),	/* 2220 */

	/* Parameter Names */

/* 3664 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3666 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3668 */	NdrFcShort( 0x360 ),	/* Type Offset=864 */

	/* Parameter ReferencedDomains */

/* 3670 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3672 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3674 */	NdrFcShort( 0x376 ),	/* Type Offset=886 */

	/* Parameter TranslatedSids */

/* 3676 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 3678 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3680 */	NdrFcShort( 0x8ec ),	/* Type Offset=2284 */

	/* Parameter LookupLevel */

/* 3682 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3684 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3686 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter MappedCount */

/* 3688 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 3690 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3692 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter LookupOptions */

/* 3694 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3696 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3698 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ClientRevision */

/* 3700 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3702 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 3704 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 3706 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3708 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 3710 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure Opnum69NotUsedOnWire */

/* 3712 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3714 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3718 */	NdrFcShort( 0x45 ),	/* 69 */
/* 3720 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3722 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3724 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3726 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3728 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3730 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3732 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3734 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3736 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3738 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3740 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum70NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3742 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3744 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3748 */	NdrFcShort( 0x46 ),	/* 70 */
/* 3750 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3752 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3754 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3756 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3758 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3760 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3762 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3764 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3766 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3768 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3770 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum71NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3772 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3774 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3778 */	NdrFcShort( 0x47 ),	/* 71 */
/* 3780 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3782 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3784 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3786 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3788 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3790 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3792 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3794 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3796 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3798 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3800 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure Opnum72NotUsedOnWire */


	/* Parameter IDL_handle */

/* 3802 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3804 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3808 */	NdrFcShort( 0x48 ),	/* 72 */
/* 3810 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3812 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3814 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3816 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3818 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3820 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3822 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3824 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3826 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3828 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3830 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure LsarQueryForestTrustInformation */


	/* Parameter IDL_handle */

/* 3832 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3834 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3838 */	NdrFcShort( 0x49 ),	/* 73 */
/* 3840 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3842 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 3844 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3846 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 3848 */	NdrFcShort( 0x2a ),	/* 42 */
/* 3850 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3852 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 3854 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3856 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3858 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3860 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3862 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 3864 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 3866 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3868 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainName */

/* 3870 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3872 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3874 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter HighestRecordType */

/* 3876 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3878 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3880 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ForestTrustInfo */

/* 3882 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3884 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3886 */	NdrFcShort( 0x900 ),	/* Type Offset=2304 */

	/* Return value */

/* 3888 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3890 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3892 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarSetForestTrustInformation */

/* 3894 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3896 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3900 */	NdrFcShort( 0x4a ),	/* 74 */
/* 3902 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3904 */	0x30,		/* FC_BIND_CONTEXT */
			0x40,		/* Ctxt flags:  in, */
/* 3906 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3908 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 3910 */	NdrFcShort( 0x2f ),	/* 47 */
/* 3912 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3914 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 3916 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3918 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3920 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3922 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3924 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PolicyHandle */

/* 3926 */	NdrFcShort( 0x8 ),	/* Flags:  in, */
/* 3928 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3930 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Parameter TrustedDomainName */

/* 3932 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3934 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3936 */	NdrFcShort( 0x28 ),	/* Type Offset=40 */

	/* Parameter HighestRecordType */

/* 3938 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3940 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3942 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ForestTrustInfo */

/* 3944 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3946 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3948 */	NdrFcShort( 0x992 ),	/* Type Offset=2450 */

	/* Parameter CheckOnly */

/* 3950 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3952 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3954 */	0x2,		/* FC_CHAR */
			0x0,		/* 0 */

	/* Parameter CollisionInfo */

/* 3956 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3958 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3960 */	NdrFcShort( 0x9aa ),	/* Type Offset=2474 */

	/* Return value */

/* 3962 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3964 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3966 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure Opnum75NotUsedOnWire */

/* 3968 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3970 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3974 */	NdrFcShort( 0x4b ),	/* 75 */
/* 3976 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3978 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3980 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3982 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3984 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3986 */	0x40,		/* Oi2 Flags:  has ext, */
			0x0,		/* 0 */
/* 3988 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3990 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3992 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3994 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3996 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Procedure LsarLookupSids3 */


	/* Parameter IDL_handle */

/* 3998 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 4000 */	NdrFcLong( 0x0 ),	/* 0 */
/* 4004 */	NdrFcShort( 0x4c ),	/* 76 */
/* 4006 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 4008 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 4010 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 4012 */	NdrFcShort( 0x32 ),	/* 50 */
/* 4014 */	NdrFcShort( 0x24 ),	/* 36 */
/* 4016 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 4018 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 4020 */	NdrFcShort( 0x1 ),	/* 1 */
/* 4022 */	NdrFcShort( 0x1 ),	/* 1 */
/* 4024 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4026 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter RpcHandle */

/* 4028 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 4030 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 4032 */	NdrFcShort( 0x406 ),	/* Type Offset=1030 */

	/* Parameter SidEnumBuffer */

/* 4034 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 4036 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 4038 */	NdrFcShort( 0x376 ),	/* Type Offset=886 */

	/* Parameter ReferencedDomains */

/* 4040 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 4042 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 4044 */	NdrFcShort( 0x844 ),	/* Type Offset=2116 */

	/* Parameter TranslatedNames */

/* 4046 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 4048 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 4050 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LookupLevel */

/* 4052 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 4054 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 4056 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter MappedCount */

/* 4058 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 4060 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 4062 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter LookupOptions */

/* 4064 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 4066 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 4068 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ClientRevision */

/* 4070 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 4072 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 4074 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure LsarLookupNames4 */


	/* Return value */

/* 4076 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 4078 */	NdrFcLong( 0x0 ),	/* 0 */
/* 4082 */	NdrFcShort( 0x4d ),	/* 77 */
/* 4084 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 4086 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 4088 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 4090 */	NdrFcShort( 0x3a ),	/* 58 */
/* 4092 */	NdrFcShort( 0x24 ),	/* 36 */
/* 4094 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 4096 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 4098 */	NdrFcShort( 0x1 ),	/* 1 */
/* 4100 */	NdrFcShort( 0x1 ),	/* 1 */
/* 4102 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4104 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter RpcHandle */

/* 4106 */	NdrFcShort( 0x88 ),	/* Flags:  in, by val, */
/* 4108 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 4110 */	NdrFcShort( 0x9ea ),	/* 2538 */

	/* Parameter Count */

/* 4112 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 4114 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 4116 */	NdrFcShort( 0x360 ),	/* Type Offset=864 */

	/* Parameter Names */

/* 4118 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 4120 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 4122 */	NdrFcShort( 0x376 ),	/* Type Offset=886 */

	/* Parameter ReferencedDomains */

/* 4124 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 4126 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 4128 */	NdrFcShort( 0x8ec ),	/* Type Offset=2284 */

	/* Parameter TranslatedSids */

/* 4130 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 4132 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 4134 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LookupLevel */

/* 4136 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 4138 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 4140 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter MappedCount */

/* 4142 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 4144 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 4146 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter LookupOptions */

/* 4148 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 4150 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 4152 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ClientRevision */

/* 4154 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 4156 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 4158 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

			0x0
";

        // LSA type format string generated by midl
        private const string X64_TYPE_FORMAT_STRING = @"
            		NdrFcShort( 0x0 ),	/* 0 */
/*  2 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/*  4 */	NdrFcShort( 0x2 ),	/* Offset= 2 (6) */
/*  6 */	0x30,		/* FC_BIND_CONTEXT */
			0xe1,		/* Ctxt flags:  via ptr, in, out, can't be null */
/*  8 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 10 */	0x30,		/* FC_BIND_CONTEXT */
			0x41,		/* Ctxt flags:  in, can't be null */
/* 12 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 14 */	
			0x11, 0x8,	/* FC_RP [simple_pointer] */
/* 16 */	0x8,		/* FC_LONG */
			0x5c,		/* FC_PAD */
/* 18 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 20 */	NdrFcShort( 0x56 ),	/* Offset= 86 (106) */
/* 22 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 24 */	NdrFcShort( 0x2 ),	/* 2 */
/* 26 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 28 */	NdrFcShort( 0x2 ),	/* 2 */
/* 30 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 32 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 34 */	NdrFcShort( 0x0 ),	/* 0 */
/* 36 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 38 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 40 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 42 */	NdrFcShort( 0x10 ),	/* 16 */
/* 44 */	NdrFcShort( 0x0 ),	/* 0 */
/* 46 */	NdrFcShort( 0x8 ),	/* Offset= 8 (54) */
/* 48 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 50 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 52 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 54 */	
			0x12, 0x0,	/* FC_UP */
/* 56 */	NdrFcShort( 0xffde ),	/* Offset= -34 (22) */
/* 58 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 60 */	NdrFcShort( 0x8 ),	/* 8 */
/* 62 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 64 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 66 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 68 */	NdrFcShort( 0x18 ),	/* 24 */
/* 70 */	NdrFcShort( 0x0 ),	/* 0 */
/* 72 */	NdrFcShort( 0x0 ),	/* Offset= 0 (72) */
/* 74 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 76 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (40) */
/* 78 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 80 */	NdrFcShort( 0xffea ),	/* Offset= -22 (58) */
/* 82 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 84 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 86 */	NdrFcShort( 0x0 ),	/* 0 */
/* 88 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 90 */	NdrFcShort( 0x0 ),	/* 0 */
/* 92 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 94 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 98 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 100 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 102 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (66) */
/* 104 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 106 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 108 */	NdrFcShort( 0x10 ),	/* 16 */
/* 110 */	NdrFcShort( 0x0 ),	/* 0 */
/* 112 */	NdrFcShort( 0x6 ),	/* Offset= 6 (118) */
/* 114 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 116 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 118 */	
			0x12, 0x0,	/* FC_UP */
/* 120 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (84) */
/* 122 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 124 */	NdrFcShort( 0x2 ),	/* Offset= 2 (126) */
/* 126 */	
			0x12, 0x0,	/* FC_UP */
/* 128 */	NdrFcShort( 0x18 ),	/* Offset= 24 (152) */
/* 130 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 132 */	NdrFcLong( 0x0 ),	/* 0 */
/* 136 */	NdrFcLong( 0x40000 ),	/* 262144 */
/* 140 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 142 */	NdrFcShort( 0x1 ),	/* 1 */
/* 144 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 146 */	NdrFcShort( 0x0 ),	/* 0 */
/* 148 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 150 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 152 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 154 */	NdrFcShort( 0x10 ),	/* 16 */
/* 156 */	NdrFcShort( 0x0 ),	/* 0 */
/* 158 */	NdrFcShort( 0xa ),	/* Offset= 10 (168) */
/* 160 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 162 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (130) */
/* 164 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 166 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 168 */	
			0x12, 0x0,	/* FC_UP */
/* 170 */	NdrFcShort( 0xffe2 ),	/* Offset= -30 (140) */
/* 172 */	
			0x11, 0x0,	/* FC_RP */
/* 174 */	NdrFcShort( 0xffea ),	/* Offset= -22 (152) */
/* 176 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 178 */	0x5,		/* FC_WCHAR */
			0x5c,		/* FC_PAD */
/* 180 */	
			0x11, 0x0,	/* FC_RP */
/* 182 */	NdrFcShort( 0x96 ),	/* Offset= 150 (332) */
/* 184 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 186 */	NdrFcShort( 0x1 ),	/* 1 */
/* 188 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x0,		/*  */
/* 190 */	NdrFcShort( 0x2 ),	/* 2 */
/* 192 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 194 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x0,		/*  */
/* 196 */	NdrFcShort( 0x0 ),	/* 0 */
/* 198 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 200 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 202 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 204 */	NdrFcShort( 0x10 ),	/* 16 */
/* 206 */	NdrFcShort( 0x0 ),	/* 0 */
/* 208 */	NdrFcShort( 0x8 ),	/* Offset= 8 (216) */
/* 210 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 212 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 214 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 216 */	
			0x12, 0x0,	/* FC_UP */
/* 218 */	NdrFcShort( 0xffde ),	/* Offset= -34 (184) */
/* 220 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 222 */	NdrFcShort( 0x6 ),	/* 6 */
/* 224 */	0x1,		/* FC_BYTE */
			0x5b,		/* FC_END */
/* 226 */	
			0x15,		/* FC_STRUCT */
			0x0,		/* 0 */
/* 228 */	NdrFcShort( 0x6 ),	/* 6 */
/* 230 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 232 */	NdrFcShort( 0xfff4 ),	/* Offset= -12 (220) */
/* 234 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 236 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 238 */	NdrFcShort( 0x4 ),	/* 4 */
/* 240 */	0x4,		/* Corr desc: FC_USMALL */
			0x0,		/*  */
/* 242 */	NdrFcShort( 0xfff9 ),	/* -7 */
/* 244 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 246 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 248 */	
			0x17,		/* FC_CSTRUCT */
			0x3,		/* 3 */
/* 250 */	NdrFcShort( 0x8 ),	/* 8 */
/* 252 */	NdrFcShort( 0xfff0 ),	/* Offset= -16 (236) */
/* 254 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 256 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 258 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (226) */
/* 260 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 262 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 264 */	NdrFcShort( 0x1 ),	/* 1 */
/* 266 */	0x0,		/* Corr desc:  field,  */
			0x59,		/* FC_CALLBACK */
/* 268 */	NdrFcShort( 0x0 ),	/* 0 */
/* 270 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 272 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 274 */	
			0x17,		/* FC_CSTRUCT */
			0x1,		/* 1 */
/* 276 */	NdrFcShort( 0x4 ),	/* 4 */
/* 278 */	NdrFcShort( 0xfff0 ),	/* Offset= -16 (262) */
/* 280 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 282 */	0x6,		/* FC_SHORT */
			0x5b,		/* FC_END */
/* 284 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 286 */	NdrFcShort( 0x28 ),	/* 40 */
/* 288 */	NdrFcShort( 0x0 ),	/* 0 */
/* 290 */	NdrFcShort( 0xc ),	/* Offset= 12 (302) */
/* 292 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 294 */	0x6,		/* FC_SHORT */
			0x40,		/* FC_STRUCTPAD4 */
/* 296 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 298 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 300 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 302 */	
			0x12, 0x0,	/* FC_UP */
/* 304 */	NdrFcShort( 0xffc8 ),	/* Offset= -56 (248) */
/* 306 */	
			0x12, 0x0,	/* FC_UP */
/* 308 */	NdrFcShort( 0xffc4 ),	/* Offset= -60 (248) */
/* 310 */	
			0x12, 0x0,	/* FC_UP */
/* 312 */	NdrFcShort( 0xffda ),	/* Offset= -38 (274) */
/* 314 */	
			0x12, 0x0,	/* FC_UP */
/* 316 */	NdrFcShort( 0xffd6 ),	/* Offset= -42 (274) */
/* 318 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 320 */	NdrFcShort( 0xc ),	/* 12 */
/* 322 */	NdrFcShort( 0x0 ),	/* 0 */
/* 324 */	NdrFcShort( 0x0 ),	/* Offset= 0 (324) */
/* 326 */	0x8,		/* FC_LONG */
			0xd,		/* FC_ENUM16 */
/* 328 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 330 */	0x3e,		/* FC_STRUCTPAD2 */
			0x5b,		/* FC_END */
/* 332 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 334 */	NdrFcShort( 0x30 ),	/* 48 */
/* 336 */	NdrFcShort( 0x0 ),	/* 0 */
/* 338 */	NdrFcShort( 0xc ),	/* Offset= 12 (350) */
/* 340 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 342 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 344 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 346 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 348 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 350 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 352 */	0x2,		/* FC_CHAR */
			0x5c,		/* FC_PAD */
/* 354 */	
			0x12, 0x0,	/* FC_UP */
/* 356 */	NdrFcShort( 0xff66 ),	/* Offset= -154 (202) */
/* 358 */	
			0x12, 0x0,	/* FC_UP */
/* 360 */	NdrFcShort( 0xffb4 ),	/* Offset= -76 (284) */
/* 362 */	
			0x12, 0x0,	/* FC_UP */
/* 364 */	NdrFcShort( 0xffd2 ),	/* Offset= -46 (318) */
/* 366 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 368 */	NdrFcShort( 0x2 ),	/* Offset= 2 (370) */
/* 370 */	0x30,		/* FC_BIND_CONTEXT */
			0xa0,		/* Ctxt flags:  via ptr, out, */
/* 372 */	0x0,		/* 0 */
			0x0,		/* 0 */
/* 374 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 376 */	NdrFcShort( 0x2 ),	/* Offset= 2 (378) */
/* 378 */	
			0x12, 0x0,	/* FC_UP */
/* 380 */	NdrFcShort( 0x2 ),	/* Offset= 2 (382) */
/* 382 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 384 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 386 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 388 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 390 */	NdrFcShort( 0x2 ),	/* Offset= 2 (392) */
/* 392 */	NdrFcShort( 0x48 ),	/* 72 */
/* 394 */	NdrFcShort( 0x700d ),	/* 28685 */
/* 396 */	NdrFcLong( 0x1 ),	/* 1 */
/* 400 */	NdrFcShort( 0x52 ),	/* Offset= 82 (482) */
/* 402 */	NdrFcLong( 0x2 ),	/* 2 */
/* 406 */	NdrFcShort( 0x7a ),	/* Offset= 122 (528) */
/* 408 */	NdrFcLong( 0x3 ),	/* 3 */
/* 412 */	NdrFcShort( 0x8a ),	/* Offset= 138 (550) */
/* 414 */	NdrFcLong( 0x5 ),	/* 5 */
/* 418 */	NdrFcShort( 0x96 ),	/* Offset= 150 (568) */
/* 420 */	NdrFcLong( 0x4 ),	/* 4 */
/* 424 */	NdrFcShort( 0xa2 ),	/* Offset= 162 (586) */
/* 426 */	NdrFcLong( 0x6 ),	/* 6 */
/* 430 */	NdrFcShort( 0xaa ),	/* Offset= 170 (600) */
/* 432 */	NdrFcLong( 0x7 ),	/* 7 */
/* 436 */	NdrFcShort( 0xae ),	/* Offset= 174 (610) */
/* 438 */	NdrFcLong( 0x9 ),	/* 9 */
/* 442 */	NdrFcShort( 0xba ),	/* Offset= 186 (628) */
/* 444 */	NdrFcLong( 0xa ),	/* 10 */
/* 448 */	NdrFcShort( 0xc2 ),	/* Offset= 194 (642) */
/* 450 */	NdrFcLong( 0xb ),	/* 11 */
/* 454 */	NdrFcShort( 0xc2 ),	/* Offset= 194 (648) */
/* 456 */	NdrFcLong( 0xc ),	/* 12 */
/* 460 */	NdrFcShort( 0xd6 ),	/* Offset= 214 (674) */
/* 462 */	NdrFcLong( 0xd ),	/* 13 */
/* 466 */	NdrFcShort( 0xd0 ),	/* Offset= 208 (674) */
/* 468 */	NdrFcLong( 0xe ),	/* 14 */
/* 472 */	NdrFcShort( 0x60 ),	/* Offset= 96 (568) */
/* 474 */	NdrFcShort( 0xffff ),	/* Offset= -1 (473) */
/* 476 */	
			0x15,		/* FC_STRUCT */
			0x7,		/* 7 */
/* 478 */	NdrFcShort( 0x8 ),	/* 8 */
/* 480 */	0xb,		/* FC_HYPER */
			0x5b,		/* FC_END */
/* 482 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x7,		/* 7 */
/* 484 */	NdrFcShort( 0x28 ),	/* 40 */
/* 486 */	NdrFcShort( 0x0 ),	/* 0 */
/* 488 */	NdrFcShort( 0x0 ),	/* Offset= 0 (488) */
/* 490 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 492 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 494 */	NdrFcShort( 0xffee ),	/* Offset= -18 (476) */
/* 496 */	0x2,		/* FC_CHAR */
			0x43,		/* FC_STRUCTPAD7 */
/* 498 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 500 */	NdrFcShort( 0xffe8 ),	/* Offset= -24 (476) */
/* 502 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 504 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 506 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 508 */	NdrFcLong( 0x0 ),	/* 0 */
/* 512 */	NdrFcLong( 0x3e8 ),	/* 1000 */
/* 516 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 518 */	NdrFcShort( 0x4 ),	/* 4 */
/* 520 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 522 */	NdrFcShort( 0x10 ),	/* 16 */
/* 524 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 526 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 528 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 530 */	NdrFcShort( 0x18 ),	/* 24 */
/* 532 */	NdrFcShort( 0x0 ),	/* 0 */
/* 534 */	NdrFcShort( 0xc ),	/* Offset= 12 (546) */
/* 536 */	0x2,		/* FC_CHAR */
			0x43,		/* FC_STRUCTPAD7 */
/* 538 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 540 */	0x0,		/* 0 */
			NdrFcShort( 0xffdd ),	/* Offset= -35 (506) */
			0x40,		/* FC_STRUCTPAD4 */
/* 544 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 546 */	
			0x12, 0x0,	/* FC_UP */
/* 548 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (516) */
/* 550 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 552 */	NdrFcShort( 0x18 ),	/* 24 */
/* 554 */	NdrFcShort( 0x0 ),	/* 0 */
/* 556 */	NdrFcShort( 0x8 ),	/* Offset= 8 (564) */
/* 558 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 560 */	NdrFcShort( 0xfdf8 ),	/* Offset= -520 (40) */
/* 562 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 564 */	
			0x12, 0x0,	/* FC_UP */
/* 566 */	NdrFcShort( 0xfec2 ),	/* Offset= -318 (248) */
/* 568 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 570 */	NdrFcShort( 0x18 ),	/* 24 */
/* 572 */	NdrFcShort( 0x0 ),	/* 0 */
/* 574 */	NdrFcShort( 0x8 ),	/* Offset= 8 (582) */
/* 576 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 578 */	NdrFcShort( 0xfde6 ),	/* Offset= -538 (40) */
/* 580 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 582 */	
			0x12, 0x0,	/* FC_UP */
/* 584 */	NdrFcShort( 0xfeb0 ),	/* Offset= -336 (248) */
/* 586 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 588 */	NdrFcShort( 0x10 ),	/* 16 */
/* 590 */	NdrFcShort( 0x0 ),	/* 0 */
/* 592 */	NdrFcShort( 0x0 ),	/* Offset= 0 (592) */
/* 594 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 596 */	NdrFcShort( 0xfdd4 ),	/* Offset= -556 (40) */
/* 598 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 600 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x1,		/* 1 */
/* 602 */	NdrFcShort( 0x4 ),	/* 4 */
/* 604 */	NdrFcShort( 0x0 ),	/* 0 */
/* 606 */	NdrFcShort( 0x0 ),	/* Offset= 0 (606) */
/* 608 */	0xd,		/* FC_ENUM16 */
			0x5b,		/* FC_END */
/* 610 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 612 */	NdrFcShort( 0x20 ),	/* 32 */
/* 614 */	NdrFcShort( 0x0 ),	/* 0 */
/* 616 */	NdrFcShort( 0x0 ),	/* Offset= 0 (616) */
/* 618 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 620 */	NdrFcShort( 0xfdbc ),	/* Offset= -580 (40) */
/* 622 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 624 */	NdrFcShort( 0xfdb8 ),	/* Offset= -584 (40) */
/* 626 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 628 */	
			0x15,		/* FC_STRUCT */
			0x7,		/* 7 */
/* 630 */	NdrFcShort( 0x10 ),	/* 16 */
/* 632 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 634 */	NdrFcShort( 0xff62 ),	/* Offset= -158 (476) */
/* 636 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 638 */	NdrFcShort( 0xff5e ),	/* Offset= -162 (476) */
/* 640 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 642 */	
			0x15,		/* FC_STRUCT */
			0x0,		/* 0 */
/* 644 */	NdrFcShort( 0x1 ),	/* 1 */
/* 646 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 648 */	
			0x15,		/* FC_STRUCT */
			0x0,		/* 0 */
/* 650 */	NdrFcShort( 0x2 ),	/* 2 */
/* 652 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 654 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 656 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 658 */	NdrFcShort( 0x8 ),	/* 8 */
/* 660 */	0x1,		/* FC_BYTE */
			0x5b,		/* FC_END */
/* 662 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 664 */	NdrFcShort( 0x10 ),	/* 16 */
/* 666 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 668 */	0x6,		/* FC_SHORT */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 670 */	0x0,		/* 0 */
			NdrFcShort( 0xfff1 ),	/* Offset= -15 (656) */
			0x5b,		/* FC_END */
/* 674 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 676 */	NdrFcShort( 0x48 ),	/* 72 */
/* 678 */	NdrFcShort( 0x0 ),	/* 0 */
/* 680 */	NdrFcShort( 0x14 ),	/* Offset= 20 (700) */
/* 682 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 684 */	NdrFcShort( 0xfd7c ),	/* Offset= -644 (40) */
/* 686 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 688 */	NdrFcShort( 0xfd78 ),	/* Offset= -648 (40) */
/* 690 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 692 */	NdrFcShort( 0xfd74 ),	/* Offset= -652 (40) */
/* 694 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 696 */	NdrFcShort( 0xffde ),	/* Offset= -34 (662) */
/* 698 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 700 */	
			0x12, 0x0,	/* FC_UP */
/* 702 */	NdrFcShort( 0xfe3a ),	/* Offset= -454 (248) */
/* 704 */	
			0x11, 0x0,	/* FC_RP */
/* 706 */	NdrFcShort( 0x2 ),	/* Offset= 2 (708) */
/* 708 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 710 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 712 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 714 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 716 */	NdrFcShort( 0xfebc ),	/* Offset= -324 (392) */
/* 718 */	
			0x11, 0x0,	/* FC_RP */
/* 720 */	NdrFcShort( 0xfe28 ),	/* Offset= -472 (248) */
/* 722 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 724 */	NdrFcShort( 0x2 ),	/* Offset= 2 (726) */
/* 726 */	0x30,		/* FC_BIND_CONTEXT */
			0xa0,		/* Ctxt flags:  via ptr, out, */
/* 728 */	0x0,		/* 0 */
			0x1,		/* 1 */
/* 730 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 732 */	NdrFcShort( 0x26 ),	/* Offset= 38 (770) */
/* 734 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 736 */	NdrFcShort( 0x8 ),	/* 8 */
/* 738 */	NdrFcShort( 0x0 ),	/* 0 */
/* 740 */	NdrFcShort( 0x4 ),	/* Offset= 4 (744) */
/* 742 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 744 */	
			0x12, 0x0,	/* FC_UP */
/* 746 */	NdrFcShort( 0xfe0e ),	/* Offset= -498 (248) */
/* 748 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 750 */	NdrFcShort( 0x0 ),	/* 0 */
/* 752 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 754 */	NdrFcShort( 0x0 ),	/* 0 */
/* 756 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 758 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 762 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 764 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 766 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (734) */
/* 768 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 770 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 772 */	NdrFcShort( 0x10 ),	/* 16 */
/* 774 */	NdrFcShort( 0x0 ),	/* 0 */
/* 776 */	NdrFcShort( 0x6 ),	/* Offset= 6 (782) */
/* 778 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 780 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 782 */	
			0x12, 0x0,	/* FC_UP */
/* 784 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (748) */
/* 786 */	
			0x11, 0x0,	/* FC_RP */
/* 788 */	NdrFcShort( 0x2 ),	/* Offset= 2 (790) */
/* 790 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 792 */	NdrFcShort( 0x18 ),	/* 24 */
/* 794 */	NdrFcShort( 0x0 ),	/* 0 */
/* 796 */	NdrFcShort( 0x8 ),	/* Offset= 8 (804) */
/* 798 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 800 */	NdrFcShort( 0xfd08 ),	/* Offset= -760 (40) */
/* 802 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 804 */	
			0x12, 0x0,	/* FC_UP */
/* 806 */	NdrFcShort( 0xfdd2 ),	/* Offset= -558 (248) */
/* 808 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 810 */	NdrFcShort( 0x18 ),	/* Offset= 24 (834) */
/* 812 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 814 */	NdrFcShort( 0x0 ),	/* 0 */
/* 816 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 818 */	NdrFcShort( 0x0 ),	/* 0 */
/* 820 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 822 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 826 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 828 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 830 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (790) */
/* 832 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 834 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 836 */	NdrFcShort( 0x10 ),	/* 16 */
/* 838 */	NdrFcShort( 0x0 ),	/* 0 */
/* 840 */	NdrFcShort( 0x6 ),	/* Offset= 6 (846) */
/* 842 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 844 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 846 */	
			0x12, 0x0,	/* FC_UP */
/* 848 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (812) */
/* 850 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 852 */	NdrFcLong( 0x0 ),	/* 0 */
/* 856 */	NdrFcLong( 0x3e8 ),	/* 1000 */
/* 860 */	
			0x11, 0x0,	/* FC_RP */
/* 862 */	NdrFcShort( 0x2 ),	/* Offset= 2 (864) */
/* 864 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 866 */	NdrFcShort( 0x0 ),	/* 0 */
/* 868 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 870 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 872 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 874 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 878 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 880 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 882 */	NdrFcShort( 0xfcb6 ),	/* Offset= -842 (40) */
/* 884 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 886 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 888 */	NdrFcShort( 0x2 ),	/* Offset= 2 (890) */
/* 890 */	
			0x12, 0x0,	/* FC_UP */
/* 892 */	NdrFcShort( 0x2 ),	/* Offset= 2 (894) */
/* 894 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 896 */	NdrFcShort( 0x18 ),	/* 24 */
/* 898 */	NdrFcShort( 0x0 ),	/* 0 */
/* 900 */	NdrFcShort( 0x8 ),	/* Offset= 8 (908) */
/* 902 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 904 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 906 */	0x40,		/* FC_STRUCTPAD4 */
			0x5b,		/* FC_END */
/* 908 */	
			0x12, 0x0,	/* FC_UP */
/* 910 */	NdrFcShort( 0xff9e ),	/* Offset= -98 (812) */
/* 912 */	
			0x11, 0x0,	/* FC_RP */
/* 914 */	NdrFcShort( 0x2e ),	/* Offset= 46 (960) */
/* 916 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 918 */	NdrFcLong( 0x0 ),	/* 0 */
/* 922 */	NdrFcLong( 0x3e8 ),	/* 1000 */
/* 926 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 928 */	NdrFcShort( 0xc ),	/* 12 */
/* 930 */	NdrFcShort( 0x0 ),	/* 0 */
/* 932 */	NdrFcShort( 0x0 ),	/* Offset= 0 (932) */
/* 934 */	0xd,		/* FC_ENUM16 */
			0x8,		/* FC_LONG */
/* 936 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 938 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 940 */	NdrFcShort( 0x0 ),	/* 0 */
/* 942 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 944 */	NdrFcShort( 0x0 ),	/* 0 */
/* 946 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 948 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 952 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 954 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 956 */	NdrFcShort( 0xffe2 ),	/* Offset= -30 (926) */
/* 958 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 960 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 962 */	NdrFcShort( 0x10 ),	/* 16 */
/* 964 */	NdrFcShort( 0x0 ),	/* 0 */
/* 966 */	NdrFcShort( 0xa ),	/* Offset= 10 (976) */
/* 968 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 970 */	NdrFcShort( 0xffca ),	/* Offset= -54 (916) */
/* 972 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 974 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 976 */	
			0x12, 0x0,	/* FC_UP */
/* 978 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (938) */
/* 980 */	
			0x11, 0x0,	/* FC_RP */
/* 982 */	NdrFcShort( 0x30 ),	/* Offset= 48 (1030) */
/* 984 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 986 */	NdrFcLong( 0x0 ),	/* 0 */
/* 990 */	NdrFcLong( 0x5000 ),	/* 20480 */
/* 994 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 996 */	NdrFcShort( 0x8 ),	/* 8 */
/* 998 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1000 */	NdrFcShort( 0x4 ),	/* Offset= 4 (1004) */
/* 1002 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 1004 */	
			0x12, 0x0,	/* FC_UP */
/* 1006 */	NdrFcShort( 0xfd0a ),	/* Offset= -758 (248) */
/* 1008 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 1010 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1012 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1014 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1016 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1018 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 1022 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 1024 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1026 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (994) */
/* 1028 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1030 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1032 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1034 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1036 */	NdrFcShort( 0xa ),	/* Offset= 10 (1046) */
/* 1038 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1040 */	NdrFcShort( 0xffc8 ),	/* Offset= -56 (984) */
/* 1042 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 1044 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1046 */	
			0x12, 0x0,	/* FC_UP */
/* 1048 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (1008) */
/* 1050 */	
			0x11, 0x0,	/* FC_RP */
/* 1052 */	NdrFcShort( 0x34 ),	/* Offset= 52 (1104) */
/* 1054 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1056 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1060 */	NdrFcLong( 0x5000 ),	/* 20480 */
/* 1064 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1066 */	NdrFcShort( 0x20 ),	/* 32 */
/* 1068 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1070 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1070) */
/* 1072 */	0xd,		/* FC_ENUM16 */
			0x40,		/* FC_STRUCTPAD4 */
/* 1074 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1076 */	NdrFcShort( 0xfbf4 ),	/* Offset= -1036 (40) */
/* 1078 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 1080 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1082 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 1084 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1086 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1088 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1090 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1092 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 1096 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 1098 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1100 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (1064) */
/* 1102 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1104 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1106 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1108 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1110 */	NdrFcShort( 0xa ),	/* Offset= 10 (1120) */
/* 1112 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1114 */	NdrFcShort( 0xffc4 ),	/* Offset= -60 (1054) */
/* 1116 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 1118 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1120 */	
			0x12, 0x0,	/* FC_UP */
/* 1122 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (1082) */
/* 1124 */	
			0x11, 0x0,	/* FC_RP */
/* 1126 */	NdrFcShort( 0xfbc2 ),	/* Offset= -1086 (40) */
/* 1128 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1130 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1132) */
/* 1132 */	
			0x12, 0x0,	/* FC_UP */
/* 1134 */	NdrFcShort( 0x26 ),	/* Offset= 38 (1172) */
/* 1136 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1138 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1142 */	NdrFcLong( 0x3e8 ),	/* 1000 */
/* 1146 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 1148 */	NdrFcShort( 0xc ),	/* 12 */
/* 1150 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1152 */	NdrFcShort( 0xfbba ),	/* Offset= -1094 (58) */
/* 1154 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1156 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 1158 */	NdrFcShort( 0xc ),	/* 12 */
/* 1160 */	0x9,		/* Corr desc: FC_ULONG */
			0x0,		/*  */
/* 1162 */	NdrFcShort( 0xfff8 ),	/* -8 */
/* 1164 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1166 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1168 */	NdrFcShort( 0xffea ),	/* Offset= -22 (1146) */
/* 1170 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1172 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1174 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1176 */	NdrFcShort( 0xffec ),	/* Offset= -20 (1156) */
/* 1178 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1178) */
/* 1180 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1182 */	NdrFcShort( 0xffd2 ),	/* Offset= -46 (1136) */
/* 1184 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1186 */	
			0x11, 0x0,	/* FC_RP */
/* 1188 */	NdrFcShort( 0xfff0 ),	/* Offset= -16 (1172) */
/* 1190 */	
			0x11, 0xc,	/* FC_RP [alloced_on_stack] [simple_pointer] */
/* 1192 */	0x8,		/* FC_LONG */
			0x5c,		/* FC_PAD */
/* 1194 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1196 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1198) */
/* 1198 */	
			0x12, 0x0,	/* FC_UP */
/* 1200 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1202) */
/* 1202 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1204 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1206 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1208 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1210 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1212) */
/* 1212 */	NdrFcShort( 0x78 ),	/* 120 */
/* 1214 */	NdrFcShort( 0x300d ),	/* 12301 */
/* 1216 */	NdrFcLong( 0x1 ),	/* 1 */
/* 1220 */	NdrFcShort( 0xfd86 ),	/* Offset= -634 (586) */
/* 1222 */	NdrFcLong( 0x2 ),	/* 2 */
/* 1226 */	NdrFcShort( 0x66 ),	/* Offset= 102 (1328) */
/* 1228 */	NdrFcLong( 0x3 ),	/* 3 */
/* 1232 */	NdrFcShort( 0x74 ),	/* Offset= 116 (1348) */
/* 1234 */	NdrFcLong( 0x4 ),	/* 4 */
/* 1238 */	NdrFcShort( 0xb0 ),	/* Offset= 176 (1414) */
/* 1240 */	NdrFcLong( 0x5 ),	/* 5 */
/* 1244 */	NdrFcShort( 0xfe3a ),	/* Offset= -454 (790) */
/* 1246 */	NdrFcLong( 0x6 ),	/* 6 */
/* 1250 */	NdrFcShort( 0xb8 ),	/* Offset= 184 (1434) */
/* 1252 */	NdrFcLong( 0x7 ),	/* 7 */
/* 1256 */	NdrFcShort( 0x10e ),	/* Offset= 270 (1526) */
/* 1258 */	NdrFcLong( 0x8 ),	/* 8 */
/* 1262 */	NdrFcShort( 0x130 ),	/* Offset= 304 (1566) */
/* 1264 */	NdrFcLong( 0x9 ),	/* 9 */
/* 1268 */	NdrFcShort( 0x15e ),	/* Offset= 350 (1618) */
/* 1270 */	NdrFcLong( 0xa ),	/* 10 */
/* 1274 */	NdrFcShort( 0x166 ),	/* Offset= 358 (1632) */
/* 1276 */	NdrFcLong( 0xb ),	/* 11 */
/* 1280 */	NdrFcShort( 0x182 ),	/* Offset= 386 (1666) */
/* 1282 */	NdrFcLong( 0xc ),	/* 12 */
/* 1286 */	NdrFcShort( 0x19c ),	/* Offset= 412 (1698) */
/* 1288 */	NdrFcLong( 0xd ),	/* 13 */
/* 1292 */	NdrFcShort( 0x38 ),	/* Offset= 56 (1348) */
/* 1294 */	NdrFcShort( 0xffff ),	/* Offset= -1 (1293) */
/* 1296 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1298 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1302 */	NdrFcLong( 0x5 ),	/* 5 */
/* 1306 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 1308 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1310 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1312 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1314 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1316 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 1320 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 1322 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1324 */	NdrFcShort( 0xfafc ),	/* Offset= -1284 (40) */
/* 1326 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1328 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1330 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1332 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1334 */	NdrFcShort( 0xa ),	/* Offset= 10 (1344) */
/* 1336 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1338 */	NdrFcShort( 0xffd6 ),	/* Offset= -42 (1296) */
/* 1340 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 1342 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1344 */	
			0x12, 0x0,	/* FC_UP */
/* 1346 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (1306) */
/* 1348 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 1350 */	NdrFcShort( 0x4 ),	/* 4 */
/* 1352 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1354 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1356 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1360 */	NdrFcLong( 0x20010 ),	/* 131088 */
/* 1364 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1366 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1370 */	NdrFcLong( 0x20010 ),	/* 131088 */
/* 1374 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 1376 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1378 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1380 */	NdrFcShort( 0x4 ),	/* 4 */
/* 1382 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1384 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1386 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1388 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1390 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1392 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1394 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1396 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1398 */	NdrFcShort( 0xc ),	/* Offset= 12 (1410) */
/* 1400 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1402 */	NdrFcShort( 0xffd0 ),	/* Offset= -48 (1354) */
/* 1404 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1406 */	NdrFcShort( 0xffd6 ),	/* Offset= -42 (1364) */
/* 1408 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 1410 */	
			0x12, 0x0,	/* FC_UP */
/* 1412 */	NdrFcShort( 0xffda ),	/* Offset= -38 (1374) */
/* 1414 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1416 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1418 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1420 */	NdrFcShort( 0x6 ),	/* Offset= 6 (1426) */
/* 1422 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 1424 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1426 */	
			0x12, 0x0,	/* FC_UP */
/* 1428 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (1392) */
/* 1430 */	
			0x12, 0x0,	/* FC_UP */
/* 1432 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (1392) */
/* 1434 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1436 */	NdrFcShort( 0x38 ),	/* 56 */
/* 1438 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1440 */	NdrFcShort( 0x10 ),	/* Offset= 16 (1456) */
/* 1442 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1444 */	NdrFcShort( 0xfa84 ),	/* Offset= -1404 (40) */
/* 1446 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1448 */	NdrFcShort( 0xfa80 ),	/* Offset= -1408 (40) */
/* 1450 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 1452 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1454 */	0x40,		/* FC_STRUCTPAD4 */
			0x5b,		/* FC_END */
/* 1456 */	
			0x12, 0x0,	/* FC_UP */
/* 1458 */	NdrFcShort( 0xfb46 ),	/* Offset= -1210 (248) */
/* 1460 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1462 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1466 */	NdrFcLong( 0x1 ),	/* 1 */
/* 1470 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1472 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1476 */	NdrFcLong( 0x1 ),	/* 1 */
/* 1480 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1482 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1486 */	NdrFcLong( 0x10000 ),	/* 65536 */
/* 1490 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 1492 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1494 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1496 */	NdrFcShort( 0xc ),	/* 12 */
/* 1498 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1500 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1502 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x7,		/* 7 */
/* 1504 */	NdrFcShort( 0x18 ),	/* 24 */
/* 1506 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1508 */	NdrFcShort( 0xe ),	/* Offset= 14 (1522) */
/* 1510 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1512 */	NdrFcShort( 0xfbf4 ),	/* Offset= -1036 (476) */
/* 1514 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1516 */	0x0,		/* 0 */
			NdrFcShort( 0xffdb ),	/* Offset= -37 (1480) */
			0x36,		/* FC_POINTER */
/* 1520 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1522 */	
			0x12, 0x0,	/* FC_UP */
/* 1524 */	NdrFcShort( 0xffde ),	/* Offset= -34 (1490) */
/* 1526 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1528 */	NdrFcShort( 0x30 ),	/* 48 */
/* 1530 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1532 */	NdrFcShort( 0x12 ),	/* Offset= 18 (1550) */
/* 1534 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1536 */	NdrFcShort( 0xffb4 ),	/* Offset= -76 (1460) */
/* 1538 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 1540 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1542 */	0x0,		/* 0 */
			NdrFcShort( 0xffb7 ),	/* Offset= -73 (1470) */
			0x40,		/* FC_STRUCTPAD4 */
/* 1546 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 1548 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1550 */	
			0x12, 0x0,	/* FC_UP */
/* 1552 */	NdrFcShort( 0xffce ),	/* Offset= -50 (1502) */
/* 1554 */	
			0x12, 0x0,	/* FC_UP */
/* 1556 */	NdrFcShort( 0xffca ),	/* Offset= -54 (1502) */
/* 1558 */	
			0x12, 0x0,	/* FC_UP */
/* 1560 */	NdrFcShort( 0xffc6 ),	/* Offset= -58 (1502) */
/* 1562 */	
			0x12, 0x0,	/* FC_UP */
/* 1564 */	NdrFcShort( 0xffc2 ),	/* Offset= -62 (1502) */
/* 1566 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1568 */	NdrFcShort( 0x70 ),	/* 112 */
/* 1570 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1572 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1572) */
/* 1574 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1576 */	NdrFcShort( 0xff72 ),	/* Offset= -142 (1434) */
/* 1578 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1580 */	NdrFcShort( 0xff18 ),	/* Offset= -232 (1348) */
/* 1582 */	0x40,		/* FC_STRUCTPAD4 */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1584 */	0x0,		/* 0 */
			NdrFcShort( 0xffc5 ),	/* Offset= -59 (1526) */
			0x5b,		/* FC_END */
/* 1588 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1590 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1594 */	NdrFcLong( 0x10000 ),	/* 65536 */
/* 1598 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1600 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1602 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1604 */	NdrFcShort( 0xa ),	/* Offset= 10 (1614) */
/* 1606 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1608 */	NdrFcShort( 0xffec ),	/* Offset= -20 (1588) */
/* 1610 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 1612 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1614 */	
			0x12, 0x0,	/* FC_UP */
/* 1616 */	NdrFcShort( 0xfa3c ),	/* Offset= -1476 (140) */
/* 1618 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1620 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1622 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1624 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1624) */
/* 1626 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1628 */	NdrFcShort( 0xffe2 ),	/* Offset= -30 (1598) */
/* 1630 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1632 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1634 */	NdrFcShort( 0x50 ),	/* 80 */
/* 1636 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1638 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1638) */
/* 1640 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1642 */	NdrFcShort( 0xff30 ),	/* Offset= -208 (1434) */
/* 1644 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1646 */	NdrFcShort( 0xfed6 ),	/* Offset= -298 (1348) */
/* 1648 */	0x40,		/* FC_STRUCTPAD4 */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1650 */	0x0,		/* 0 */
			NdrFcShort( 0xffdf ),	/* Offset= -33 (1618) */
			0x5b,		/* FC_END */
/* 1654 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 1656 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1658 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1660 */	NdrFcShort( 0x34 ),	/* 52 */
/* 1662 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1664 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1666 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1668 */	NdrFcShort( 0x40 ),	/* 64 */
/* 1670 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1672 */	NdrFcShort( 0x12 ),	/* Offset= 18 (1690) */
/* 1674 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1676 */	NdrFcShort( 0xf99c ),	/* Offset= -1636 (40) */
/* 1678 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1680 */	NdrFcShort( 0xf998 ),	/* Offset= -1640 (40) */
/* 1682 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 1684 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1686 */	0x8,		/* FC_LONG */
			0x36,		/* FC_POINTER */
/* 1688 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1690 */	
			0x12, 0x0,	/* FC_UP */
/* 1692 */	NdrFcShort( 0xfa5c ),	/* Offset= -1444 (248) */
/* 1694 */	
			0x12, 0x0,	/* FC_UP */
/* 1696 */	NdrFcShort( 0xffd6 ),	/* Offset= -42 (1654) */
/* 1698 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1700 */	NdrFcShort( 0x78 ),	/* 120 */
/* 1702 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1704 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1704) */
/* 1706 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1708 */	NdrFcShort( 0xffd6 ),	/* Offset= -42 (1666) */
/* 1710 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1712 */	NdrFcShort( 0xfe94 ),	/* Offset= -364 (1348) */
/* 1714 */	0x40,		/* FC_STRUCTPAD4 */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1716 */	0x0,		/* 0 */
			NdrFcShort( 0xff41 ),	/* Offset= -191 (1526) */
			0x5b,		/* FC_END */
/* 1720 */	
			0x11, 0x0,	/* FC_RP */
/* 1722 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1724) */
/* 1724 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1726 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1728 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1730 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1732 */	NdrFcShort( 0xfdf8 ),	/* Offset= -520 (1212) */
/* 1734 */	
			0x12, 0x0,	/* FC_UP */
/* 1736 */	NdrFcShort( 0xfea8 ),	/* Offset= -344 (1392) */
/* 1738 */	
			0x12, 0x14,	/* FC_UP [alloced_on_stack] [pointer_deref] */
/* 1740 */	NdrFcShort( 0xfffa ),	/* Offset= -6 (1734) */
/* 1742 */	
			0x12, 0x0,	/* FC_UP */
/* 1744 */	NdrFcShort( 0xfb0c ),	/* Offset= -1268 (476) */
/* 1746 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 1748 */	NdrFcShort( 0xf966 ),	/* Offset= -1690 (58) */
/* 1750 */	
			0x11, 0x0,	/* FC_RP */
/* 1752 */	NdrFcShort( 0xf962 ),	/* Offset= -1694 (58) */
/* 1754 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1756 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1758) */
/* 1758 */	
			0x12, 0x0,	/* FC_UP */
/* 1760 */	NdrFcShort( 0xf948 ),	/* Offset= -1720 (40) */
/* 1762 */	
			0x11, 0xc,	/* FC_RP [alloced_on_stack] [simple_pointer] */
/* 1764 */	0x6,		/* FC_SHORT */
			0x5c,		/* FC_PAD */
/* 1766 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 1768 */	NdrFcShort( 0xc ),	/* Offset= 12 (1780) */
/* 1770 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 1772 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1776 */	NdrFcLong( 0x100 ),	/* 256 */
/* 1780 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1782 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1784 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1786 */	NdrFcShort( 0xa ),	/* Offset= 10 (1796) */
/* 1788 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1790 */	NdrFcShort( 0xffec ),	/* Offset= -20 (1770) */
/* 1792 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 1794 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1796 */	
			0x12, 0x0,	/* FC_UP */
/* 1798 */	NdrFcShort( 0xfe14 ),	/* Offset= -492 (1306) */
/* 1800 */	
			0x11, 0x0,	/* FC_RP */
/* 1802 */	NdrFcShort( 0xffea ),	/* Offset= -22 (1780) */
/* 1804 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1806 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1808) */
/* 1808 */	
			0x12, 0x0,	/* FC_UP */
/* 1810 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1812) */
/* 1812 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1814 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1816 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1818 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1820 */	NdrFcShort( 0xfda0 ),	/* Offset= -608 (1212) */
/* 1822 */	
			0x11, 0x0,	/* FC_RP */
/* 1824 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1826) */
/* 1826 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1828 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1830 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1832 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1834 */	NdrFcShort( 0xfd92 ),	/* Offset= -622 (1212) */
/* 1836 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1838 */	NdrFcShort( 0xff98 ),	/* Offset= -104 (1734) */
/* 1840 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 1842 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 1844 */	
			0x12, 0x14,	/* FC_UP [alloced_on_stack] [pointer_deref] */
/* 1846 */	NdrFcShort( 0xffa8 ),	/* Offset= -88 (1758) */
/* 1848 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1850 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1852) */
/* 1852 */	
			0x12, 0x0,	/* FC_UP */
/* 1854 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1856) */
/* 1856 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1858 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1860 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1862 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1864 */	NdrFcShort( 0xfa40 ),	/* Offset= -1472 (392) */
/* 1866 */	
			0x11, 0x0,	/* FC_RP */
/* 1868 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1870) */
/* 1870 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1872 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1874 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1876 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1878 */	NdrFcShort( 0xfa32 ),	/* Offset= -1486 (392) */
/* 1880 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1882 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1884) */
/* 1884 */	
			0x12, 0x0,	/* FC_UP */
/* 1886 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1888) */
/* 1888 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1890 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1892 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1894 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1896 */	NdrFcShort( 0xfd54 ),	/* Offset= -684 (1212) */
/* 1898 */	
			0x11, 0x0,	/* FC_RP */
/* 1900 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1902) */
/* 1902 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1904 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1906 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1908 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1910 */	NdrFcShort( 0xfd46 ),	/* Offset= -698 (1212) */
/* 1912 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 1914 */	NdrFcShort( 0x18 ),	/* Offset= 24 (1938) */
/* 1916 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 1918 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1920 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1922 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1924 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1926 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 1930 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 1932 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1934 */	NdrFcShort( 0xfe0c ),	/* Offset= -500 (1434) */
/* 1936 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1938 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1940 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1942 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1944 */	NdrFcShort( 0x6 ),	/* Offset= 6 (1950) */
/* 1946 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 1948 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 1950 */	
			0x12, 0x0,	/* FC_UP */
/* 1952 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (1916) */
/* 1954 */	
			0x11, 0x0,	/* FC_RP */
/* 1956 */	NdrFcShort( 0xfdf6 ),	/* Offset= -522 (1434) */
/* 1958 */	
			0x11, 0x0,	/* FC_RP */
/* 1960 */	NdrFcShort( 0xfe4e ),	/* Offset= -434 (1526) */
/* 1962 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1964 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1966) */
/* 1966 */	
			0x12, 0x0,	/* FC_UP */
/* 1968 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1970) */
/* 1970 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1972 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1974 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1976 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1978 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1980) */
/* 1980 */	NdrFcShort( 0x30 ),	/* 48 */
/* 1982 */	NdrFcShort( 0x7003 ),	/* 28675 */
/* 1984 */	NdrFcLong( 0x1 ),	/* 1 */
/* 1988 */	NdrFcShort( 0xfd80 ),	/* Offset= -640 (1348) */
/* 1990 */	NdrFcLong( 0x2 ),	/* 2 */
/* 1994 */	NdrFcShort( 0xa ),	/* Offset= 10 (2004) */
/* 1996 */	NdrFcLong( 0x3 ),	/* 3 */
/* 2000 */	NdrFcShort( 0x14 ),	/* Offset= 20 (2020) */
/* 2002 */	NdrFcShort( 0xffff ),	/* Offset= -1 (2001) */
/* 2004 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2006 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2008 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2010 */	NdrFcShort( 0x6 ),	/* Offset= 6 (2016) */
/* 2012 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 2014 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 2016 */	
			0x12, 0x0,	/* FC_UP */
/* 2018 */	NdrFcShort( 0xf8aa ),	/* Offset= -1878 (140) */
/* 2020 */	
			0x15,		/* FC_STRUCT */
			0x7,		/* 7 */
/* 2022 */	NdrFcShort( 0x30 ),	/* 48 */
/* 2024 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 2026 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2028 */	NdrFcShort( 0xf9f0 ),	/* Offset= -1552 (476) */
/* 2030 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2032 */	NdrFcShort( 0xf9ec ),	/* Offset= -1556 (476) */
/* 2034 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2036 */	NdrFcShort( 0xf9e8 ),	/* Offset= -1560 (476) */
/* 2038 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2040 */	NdrFcShort( 0xf9e4 ),	/* Offset= -1564 (476) */
/* 2042 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2044 */	NdrFcShort( 0xf9e0 ),	/* Offset= -1568 (476) */
/* 2046 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2048 */	
			0x12, 0x0,	/* FC_UP */
/* 2050 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2052) */
/* 2052 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 2054 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 2056 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2058 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2060 */	NdrFcShort( 0xffb0 ),	/* Offset= -80 (1980) */
/* 2062 */	
			0x11, 0x0,	/* FC_RP */
/* 2064 */	NdrFcShort( 0x34 ),	/* Offset= 52 (2116) */
/* 2066 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 2068 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2072 */	NdrFcLong( 0x5000 ),	/* 20480 */
/* 2076 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2078 */	NdrFcShort( 0x20 ),	/* 32 */
/* 2080 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2082 */	NdrFcShort( 0x0 ),	/* Offset= 0 (2082) */
/* 2084 */	0xd,		/* FC_ENUM16 */
			0x40,		/* FC_STRUCTPAD4 */
/* 2086 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2088 */	NdrFcShort( 0xf800 ),	/* Offset= -2048 (40) */
/* 2090 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2092 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2094 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 2096 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2098 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2100 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2102 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2104 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 2108 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2110 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2112 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (2076) */
/* 2114 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2116 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2118 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2120 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2122 */	NdrFcShort( 0xa ),	/* Offset= 10 (2132) */
/* 2124 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2126 */	NdrFcShort( 0xffc4 ),	/* Offset= -60 (2066) */
/* 2128 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 2130 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2132 */	
			0x12, 0x0,	/* FC_UP */
/* 2134 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (2094) */
/* 2136 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 2138 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2142 */	NdrFcLong( 0x3e8 ),	/* 1000 */
/* 2146 */	
			0x11, 0x0,	/* FC_RP */
/* 2148 */	NdrFcShort( 0x30 ),	/* Offset= 48 (2196) */
/* 2150 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 2152 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2156 */	NdrFcLong( 0x3e8 ),	/* 1000 */
/* 2160 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2162 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2164 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2166 */	NdrFcShort( 0x0 ),	/* Offset= 0 (2166) */
/* 2168 */	0xd,		/* FC_ENUM16 */
			0x8,		/* FC_LONG */
/* 2170 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2172 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2174 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 2176 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2178 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2180 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2182 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2184 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 2188 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2190 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2192 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (2160) */
/* 2194 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2196 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2198 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2200 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2202 */	NdrFcShort( 0xa ),	/* Offset= 10 (2212) */
/* 2204 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2206 */	NdrFcShort( 0xffc8 ),	/* Offset= -56 (2150) */
/* 2208 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 2210 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2212 */	
			0x12, 0x0,	/* FC_UP */
/* 2214 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (2174) */
/* 2216 */	
			0x11, 0x0,	/* FC_RP */
/* 2218 */	NdrFcShort( 0xfda8 ),	/* Offset= -600 (1618) */
/* 2220 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 2222 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2226 */	NdrFcLong( 0x3e8 ),	/* 1000 */
/* 2230 */	
			0x11, 0x0,	/* FC_RP */
/* 2232 */	NdrFcShort( 0x34 ),	/* Offset= 52 (2284) */
/* 2234 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 2236 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2240 */	NdrFcLong( 0x3e8 ),	/* 1000 */
/* 2244 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2246 */	NdrFcShort( 0x18 ),	/* 24 */
/* 2248 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2250 */	NdrFcShort( 0x8 ),	/* Offset= 8 (2258) */
/* 2252 */	0xd,		/* FC_ENUM16 */
			0x40,		/* FC_STRUCTPAD4 */
/* 2254 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 2256 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 2258 */	
			0x12, 0x0,	/* FC_UP */
/* 2260 */	NdrFcShort( 0xf824 ),	/* Offset= -2012 (248) */
/* 2262 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 2264 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2266 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2268 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2270 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2272 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 2276 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2278 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2280 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (2244) */
/* 2282 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2284 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2286 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2288 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2290 */	NdrFcShort( 0xa ),	/* Offset= 10 (2300) */
/* 2292 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2294 */	NdrFcShort( 0xffc4 ),	/* Offset= -60 (2234) */
/* 2296 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 2298 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2300 */	
			0x12, 0x0,	/* FC_UP */
/* 2302 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (2262) */
/* 2304 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2306 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2308) */
/* 2308 */	
			0x12, 0x0,	/* FC_UP */
/* 2310 */	NdrFcShort( 0x8c ),	/* Offset= 140 (2450) */
/* 2312 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 2314 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2318 */	NdrFcLong( 0xfa0 ),	/* 4000 */
/* 2322 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 2324 */	0x6,		/* Corr desc: FC_SHORT */
			0x0,		/*  */
/* 2326 */	NdrFcShort( 0xfff4 ),	/* -12 */
/* 2328 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2330 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2332) */
/* 2332 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2334 */	NdrFcShort( 0x3003 ),	/* 12291 */
/* 2336 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2340 */	NdrFcShort( 0xf704 ),	/* Offset= -2300 (40) */
/* 2342 */	NdrFcLong( 0x1 ),	/* 1 */
/* 2346 */	NdrFcShort( 0xf6fe ),	/* Offset= -2306 (40) */
/* 2348 */	NdrFcLong( 0x2 ),	/* 2 */
/* 2352 */	NdrFcShort( 0x4 ),	/* Offset= 4 (2356) */
/* 2354 */	NdrFcShort( 0x22 ),	/* Offset= 34 (2388) */
/* 2356 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2358 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2360 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2362 */	NdrFcShort( 0xc ),	/* Offset= 12 (2374) */
/* 2364 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2366 */	0x0,		/* 0 */
			NdrFcShort( 0xf6e9 ),	/* Offset= -2327 (40) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2370 */	0x0,		/* 0 */
			NdrFcShort( 0xf6e5 ),	/* Offset= -2331 (40) */
			0x5b,		/* FC_END */
/* 2374 */	
			0x12, 0x0,	/* FC_UP */
/* 2376 */	NdrFcShort( 0xf7b0 ),	/* Offset= -2128 (248) */
/* 2378 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 2380 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2384 */	NdrFcLong( 0x20000 ),	/* 131072 */
/* 2388 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2390 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2392 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2394 */	NdrFcShort( 0xa ),	/* Offset= 10 (2404) */
/* 2396 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2398 */	NdrFcShort( 0xffec ),	/* Offset= -20 (2378) */
/* 2400 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 2402 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2404 */	
			0x12, 0x0,	/* FC_UP */
/* 2406 */	NdrFcShort( 0xf726 ),	/* Offset= -2266 (140) */
/* 2408 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x7,		/* 7 */
/* 2410 */	NdrFcShort( 0x38 ),	/* 56 */
/* 2412 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2414 */	NdrFcShort( 0x0 ),	/* Offset= 0 (2414) */
/* 2416 */	0x8,		/* FC_LONG */
			0xd,		/* FC_ENUM16 */
/* 2418 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2420 */	NdrFcShort( 0xf868 ),	/* Offset= -1944 (476) */
/* 2422 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2424 */	NdrFcShort( 0xff9a ),	/* Offset= -102 (2322) */
/* 2426 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2428 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 2430 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2432 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2434 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2436 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2438 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 2442 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2444 */	
			0x12, 0x0,	/* FC_UP */
/* 2446 */	NdrFcShort( 0xffda ),	/* Offset= -38 (2408) */
/* 2448 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2450 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2452 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2454 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2456 */	NdrFcShort( 0xa ),	/* Offset= 10 (2466) */
/* 2458 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2460 */	NdrFcShort( 0xff6c ),	/* Offset= -148 (2312) */
/* 2462 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 2464 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2466 */	
			0x12, 0x0,	/* FC_UP */
/* 2468 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (2428) */
/* 2470 */	
			0x11, 0x0,	/* FC_RP */
/* 2472 */	NdrFcShort( 0xffea ),	/* Offset= -22 (2450) */
/* 2474 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2476 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2478) */
/* 2478 */	
			0x12, 0x0,	/* FC_UP */
/* 2480 */	NdrFcShort( 0x2a ),	/* Offset= 42 (2522) */
/* 2482 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2484 */	NdrFcShort( 0x20 ),	/* 32 */
/* 2486 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2488 */	NdrFcShort( 0x0 ),	/* Offset= 0 (2488) */
/* 2490 */	0x8,		/* FC_LONG */
			0xd,		/* FC_ENUM16 */
/* 2492 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 2494 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2496 */	NdrFcShort( 0xf668 ),	/* Offset= -2456 (40) */
/* 2498 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2500 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 2502 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2504 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2506 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2508 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2510 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 2514 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2516 */	
			0x12, 0x0,	/* FC_UP */
/* 2518 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (2482) */
/* 2520 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2522 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2524 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2526 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2528 */	NdrFcShort( 0x6 ),	/* Offset= 6 (2534) */
/* 2530 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 2532 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 2534 */	
			0x12, 0x0,	/* FC_UP */
/* 2536 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (2500) */
/* 2538 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 2540 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2544 */	NdrFcLong( 0x3e8 ),	/* 1000 */

			0x0 
";
        #endregion
    }
}
