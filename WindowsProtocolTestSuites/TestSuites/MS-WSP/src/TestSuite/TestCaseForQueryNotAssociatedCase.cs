// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.WspTS
{
    using Microsoft.Protocols.TestTools;
    using Microsoft.Protocols.TestTools.Messages.Runtime;
    using System;

    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class TestCaseForQueryNotAssociatedCase : WspModelTestBase
    {
        public TestCaseForQueryNotAssociatedCase()
        {
            this.SetSwitch("generatedtestpath", "..\\\\TestSuite");
            this.SetSwitch("generatedtestnamespace", "Microsoft.Protocols.TestSuites.WspTS");
            this.SetSwitch("graphtimeout", "1000");
            this.SetSwitch("statebound", "-1");
            this.SetSwitch("stepbound", "6000");
            this.SetSwitch("pathbound", "32");
            this.SetSwitch("stepsperstatebound", "1024");
        }

        #region Expect Delegates
        public delegate void CPMConnectOutResponseDelegate1(uint errorCode);

        public delegate void CPMGetQueryStatusOutResponseDelegate1(uint errorCode);

        public delegate void CPMGetQueryStatusExOutResponseDelegate1(uint errorCode);

        public delegate void CPMRatioFinishedOutResponseDelegate1(uint errorCode);

        public delegate void CPMSendNotifyOutResponseDelegate1(uint errorCode);

        public delegate void CPMSetBindingsInResponseDelegate1(uint errorCode);

        public delegate void CPMFetchValueOutResponseDelegate1(uint errorCode);

        public delegate void CPMFreeCursorOutResponseDelegate1(uint errorCode);

        public delegate void GetServerPlatformDelegate1(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.SkuOsVersion platform, bool @return);

        public delegate void CPMCreateQueryOutResponseDelegate1(uint errorCode);

        public delegate void CPMGetRowsOutResponseDelegate1(uint errorCode);

        public delegate void CPMCiStateInOutResponseDelegate1(uint errorCode);

        public delegate void CPMFindIndicesOutResponseDelegate1(uint errorCode);

        public delegate void CPMGetRowsetNotifyOutResponseDelegate1(uint errorCode);

        public delegate void CPMGetScopeStatisticsOutResponseDelegate1(uint errorCode);

        public delegate void CPMSetScopePrioritizationOutResponseDelegate1(uint errorCode);

        public delegate void CPMUpdateDocumentsOutResponseDelegate1(uint errorCode);
        #endregion

        #region Event Metadata
        static System.Reflection.MethodBase CPMConnectInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMConnectIn");

        static System.Reflection.EventInfo CPMConnectOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMConnectOutResponse");

        static System.Reflection.MethodBase CPMGetQueryStatusInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetQueryStatusIn", typeof(bool));

        static System.Reflection.EventInfo CPMGetQueryStatusOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetQueryStatusOutResponse");

        static System.Reflection.MethodBase CPMGetQueryStatusExInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetQueryStatusExIn", typeof(bool));

        static System.Reflection.EventInfo CPMGetQueryStatusExOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetQueryStatusExOutResponse");

        static System.Reflection.MethodBase CPMRatioFinishedInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMRatioFinishedIn", typeof(bool));

        static System.Reflection.EventInfo CPMRatioFinishedOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMRatioFinishedOutResponse");

        static System.Reflection.MethodBase CPMGetNotifyInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetNotify", typeof(bool));

        static System.Reflection.EventInfo CPMSendNotifyOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSendNotifyOutResponse");

        static System.Reflection.MethodBase CPMSetBindingsInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSetBindingsIn", typeof(bool), typeof(bool));

        static System.Reflection.EventInfo CPMSetBindingsInResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSetBindingsInResponse");

        static System.Reflection.MethodBase CPMFetchValueInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFetchValueIn", typeof(bool));

        static System.Reflection.EventInfo CPMFetchValueOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFetchValueOutResponse");

        static System.Reflection.MethodBase CPMFreeCursorInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFreeCursorIn", typeof(bool));

        static System.Reflection.EventInfo CPMFreeCursorOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFreeCursorOutResponse");

        static System.Reflection.MethodBase GetServerPlatformInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "GetServerPlatform", typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.SkuOsVersion).MakeByRefType());

        static System.Reflection.MethodBase CPMCreateQueryInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMCreateQueryIn", typeof(bool));

        static System.Reflection.MethodBase CPMGetRowsInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetRowsIn", typeof(bool));

        static System.Reflection.MethodBase CPMCiStateInOutInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMCiStateInOut");

        static System.Reflection.MethodBase CPMDisconnectInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMDisconnect");

        static System.Reflection.MethodBase CPMFindIndicesInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFindIndicesIn", typeof(bool));

        static System.Reflection.MethodBase CPMGetRowsetNotifyInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetRowsetNotifyIn", typeof(int), typeof(bool));

        static System.Reflection.MethodBase CPMSetScopePrioritizationInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSetScopePrioritizationIn", typeof(uint));

        static System.Reflection.MethodBase CPMGetScopeStatisticsInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetScopeStatisticsIn");

        static System.Reflection.EventInfo CPMCreateQueryOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMCreateQueryOutResponse");

        static System.Reflection.EventInfo CPMGetRowsOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetRowsOutResponse");

        static System.Reflection.EventInfo CPMCiStateInOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMCiStateInOutResponse");

        static System.Reflection.EventInfo CPMFindIndicesOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFindIndicesOutResponse");

        static System.Reflection.EventInfo CPMGetRowsetNotifyOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetRowsetNotifyOutResponse");

        static System.Reflection.EventInfo CPMGetScopeStatisticsOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetScopeStatisticsOutResponse");

        static System.Reflection.EventInfo CPMSetScopePrioritizationOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSetScopePrioritizationOutResponse");

        #endregion

        #region Adapter Instances
        private Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter IWspAdapterInstance;
        #endregion

        #region Variables
        private IVariable<uint> returnCode1;
        #endregion

        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context)
        {
            PtfTestClassBase.Initialize(context);
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup()
        {
            PtfTestClassBase.Cleanup();
        }
        #endregion

        #region Test Initialization and Cleanup
        protected override void TestInitialize()
        {
            this.InitializeTestManager();
            this.IWspAdapterInstance = ((Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter)(this.GetAdapter(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter))));
            this.Subscribe(CPMConnectOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetQueryStatusOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetQueryStatusExOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMRatioFinishedOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMSendNotifyOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMSetBindingsInResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMFetchValueOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMFreeCursorOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMCreateQueryOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetRowsOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMCiStateInOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMFindIndicesOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetRowsetNotifyOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetScopeStatisticsOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMSetScopePrioritizationOutResponseInfo, this.IWspAdapterInstance);
            this.returnCode1 = this.Manager.CreateVariable<uint>("returnCode1");
        }

        protected override void TestCleanup()
        {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion

        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"MS-WSP_R592, MS-WSP_R647, MS-WSP_R648, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-WSP_R673, MS-WSP_R678, MS-WSP_R681, MS-WSP_R687, MS-WSP_R689, MS-WSP_R691, MS-WSP_R694, MS-WSP_R699, MS-WSP_R728, MS-WSP_R730, MS-WSP_R734, MS-WSP_R736, MS-WSP_R743, MS-WSP_R747, MS-WSP_R752, MS-WSP_R792")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CPMCreateQuery")]
        public virtual void TestCaseForQueryNotAssociatedCaseS0()
        {
            this.Manager.BeginTest("TestCaseForQueryNotAssociatedCaseS0");
            this.Manager.Comment("reaching state \'S0\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S1\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S2\'");
            int temp2 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMConnectOutResponseChecker)), new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMConnectOutResponseChecker1)));
            if ((temp2 == 0))
            {
                this.Manager.Comment("reaching state \'S3\'");
                this.Manager.Comment("executing step \'call CPMGetQueryStatusIn(True)\'");
                this.IWspAdapterInstance.CPMGetQueryStatusIn(true);
                this.Manager.Comment("reaching state \'S5\'");
                this.Manager.Comment("checking step \'return CPMGetQueryStatusIn\'");
                this.Manager.Comment("reaching state \'S7\'");
                this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMGetQueryStatusOutResponseInfo, null, new CPMGetQueryStatusOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMGetQueryStatusOutResponseChecker)));
                this.Manager.Comment("reaching state \'S9\'");
                this.Manager.Comment("executing step \'call CPMGetQueryStatusExIn(True)\'");
                this.IWspAdapterInstance.CPMGetQueryStatusExIn(true);
                this.Manager.Comment("reaching state \'S11\'");
                this.Manager.Comment("checking step \'return CPMGetQueryStatusExIn\'");
                this.Manager.Comment("reaching state \'S13\'");
                this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMGetQueryStatusExOutResponseInfo, null, new CPMGetQueryStatusExOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMGetQueryStatusExOutResponseChecker)));
                this.Manager.Comment("reaching state \'S15\'");
                this.Manager.Comment("executing step \'call CPMRatioFinishedIn(True)\'");
                this.IWspAdapterInstance.CPMRatioFinishedIn(true);
                this.Manager.Comment("reaching state \'S17\'");
                this.Manager.Comment("checking step \'return CPMRatioFinishedIn\'");
                this.Manager.Comment("reaching state \'S19\'");
                this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMRatioFinishedOutResponseInfo, null, new CPMRatioFinishedOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMRatioFinishedOutResponseChecker)));
                this.Manager.Comment("reaching state \'S21\'");
                this.Manager.Comment("executing step \'call CPMGetNotify(True)\'");
                this.IWspAdapterInstance.CPMGetNotify(true);
                this.Manager.Comment("reaching state \'S23\'");
                this.Manager.Comment("checking step \'return CPMGetNotify\'");
                this.Manager.Comment("reaching state \'S25\'");
                this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMSendNotifyOutResponseInfo, null, new CPMSendNotifyOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMSendNotifyOutResponseChecker)));
                this.Manager.Comment("reaching state \'S27\'");
                this.Manager.Comment("executing step \'call CPMSetBindingsIn(False,True)\'");
                this.IWspAdapterInstance.CPMSetBindingsIn(false, true);
                this.Manager.Comment("reaching state \'S29\'");
                this.Manager.Comment("checking step \'return CPMSetBindingsIn\'");
                this.Manager.Comment("reaching state \'S31\'");
                int temp0 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMSetBindingsInResponseInfo, null, new CPMSetBindingsInResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMSetBindingsInResponseChecker)), new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMSetBindingsInResponseInfo, null, new CPMSetBindingsInResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMSetBindingsInResponseChecker1)));
                if ((temp0 == 0))
                {
                    this.Manager.Comment("reaching state \'S33\'");
                    this.Manager.Comment("executing step \'call CPMFetchValueIn(True)\'");
                    this.IWspAdapterInstance.CPMFetchValueIn(true);
                    this.Manager.Comment("reaching state \'S37\'");
                    this.Manager.Comment("checking step \'return CPMFetchValueIn\'");
                    this.Manager.Comment("reaching state \'S41\'");
                    this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMFetchValueOutResponseInfo, null, new CPMFetchValueOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMFetchValueOutResponseChecker)));
                    this.Manager.Comment("reaching state \'S45\'");
                    this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
                    this.IWspAdapterInstance.CPMFreeCursorIn(true);
                    this.Manager.Comment("reaching state \'S49\'");
                    this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
                    this.Manager.Comment("reaching state \'S53\'");
                    this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMFreeCursorOutResponseChecker)));
                    this.Manager.Comment("reaching state \'S57\'");
                    goto label0;
                }
                if ((temp0 == 1))
                {
                    this.Manager.Comment("reaching state \'S34\'");
                    this.Manager.Comment("executing step \'call CPMFetchValueIn(True)\'");
                    this.IWspAdapterInstance.CPMFetchValueIn(true);
                    this.Manager.Comment("reaching state \'S38\'");
                    this.Manager.Comment("checking step \'return CPMFetchValueIn\'");
                    this.Manager.Comment("reaching state \'S42\'");
                    this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMFetchValueOutResponseInfo, null, new CPMFetchValueOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMFetchValueOutResponseChecker1)));
                    this.Manager.Comment("reaching state \'S46\'");
                    this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
                    this.IWspAdapterInstance.CPMFreeCursorIn(true);
                    this.Manager.Comment("reaching state \'S50\'");
                    this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
                    this.Manager.Comment("reaching state \'S54\'");
                    this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMFreeCursorOutResponseChecker1)));
                    this.Manager.Comment("reaching state \'S58\'");
                    goto label0;
                }
                throw new InvalidOperationException("never reached");
            label0:
                ;
                goto label2;
            }
            if ((temp2 == 1))
            {
                this.Manager.Comment("reaching state \'S4\'");
                this.Manager.Comment("executing step \'call CPMGetQueryStatusIn(True)\'");
                this.IWspAdapterInstance.CPMGetQueryStatusIn(true);
                this.Manager.Comment("reaching state \'S6\'");
                this.Manager.Comment("checking step \'return CPMGetQueryStatusIn\'");
                this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
                this.Manager.Comment("reaching state \'S8\'");
                this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMGetQueryStatusOutResponseInfo, null, new CPMGetQueryStatusOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMGetQueryStatusOutResponseChecker1)));
                this.Manager.Comment("reaching state \'S10\'");
                this.Manager.Comment("executing step \'call CPMGetQueryStatusExIn(True)\'");
                this.IWspAdapterInstance.CPMGetQueryStatusExIn(true);
                this.Manager.Comment("reaching state \'S12\'");
                this.Manager.Comment("checking step \'return CPMGetQueryStatusExIn\'");
                this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
                this.Manager.Comment("reaching state \'S14\'");
                this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMGetQueryStatusExOutResponseInfo, null, new CPMGetQueryStatusExOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMGetQueryStatusExOutResponseChecker1)));
                this.Manager.Comment("reaching state \'S16\'");
                this.Manager.Comment("executing step \'call CPMRatioFinishedIn(True)\'");
                this.IWspAdapterInstance.CPMRatioFinishedIn(true);
                this.Manager.Comment("reaching state \'S18\'");
                this.Manager.Comment("checking step \'return CPMRatioFinishedIn\'");
                this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
                this.Manager.Comment("reaching state \'S20\'");
                this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMRatioFinishedOutResponseInfo, null, new CPMRatioFinishedOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMRatioFinishedOutResponseChecker1)));
                this.Manager.Comment("reaching state \'S22\'");
                this.Manager.Comment("executing step \'call CPMGetNotify(True)\'");
                this.IWspAdapterInstance.CPMGetNotify(true);
                this.Manager.Comment("reaching state \'S24\'");
                this.Manager.Comment("checking step \'return CPMGetNotify\'");
                this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
                this.Manager.Comment("reaching state \'S26\'");
                this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMSendNotifyOutResponseInfo, null, new CPMSendNotifyOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMSendNotifyOutResponseChecker1)));
                this.Manager.Comment("reaching state \'S28\'");
                this.Manager.Comment("executing step \'call CPMSetBindingsIn(False,True)\'");
                this.IWspAdapterInstance.CPMSetBindingsIn(false, true);
                this.Manager.Comment("reaching state \'S30\'");
                this.Manager.Comment("checking step \'return CPMSetBindingsIn\'");
                this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
                this.Manager.Comment("reaching state \'S32\'");
                int temp1 = this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMSetBindingsInResponseInfo, null, new CPMSetBindingsInResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMSetBindingsInResponseChecker2)), new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMSetBindingsInResponseInfo, null, new CPMSetBindingsInResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMSetBindingsInResponseChecker3)));
                if ((temp1 == 0))
                {
                    this.Manager.Comment("reaching state \'S35\'");
                    this.Manager.Comment("executing step \'call CPMFetchValueIn(True)\'");
                    this.IWspAdapterInstance.CPMFetchValueIn(true);
                    this.Manager.Comment("reaching state \'S39\'");
                    this.Manager.Comment("checking step \'return CPMFetchValueIn\'");
                    this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
                    this.Manager.Comment("reaching state \'S43\'");
                    this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMFetchValueOutResponseInfo, null, new CPMFetchValueOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMFetchValueOutResponseChecker2)));
                    this.Manager.Comment("reaching state \'S47\'");
                    this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
                    this.IWspAdapterInstance.CPMFreeCursorIn(true);
                    this.Manager.Comment("reaching state \'S51\'");
                    this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
                    this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
                    this.Manager.Comment("reaching state \'S55\'");
                    this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMFreeCursorOutResponseChecker2)));
                    this.Manager.Comment("reaching state \'S59\'");
                    goto label1;
                }
                if ((temp1 == 1))
                {
                    this.Manager.Comment("reaching state \'S36\'");
                    this.Manager.Comment("executing step \'call CPMFetchValueIn(True)\'");
                    this.IWspAdapterInstance.CPMFetchValueIn(true);
                    this.Manager.Comment("reaching state \'S40\'");
                    this.Manager.Comment("checking step \'return CPMFetchValueIn\'");
                    this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
                    this.Manager.Comment("reaching state \'S44\'");
                    this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMFetchValueOutResponseInfo, null, new CPMFetchValueOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMFetchValueOutResponseChecker3)));
                    this.Manager.Comment("reaching state \'S48\'");
                    this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
                    this.IWspAdapterInstance.CPMFreeCursorIn(true);
                    this.Manager.Comment("reaching state \'S52\'");
                    this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
                    this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
                    this.Manager.Comment("reaching state \'S56\'");
                    this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseForQueryNotAssociatedCase.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseForQueryNotAssociatedCaseS0CPMFreeCursorOutResponseChecker3)));
                    this.Manager.Comment("reaching state \'S60\'");
                    goto label1;
                }
                throw new InvalidOperationException("never reached");
            label1:
                ;
                goto label2;
            }
            throw new InvalidOperationException("never reached");
        label2:
            ;
            this.Manager.EndTest();
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S2)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMGetQueryStatusOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetQueryStatusOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMGetQueryStatusOutResponse, s" +
                        "tate S7)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R678");
            this.Manager.Checkpoint("MS-WSP_R673");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMGetQueryStatusExOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetQueryStatusExOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMGetQueryStatusExOutResponse," +
                        " state S13)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R681");
            this.Manager.Checkpoint("MS-WSP_R687");
            this.Manager.Checkpoint("MS-WSP_R689");
            this.Manager.Checkpoint("MS-WSP_R691");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMRatioFinishedOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMRatioFinishedOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMRatioFinishedOutResponse, st" +
                        "ate S19)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R694");
            this.Manager.Checkpoint("MS-WSP_R699");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMSendNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMSendNotifyOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMSendNotifyOutResponse, state" +
                        " S25)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R752");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMSetBindingsInResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMSetBindingsInResponse(2147749384)\'");
            this.Manager.Assert((errorCode == 2147749384), string.Format("expected \'2147749384\', actual \'{0}\' (errorCode of CPMSetBindingsInResponse, state" +
                        " S31)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R747");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMFetchValueOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFetchValueOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMFetchValueOutResponse, state" +
                        " S41)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R728");
            this.Manager.Checkpoint("MS-WSP_R734");
            this.Manager.Checkpoint("MS-WSP_R736");
            this.Manager.Checkpoint("MS-WSP_R730");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state" +
                        " S53)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R792");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMSetBindingsInResponseChecker1(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMSetBindingsInResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMSetBindingsInResponse, state" +
                        " S31)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R743");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMFetchValueOutResponseChecker1(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFetchValueOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMFetchValueOutResponse, state" +
                        " S42)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R728");
            this.Manager.Checkpoint("MS-WSP_R734");
            this.Manager.Checkpoint("MS-WSP_R736");
            this.Manager.Checkpoint("MS-WSP_R730");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMFreeCursorOutResponseChecker1(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state" +
                        " S54)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R792");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMConnectOutResponseChecker1(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(returnCode)\'");
            this.returnCode1.Value = errorCode;
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R648");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMGetQueryStatusOutResponseChecker1(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetQueryStatusOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMGetQueryStatusOutResponse, s" +
                        "tate S8)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R678");
            this.Manager.Checkpoint("MS-WSP_R673");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMGetQueryStatusExOutResponseChecker1(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetQueryStatusExOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMGetQueryStatusExOutResponse," +
                        " state S14)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R681");
            this.Manager.Checkpoint("MS-WSP_R687");
            this.Manager.Checkpoint("MS-WSP_R689");
            this.Manager.Checkpoint("MS-WSP_R691");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMRatioFinishedOutResponseChecker1(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMRatioFinishedOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMRatioFinishedOutResponse, st" +
                        "ate S20)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R694");
            this.Manager.Checkpoint("MS-WSP_R699");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMSendNotifyOutResponseChecker1(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMSendNotifyOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMSendNotifyOutResponse, state" +
                        " S26)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R752");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMSetBindingsInResponseChecker2(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMSetBindingsInResponse(2147749384)\'");
            this.Manager.Assert((errorCode == 2147749384), string.Format("expected \'2147749384\', actual \'{0}\' (errorCode of CPMSetBindingsInResponse, state" +
                        " S32)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R747");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMFetchValueOutResponseChecker2(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFetchValueOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMFetchValueOutResponse, state" +
                        " S43)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R728");
            this.Manager.Checkpoint("MS-WSP_R734");
            this.Manager.Checkpoint("MS-WSP_R736");
            this.Manager.Checkpoint("MS-WSP_R730");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMFreeCursorOutResponseChecker2(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state" +
                        " S55)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R792");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMSetBindingsInResponseChecker3(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMSetBindingsInResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMSetBindingsInResponse, state" +
                        " S32)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R743");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMFetchValueOutResponseChecker3(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFetchValueOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMFetchValueOutResponse, state" +
                        " S44)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R728");
            this.Manager.Checkpoint("MS-WSP_R734");
            this.Manager.Checkpoint("MS-WSP_R736");
            this.Manager.Checkpoint("MS-WSP_R730");
        }

        private void TestCaseForQueryNotAssociatedCaseS0CPMFreeCursorOutResponseChecker3(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(3221225485)\'");
            this.Manager.Assert((errorCode == 3221225485), string.Format("expected \'3221225485\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state" +
                        " S56)", errorCode));
            this.Manager.Assert(!((this.returnCode1.Value == ((uint)(0)))), "Fail to check the assumptions, (returnCode1!=0)");
            this.Manager.Checkpoint("MS-WSP_R792");
        }
        #endregion
    }
}
