// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Protocols.TestSuites.WspTS
{
    using Microsoft.Protocols.TestTools;
    using Microsoft.Protocols.TestTools.Messages.Runtime;

    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class TestCaseGetRowsetNotify : WspModelTestBase
    {
        public TestCaseGetRowsetNotify()
        {
            this.SetSwitch("generatedtestpath", "..\\\\TestSuite");
            this.SetSwitch("generatedtestnamespace", "Microsoft.Protocols.TestSuites.WspTS");
            this.SetSwitch("graphtimeout", "1000");
            this.SetSwitch("statebound", "-1");
            this.SetSwitch("stepbound", "6000");
            this.SetSwitch("pathbound", "32");
            this.SetSwitch("stepsperstatebound", "1024");
        }

        #region Expect Delegates
        public delegate void CPMConnectOutResponseDelegate1(uint errorCode);

        public delegate void CPMCreateQueryOutResponseDelegate1(uint errorCode);

        public delegate void CPMGetRowsetNotifyOutResponseDelegate1(uint errorCode);

        public delegate void CPMFreeCursorOutResponseDelegate1(uint errorCode);

        public delegate void GetServerPlatformDelegate1(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.SkuOsVersion platform, bool @return);

        public delegate void CPMGetQueryStatusOutResponseDelegate1(uint errorCode);

        public delegate void CPMGetQueryStatusExOutResponseDelegate1(uint errorCode);

        public delegate void CPMRatioFinishedOutResponseDelegate1(uint errorCode);

        public delegate void CPMSetBindingsInResponseDelegate1(uint errorCode);

        public delegate void CPMGetRowsOutResponseDelegate1(uint errorCode);

        public delegate void CPMFetchValueOutResponseDelegate1(uint errorCode);

        public delegate void CPMCiStateInOutResponseDelegate1(uint errorCode);

        public delegate void CPMSendNotifyOutResponseDelegate1(uint errorCode);

        public delegate void CPMFindIndicesOutResponseDelegate1(uint errorCode);

        public delegate void CPMGetScopeStatisticsOutResponseDelegate1(uint errorCode);

        public delegate void CPMSetScopePrioritizationOutResponseDelegate1(uint errorCode);

        public delegate void CPMUpdateDocumentsOutResponseDelegate1(uint errorCode);
        #endregion

        #region Event Metadata
        static System.Reflection.MethodBase CPMConnectInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMConnectIn");

        static System.Reflection.EventInfo CPMConnectOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMConnectOutResponse");

        static System.Reflection.MethodBase CPMCreateQueryInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMCreateQueryIn", typeof(bool));

        static System.Reflection.EventInfo CPMCreateQueryOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMCreateQueryOutResponse");

        static System.Reflection.MethodBase CPMGetRowsetNotifyInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetRowsetNotifyIn", typeof(int), typeof(bool));

        static System.Reflection.EventInfo CPMGetRowsetNotifyOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetRowsetNotifyOutResponse");

        static System.Reflection.MethodBase CPMFreeCursorInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFreeCursorIn", typeof(bool));

        static System.Reflection.EventInfo CPMFreeCursorOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFreeCursorOutResponse");

        static System.Reflection.MethodBase CPMDisconnectInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMDisconnect");

        static System.Reflection.MethodBase GetServerPlatformInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "GetServerPlatform", typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.SkuOsVersion).MakeByRefType());

        static System.Reflection.MethodBase CPMGetQueryStatusInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetQueryStatusIn", typeof(bool));

        static System.Reflection.MethodBase CPMGetQueryStatusExInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetQueryStatusExIn", typeof(bool));

        static System.Reflection.MethodBase CPMRatioFinishedInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMRatioFinishedIn", typeof(bool));

        static System.Reflection.MethodBase CPMSetBindingsInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSetBindingsIn", typeof(bool), typeof(bool));

        static System.Reflection.MethodBase CPMGetRowsInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetRowsIn", typeof(bool));

        static System.Reflection.MethodBase CPMFetchValueInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFetchValueIn", typeof(bool));

        static System.Reflection.MethodBase CPMCiStateInOutInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMCiStateInOut");

        static System.Reflection.MethodBase CPMGetNotifyInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetNotify", typeof(bool));

        static System.Reflection.MethodBase CPMFindIndicesInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFindIndicesIn", typeof(bool));

        static System.Reflection.MethodBase CPMSetScopePrioritizationInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSetScopePrioritizationIn", typeof(uint));

        static System.Reflection.MethodBase CPMGetScopeStatisticsInInfo = TestManagerHelpers.GetMethodInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetScopeStatisticsIn");

        static System.Reflection.EventInfo CPMGetQueryStatusOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetQueryStatusOutResponse");

        static System.Reflection.EventInfo CPMGetQueryStatusExOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetQueryStatusExOutResponse");

        static System.Reflection.EventInfo CPMRatioFinishedOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMRatioFinishedOutResponse");

        static System.Reflection.EventInfo CPMSetBindingsInResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSetBindingsInResponse");

        static System.Reflection.EventInfo CPMGetRowsOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetRowsOutResponse");

        static System.Reflection.EventInfo CPMFetchValueOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFetchValueOutResponse");

        static System.Reflection.EventInfo CPMCiStateInOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMCiStateInOutResponse");

        static System.Reflection.EventInfo CPMSendNotifyOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSendNotifyOutResponse");

        static System.Reflection.EventInfo CPMFindIndicesOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMFindIndicesOutResponse");

        static System.Reflection.EventInfo CPMGetScopeStatisticsOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMGetScopeStatisticsOutResponse");

        static System.Reflection.EventInfo CPMSetScopePrioritizationOutResponseInfo = TestManagerHelpers.GetEventInfo(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter), "CPMSetScopePrioritizationOutResponse");

        #endregion

        #region Adapter Instances
        private Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter IWspAdapterInstance;
        #endregion

        #region Class Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext context)
        {
            PtfTestClassBase.Initialize(context);
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void ClassCleanup()
        {
            PtfTestClassBase.Cleanup();
        }
        #endregion

        #region Test Initialization and Cleanup
        protected override void TestInitialize()
        {
            this.InitializeTestManager();
            this.IWspAdapterInstance = ((Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter)(this.GetAdapter(typeof(Microsoft.Protocols.TestTools.StackSdk.FileAccessService.Wsp.Adapter.IWspAdapter))));
            this.Subscribe(CPMConnectOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMCreateQueryOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetRowsetNotifyOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMFreeCursorOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetQueryStatusOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetQueryStatusExOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMRatioFinishedOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMSetBindingsInResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetRowsOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMFetchValueOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMCiStateInOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMSendNotifyOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMFindIndicesOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMGetScopeStatisticsOutResponseInfo, this.IWspAdapterInstance);
            this.Subscribe(CPMSetScopePrioritizationOutResponseInfo, this.IWspAdapterInstance);
        }

        protected override void TestCleanup()
        {
            base.TestCleanup();
            this.CleanupTestManager();
        }
        #endregion

        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CPMGetRowsetNotify")]
        public virtual void TestCaseGetRowsetNotifyS0()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS0");
            this.Manager.Comment("reaching state \'S0\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S1\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S20\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS0CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S30\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(True)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(true);
            this.Manager.Comment("reaching state \'S40\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S50\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS0CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S60\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(4,True)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(4, true);
            this.Manager.Comment("reaching state \'S70\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS0CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS0CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS0CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S20)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS0CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S50)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS0CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS0CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion

        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CPMGetRowsetNotify")]
        public virtual void TestCaseGetRowsetNotifyS2()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS2");
            this.Manager.Comment("reaching state \'S2\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S3\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S21\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS2CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S31\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(False)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(false);
            this.Manager.Comment("reaching state \'S41\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S51\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS2CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S61\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(0,False)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(0, false);
            this.Manager.Comment("reaching state \'S71\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS2CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS2CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS2CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S21)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS2CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S51)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS2CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS2CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion

        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CPMGetRowsetNotify")]
        public virtual void TestCaseGetRowsetNotifyS4()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS4");
            this.Manager.Comment("reaching state \'S4\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S5\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S22\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS4CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S32\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(True)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(true);
            this.Manager.Comment("reaching state \'S42\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S52\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS4CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S62\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(0,True)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(0, true);
            this.Manager.Comment("reaching state \'S72\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS4CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS4CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS4CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S22)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS4CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S52)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS4CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS4CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion

        #region Test Starting in S6
        //[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        public virtual void TestCaseGetRowsetNotifyS6()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS6");
            this.Manager.Comment("reaching state \'S6\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S7\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S23\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS6CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S33\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(True)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(true);
            this.Manager.Comment("reaching state \'S43\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S53\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS6CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S63\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(1,False)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(1, false);
            this.Manager.Comment("reaching state \'S73\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS6CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS6CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS6CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S23)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS6CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S53)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS6CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS6CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion

        #region Test Starting in S8
        //[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        public virtual void TestCaseGetRowsetNotifyS8()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS8");
            this.Manager.Comment("reaching state \'S8\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S9\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S24\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS8CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S34\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(True)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(true);
            this.Manager.Comment("reaching state \'S44\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S54\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS8CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S64\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(1,True)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(1, true);
            this.Manager.Comment("reaching state \'S74\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS8CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS8CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS8CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S24)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS8CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S54)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS8CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS8CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion

        #region Test Starting in S10
        //[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        public virtual void TestCaseGetRowsetNotifyS10()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS10");
            this.Manager.Comment("reaching state \'S10\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S11\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S25\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS10CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S35\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(True)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(true);
            this.Manager.Comment("reaching state \'S45\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S55\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS10CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S65\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(2,False)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(2, false);
            this.Manager.Comment("reaching state \'S75\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS10CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS10CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS10CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S25)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS10CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S55)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS10CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS10CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion

        #region Test Starting in S12
        //[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        public virtual void TestCaseGetRowsetNotifyS12()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS12");
            this.Manager.Comment("reaching state \'S12\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S13\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S26\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS12CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S36\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(True)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(true);
            this.Manager.Comment("reaching state \'S46\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S56\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS12CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S66\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(2,True)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(2, true);
            this.Manager.Comment("reaching state \'S76\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS12CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS12CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS12CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S26)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS12CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S56)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS12CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS12CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion

        #region Test Starting in S14
        //[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        public virtual void TestCaseGetRowsetNotifyS14()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS14");
            this.Manager.Comment("reaching state \'S14\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S15\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S27\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS14CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S37\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(True)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(true);
            this.Manager.Comment("reaching state \'S47\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S57\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS14CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S67\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(3,False)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(3, false);
            this.Manager.Comment("reaching state \'S77\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS14CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS14CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS14CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S27)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS14CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S57)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS14CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS14CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion

        #region Test Starting in S16
        //[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        public virtual void TestCaseGetRowsetNotifyS16()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS16");
            this.Manager.Comment("reaching state \'S16\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S17\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S28\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS16CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S38\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(True)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(true);
            this.Manager.Comment("reaching state \'S48\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S58\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS16CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S68\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(3,True)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(3, true);
            this.Manager.Comment("reaching state \'S78\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS16CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS16CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS16CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S28)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS16CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S58)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS16CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS16CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion

        #region Test Starting in S18
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MS-WSP_R592, MS-WSP_R599, MS-WSP_R647, MS-WSP_R651, MS-WSP_R653, MS-WSP_R654, MS-" +
            "WSP_R655, MS-WSP_R657, MS-WSP_R791, MS-WSP_R793")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CPMGetRowsetNotify")]
        public virtual void TestCaseGetRowsetNotifyS18()
        {
            this.Manager.BeginTest("TestCaseGetRowsetNotifyS18");
            this.Manager.Comment("reaching state \'S18\'");
            this.Manager.Comment("executing step \'call CPMConnectIn()\'");
            this.IWspAdapterInstance.CPMConnectIn();
            this.Manager.Comment("reaching state \'S19\'");
            this.Manager.Comment("checking step \'return CPMConnectIn\'");
            this.Manager.Comment("reaching state \'S29\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMConnectOutResponseInfo, null, new CPMConnectOutResponseDelegate1(this.TestCaseGetRowsetNotifyS18CPMConnectOutResponseChecker)));
            this.Manager.Comment("reaching state \'S39\'");
            this.Manager.Comment("executing step \'call CPMCreateQueryIn(False)\'");
            this.IWspAdapterInstance.CPMCreateQueryIn(false);
            this.Manager.Comment("reaching state \'S49\'");
            this.Manager.Comment("checking step \'return CPMCreateQueryIn\'");
            this.Manager.Comment("reaching state \'S59\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMCreateQueryOutResponseInfo, null, new CPMCreateQueryOutResponseDelegate1(this.TestCaseGetRowsetNotifyS18CPMCreateQueryOutResponseChecker)));
            this.Manager.Comment("reaching state \'S69\'");
            this.Manager.Comment("executing step \'call CPMGetRowsetNotifyIn(4,False)\'");
            this.IWspAdapterInstance.CPMGetRowsetNotifyIn(4, false);
            this.Manager.Comment("reaching state \'S79\'");
            this.Manager.Comment("checking step \'return CPMGetRowsetNotifyIn\'");
            this.Manager.Comment("reaching state \'S80\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMGetRowsetNotifyOutResponseInfo, null, new CPMGetRowsetNotifyOutResponseDelegate1(this.TestCaseGetRowsetNotifyS18CPMGetRowsetNotifyOutResponseChecker)));
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("executing step \'call CPMFreeCursorIn(True)\'");
            this.IWspAdapterInstance.CPMFreeCursorIn(true);
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return CPMFreeCursorIn\'");
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.ExpectEvent(this.QuiescenceTimeout, true, new ExpectedEvent(TestCaseGetRowsetNotify.CPMFreeCursorOutResponseInfo, null, new CPMFreeCursorOutResponseDelegate1(this.TestCaseGetRowsetNotifyS18CPMFreeCursorOutResponseChecker)));
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("executing step \'call CPMDisconnect()\'");
            this.IWspAdapterInstance.CPMDisconnect();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return CPMDisconnect\'");
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.EndTest();
        }

        private void TestCaseGetRowsetNotifyS18CPMConnectOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMConnectOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMConnectOutResponse, state S29)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R647");
            this.Manager.Checkpoint("MS-WSP_R651");
            this.Manager.Checkpoint("MS-WSP_R653");
            this.Manager.Checkpoint("MS-WSP_R654");
        }

        private void TestCaseGetRowsetNotifyS18CPMCreateQueryOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMCreateQueryOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMCreateQueryOutResponse, state S59)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R655");
            this.Manager.Checkpoint("MS-WSP_R657");
        }

        private void TestCaseGetRowsetNotifyS18CPMGetRowsetNotifyOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMGetRowsetNotifyOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMGetRowsetNotifyOutResponse, state S80" +
                        ")", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
        }

        private void TestCaseGetRowsetNotifyS18CPMFreeCursorOutResponseChecker(uint errorCode)
        {
            this.Manager.Comment("checking step \'event CPMFreeCursorOutResponse(0)\'");
            this.Manager.Assert((errorCode == 0), string.Format("expected \'0\', actual \'{0}\' (errorCode of CPMFreeCursorOutResponse, state S92)", errorCode));
            this.Manager.Checkpoint("MS-WSP_R592");
            this.Manager.Checkpoint("MS-WSP_R599");
            this.Manager.Checkpoint("MS-WSP_R791");
            this.Manager.Checkpoint("MS-WSP_R793");
        }
        #endregion
    }
}
